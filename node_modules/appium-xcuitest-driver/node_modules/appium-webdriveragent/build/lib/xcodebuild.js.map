{"version":3,"file":"xcodebuild.js","names":["DEFAULT_SIGNING_ID","PREBUILD_DELAY","RUNNER_SCHEME_IOS","LIB_SCHEME_IOS","ERROR_WRITING_ATTACHMENT","ERROR_COPYING_ATTACHMENT","IGNORED_ERRORS","RUNNER_SCHEME_TV","LIB_SCHEME_TV","xcodeLog","logger","getLogger","XcodeBuild","constructor","xcodeVersion","device","args","log","defaultLogger","realDevice","agentPath","bootstrapPath","platformVersion","platformName","iosSdkVersion","showXcodeLog","xcodeConfigFile","xcodeOrgId","xcodeSigningId","keychainPath","keychainPassword","prebuildWDA","usePrebuiltWDA","useSimpleBuildTest","useXctestrunFile","launchTimeout","wdaRemotePort","updatedWDABundleId","derivedDataPath","mjpegServerPort","prebuildDelay","_","isNumber","allowProvisioningDeviceRegistration","resultBundlePath","resultBundleVersion","init","noSessionProxy","deviveInfo","isRealDevice","udid","xctestrunFilePath","setXctestrunFile","resetProjectFile","updateProjectFile","retrieveDerivedDataPath","_derivedDataPathPromise","stdout","exec","err","warn","message","pattern","match","truncate","length","debug","path","dirname","normalize","reset","prebuild","start","xcodebuild","B","delay","cleanProject","tmpIsTvOS","isTvOS","libScheme","runnerScheme","scheme","getCommand","buildOnly","cmd","buildCmd","testCmd","push","versionMatch","RegExp","process","env","APPIUM_XCUITEST_TREAT_WARNINGS_AS_ERRORS","createSubProcess","setRealDeviceSecurity","generateXcodeConfigFile","join","Object","assign","USE_PORT","WDA_PRODUCT_BUNDLE_IDENTIFIER","WDA_RUNNER_BUNDLE_ID","MJPEG_SERVER_PORT","upgradeTimestamp","getWDAUpgradeTimestamp","UPGRADE_TIMESTAMP","SubProcess","cwd","detached","stdio","logXcodeOutput","logMsg","isBoolean","on","stderr","out","includes","logLocation","first","remove","trim","split","v","startsWith","sep","ignoreError","some","x","_wda_error_occurred","line","EOL","error","_wda_error_message","resolve","reject","code","signal","data","fs","readFile","processExited","Error","timer","timing","Timer","status","waitForStart","msg","currentStatus","retries","parseInt","retryInterval","proxyTimeout","timeout","command","ios","ip","agentUrl","JSON","stringify","getDuration","asMilliSeconds","toFixed","quit","killProcess"],"sources":["../../lib/xcodebuild.js"],"sourcesContent":["import { retryInterval } from 'asyncbox';\nimport { SubProcess, exec } from 'teen_process';\nimport { fs, logger, timing } from 'appium/support';\nimport defaultLogger from './logger';\nimport B from 'bluebird';\nimport {\n  setRealDeviceSecurity, generateXcodeConfigFile, setXctestrunFile,\n  updateProjectFile, resetProjectFile, killProcess,\n  getWDAUpgradeTimestamp, isTvOS } from './utils';\nimport _ from 'lodash';\nimport path from 'path';\nimport { EOL } from 'os';\nimport { WDA_RUNNER_BUNDLE_ID } from './constants';\n\n\nconst DEFAULT_SIGNING_ID = 'iPhone Developer';\nconst PREBUILD_DELAY = 0;\nconst RUNNER_SCHEME_IOS = 'WebDriverAgentRunner';\nconst LIB_SCHEME_IOS = 'WebDriverAgentLib';\n\nconst ERROR_WRITING_ATTACHMENT = 'Error writing attachment data to file';\nconst ERROR_COPYING_ATTACHMENT = 'Error copying testing attachment';\nconst IGNORED_ERRORS = [\n  ERROR_WRITING_ATTACHMENT,\n  ERROR_COPYING_ATTACHMENT,\n  'Failed to remove screenshot at path',\n];\n\nconst RUNNER_SCHEME_TV = 'WebDriverAgentRunner_tvOS';\nconst LIB_SCHEME_TV = 'WebDriverAgentLib_tvOS';\n\nconst xcodeLog = logger.getLogger('Xcode');\n\n\nclass XcodeBuild {\n  constructor (xcodeVersion, device, args = {}, log = null) {\n    this.xcodeVersion = xcodeVersion;\n\n    this.device = device;\n    this.log = log ?? defaultLogger;\n\n    this.realDevice = args.realDevice;\n\n    this.agentPath = args.agentPath;\n    this.bootstrapPath = args.bootstrapPath;\n\n    this.platformVersion = args.platformVersion;\n    this.platformName = args.platformName;\n    this.iosSdkVersion = args.iosSdkVersion;\n\n    this.showXcodeLog = args.showXcodeLog;\n\n    this.xcodeConfigFile = args.xcodeConfigFile;\n    this.xcodeOrgId = args.xcodeOrgId;\n    this.xcodeSigningId = args.xcodeSigningId || DEFAULT_SIGNING_ID;\n    this.keychainPath = args.keychainPath;\n    this.keychainPassword = args.keychainPassword;\n\n    this.prebuildWDA = args.prebuildWDA;\n    this.usePrebuiltWDA = args.usePrebuiltWDA;\n    this.useSimpleBuildTest = args.useSimpleBuildTest;\n\n    this.useXctestrunFile = args.useXctestrunFile;\n\n    this.launchTimeout = args.launchTimeout;\n\n    this.wdaRemotePort = args.wdaRemotePort;\n\n    this.updatedWDABundleId = args.updatedWDABundleId;\n    this.derivedDataPath = args.derivedDataPath;\n\n    this.mjpegServerPort = args.mjpegServerPort;\n\n    this.prebuildDelay = _.isNumber(args.prebuildDelay) ? args.prebuildDelay : PREBUILD_DELAY;\n\n    this.allowProvisioningDeviceRegistration = args.allowProvisioningDeviceRegistration;\n\n    this.resultBundlePath = args.resultBundlePath;\n    this.resultBundleVersion = args.resultBundleVersion;\n  }\n\n  async init (noSessionProxy) {\n    this.noSessionProxy = noSessionProxy;\n\n    if (this.useXctestrunFile) {\n      const deviveInfo = {\n        isRealDevice: this.realDevice,\n        udid: this.device.udid,\n        platformVersion: this.platformVersion,\n        platformName: this.platformName\n      };\n      this.xctestrunFilePath = await setXctestrunFile(deviveInfo, this.iosSdkVersion, this.bootstrapPath, this.wdaRemotePort);\n      return;\n    }\n\n    // if necessary, update the bundleId to user's specification\n    if (this.realDevice) {\n      // In case the project still has the user specific bundle ID, reset the project file first.\n      // - We do this reset even if updatedWDABundleId is not specified,\n      //   since the previous updatedWDABundleId test has generated the user specific bundle ID project file.\n      // - We don't call resetProjectFile for simulator,\n      //   since simulator test run will work with any user specific bundle ID.\n      await resetProjectFile(this.agentPath);\n      if (this.updatedWDABundleId) {\n        await updateProjectFile(this.agentPath, this.updatedWDABundleId);\n      }\n    }\n  }\n\n  async retrieveDerivedDataPath () {\n    if (this.derivedDataPath) {\n      return this.derivedDataPath;\n    }\n\n    // avoid race conditions\n    if (this._derivedDataPathPromise) {\n      return await this._derivedDataPathPromise;\n    }\n\n    this._derivedDataPathPromise = (async () => {\n      let stdout;\n      try {\n        ({stdout} = await exec('xcodebuild', ['-project', this.agentPath, '-showBuildSettings']));\n      } catch (err) {\n        this.log.warn(`Cannot retrieve WDA build settings. Original error: ${err.message}`);\n        return;\n      }\n\n      const pattern = /^\\s*BUILD_DIR\\s+=\\s+(\\/.*)/m;\n      const match = pattern.exec(stdout);\n      if (!match) {\n        this.log.warn(`Cannot parse WDA build dir from ${_.truncate(stdout, {length: 300})}`);\n        return;\n      }\n      this.log.debug(`Parsed BUILD_DIR configuration value: '${match[1]}'`);\n      // Derived data root is two levels higher over the build dir\n      this.derivedDataPath = path.dirname(path.dirname(path.normalize(match[1])));\n      this.log.debug(`Got derived data root: '${this.derivedDataPath}'`);\n      return this.derivedDataPath;\n    })();\n    return await this._derivedDataPathPromise;\n  }\n\n  async reset () {\n    // if necessary, reset the bundleId to original value\n    if (this.realDevice && this.updatedWDABundleId) {\n      await resetProjectFile(this.agentPath);\n    }\n  }\n\n  async prebuild () {\n    // first do a build phase\n    this.log.debug('Pre-building WDA before launching test');\n    this.usePrebuiltWDA = true;\n    await this.start(true);\n\n    this.xcodebuild = null;\n\n    // pause a moment\n    await B.delay(this.prebuildDelay);\n  }\n\n  async cleanProject () {\n    const tmpIsTvOS = isTvOS(this.platformName);\n    const libScheme = tmpIsTvOS ? LIB_SCHEME_TV : LIB_SCHEME_IOS;\n    const runnerScheme = tmpIsTvOS ? RUNNER_SCHEME_TV : RUNNER_SCHEME_IOS;\n\n    for (const scheme of [libScheme, runnerScheme]) {\n      this.log.debug(`Cleaning the project scheme '${scheme}' to make sure there are no leftovers from previous installs`);\n      await exec('xcodebuild', [\n        'clean',\n        '-project', this.agentPath,\n        '-scheme', scheme,\n      ]);\n    }\n  }\n\n  getCommand (buildOnly = false) {\n    let cmd = 'xcodebuild';\n    let args;\n\n    // figure out the targets for xcodebuild\n    const [buildCmd, testCmd] = this.useSimpleBuildTest ? ['build', 'test'] : ['build-for-testing', 'test-without-building'];\n    if (buildOnly) {\n      args = [buildCmd];\n    } else if (this.usePrebuiltWDA || this.useXctestrunFile) {\n      args = [testCmd];\n    } else {\n      args = [buildCmd, testCmd];\n    }\n\n    if (this.allowProvisioningDeviceRegistration) {\n      // To -allowProvisioningDeviceRegistration flag takes effect, -allowProvisioningUpdates needs to be passed as well.\n      args.push('-allowProvisioningUpdates', '-allowProvisioningDeviceRegistration');\n    }\n\n    if (this.resultBundlePath) {\n      args.push('-resultBundlePath', this.resultBundlePath);\n    }\n\n    if (this.resultBundleVersion) {\n      args.push('-resultBundleVersion', this.resultBundleVersion);\n    }\n\n    if (this.useXctestrunFile) {\n      args.push('-xctestrun', this.xctestrunFilePath);\n    } else {\n      const runnerScheme = isTvOS(this.platformName) ? RUNNER_SCHEME_TV : RUNNER_SCHEME_IOS;\n      args.push('-project', this.agentPath, '-scheme', runnerScheme);\n      if (this.derivedDataPath) {\n        args.push('-derivedDataPath', this.derivedDataPath);\n      }\n    }\n    args.push('-destination', `id=${this.device.udid}`);\n\n    const versionMatch = new RegExp(/^(\\d+)\\.(\\d+)/).exec(this.platformVersion);\n    if (versionMatch) {\n      args.push(`IPHONEOS_DEPLOYMENT_TARGET=${versionMatch[1]}.${versionMatch[2]}`);\n    } else {\n      this.log.warn(`Cannot parse major and minor version numbers from platformVersion \"${this.platformVersion}\". ` +\n        'Will build for the default platform instead');\n    }\n\n    if (this.realDevice && this.xcodeConfigFile) {\n      this.log.debug(`Using Xcode configuration file: '${this.xcodeConfigFile}'`);\n      args.push('-xcconfig', this.xcodeConfigFile);\n    }\n\n    if (!process.env.APPIUM_XCUITEST_TREAT_WARNINGS_AS_ERRORS) {\n      // This sometimes helps to survive Xcode updates\n      args.push('GCC_TREAT_WARNINGS_AS_ERRORS=0');\n    }\n\n    // Below option slightly reduces build time in debug build\n    // with preventing to generate `/Index/DataStore` which is used by development\n    args.push('COMPILER_INDEX_STORE_ENABLE=NO');\n\n    return {cmd, args};\n  }\n\n  async createSubProcess (buildOnly = false) {\n    if (!this.useXctestrunFile && this.realDevice) {\n      if (this.keychainPath && this.keychainPassword) {\n        await setRealDeviceSecurity(this.keychainPath, this.keychainPassword);\n      }\n      if (this.xcodeOrgId && this.xcodeSigningId && !this.xcodeConfigFile) {\n        this.xcodeConfigFile = await generateXcodeConfigFile(this.xcodeOrgId, this.xcodeSigningId);\n      }\n    }\n\n    const {cmd, args} = this.getCommand(buildOnly);\n    this.log.debug(`Beginning ${buildOnly ? 'build' : 'test'} with command '${cmd} ${args.join(' ')}' ` +\n      `in directory '${this.bootstrapPath}'`);\n    const env = Object.assign({}, process.env, {\n      USE_PORT: this.wdaRemotePort,\n      WDA_PRODUCT_BUNDLE_IDENTIFIER: this.updatedWDABundleId || WDA_RUNNER_BUNDLE_ID,\n    });\n    if (this.mjpegServerPort) {\n      // https://github.com/appium/WebDriverAgent/pull/105\n      env.MJPEG_SERVER_PORT = this.mjpegServerPort;\n    }\n    const upgradeTimestamp = await getWDAUpgradeTimestamp(this.bootstrapPath);\n    if (upgradeTimestamp) {\n      env.UPGRADE_TIMESTAMP = upgradeTimestamp;\n    }\n    const xcodebuild = new SubProcess(cmd, args, {\n      cwd: this.bootstrapPath,\n      env,\n      detached: true,\n      stdio: ['ignore', 'pipe', 'pipe'],\n    });\n\n    let logXcodeOutput = !!this.showXcodeLog;\n    const logMsg = _.isBoolean(this.showXcodeLog)\n      ? `Output from xcodebuild ${this.showXcodeLog ? 'will' : 'will not'} be logged`\n      : 'Output from xcodebuild will only be logged if any errors are present there';\n    this.log.debug(`${logMsg}. To change this, use 'showXcodeLog' desired capability`);\n    xcodebuild.on('output', (stdout, stderr) => {\n      let out = stdout || stderr;\n      // we want to pull out the log file that is created, and highlight it\n      // for diagnostic purposes\n      if (out.includes('Writing diagnostic log for test session to')) {\n        // pull out the first line that begins with the path separator\n        // which *should* be the line indicating the log file generated\n        xcodebuild.logLocation = _.first(_.remove(out.trim().split('\\n'), (v) => v.startsWith(path.sep)));\n        xcodeLog.debug(`Log file for xcodebuild test: ${xcodebuild.logLocation}`);\n      }\n\n      // if we have an error we want to output the logs\n      // otherwise the failure is inscrutible\n      // but do not log permission errors from trying to write to attachments folder\n      const ignoreError = IGNORED_ERRORS.some((x) => out.includes(x));\n      if (this.showXcodeLog !== false && out.includes('Error Domain=') && !ignoreError) {\n        logXcodeOutput = true;\n\n        // terrible hack to handle case where xcode return 0 but is failing\n        xcodebuild._wda_error_occurred = true;\n      }\n\n      // do not log permission errors from trying to write to attachments folder\n      if (logXcodeOutput && !ignoreError) {\n        for (const line of out.split(EOL)) {\n          xcodeLog.error(line);\n          if (line) {\n            xcodebuild._wda_error_message += `${EOL}${line}`;\n          }\n        }\n      }\n    });\n\n    return xcodebuild;\n  }\n\n  async start (buildOnly = false) {\n    this.xcodebuild = await this.createSubProcess(buildOnly);\n    // Store xcodebuild message\n    this.xcodebuild._wda_error_message = '';\n\n    // wrap the start procedure in a promise so that we can catch, and report,\n    // any startup errors that are thrown as events\n    return await new B((resolve, reject) => {\n      this.xcodebuild.on('exit', async (code, signal) => {\n        xcodeLog.error(`xcodebuild exited with code '${code}' and signal '${signal}'`);\n        // print out the xcodebuild file if users have asked for it\n        if (this.showXcodeLog && this.xcodebuild.logLocation) {\n          xcodeLog.error(`Contents of xcodebuild log file '${this.xcodebuild.logLocation}':`);\n          try {\n            let data = await fs.readFile(this.xcodebuild.logLocation, 'utf8');\n            for (let line of data.split('\\n')) {\n              xcodeLog.error(line);\n            }\n          } catch (err) {\n            xcodeLog.error(`Unable to access xcodebuild log file: '${err.message}'`);\n          }\n        }\n        this.xcodebuild.processExited = true;\n        if (this.xcodebuild._wda_error_occurred || (!signal && code !== 0)) {\n          return reject(new Error(`xcodebuild failed with code ${code}${EOL}` +\n            `xcodebuild error message:${EOL}${this.xcodebuild._wda_error_message}`));\n        }\n        // in the case of just building, the process will exit and that is our finish\n        if (buildOnly) {\n          return resolve();\n        }\n      });\n\n      return (async () => {\n        try {\n          const timer = new timing.Timer().start();\n          await this.xcodebuild.start(true);\n          if (!buildOnly) {\n            let status = await this.waitForStart(timer);\n            resolve(status);\n          }\n        } catch (err) {\n          let msg = `Unable to start WebDriverAgent: ${err}`;\n          this.log.error(msg);\n          reject(new Error(msg));\n        }\n      })();\n    });\n  }\n\n  async waitForStart (timer) {\n    // try to connect once every 0.5 seconds, until `launchTimeout` is up\n    this.log.debug(`Waiting up to ${this.launchTimeout}ms for WebDriverAgent to start`);\n    let currentStatus = null;\n    try {\n      let retries = parseInt(this.launchTimeout / 500, 10);\n      await retryInterval(retries, 1000, async () => {\n        if (this.xcodebuild.processExited) {\n          // there has been an error elsewhere and we need to short-circuit\n          return;\n        }\n        const proxyTimeout = this.noSessionProxy.timeout;\n        this.noSessionProxy.timeout = 1000;\n        try {\n          currentStatus = await this.noSessionProxy.command('/status', 'GET');\n          if (currentStatus && currentStatus.ios && currentStatus.ios.ip) {\n            this.agentUrl = currentStatus.ios.ip;\n          }\n          this.log.debug(`WebDriverAgent information:`);\n          this.log.debug(JSON.stringify(currentStatus, null, 2));\n        } catch (err) {\n          throw new Error(`Unable to connect to running WebDriverAgent: ${err.message}`);\n        } finally {\n          this.noSessionProxy.timeout = proxyTimeout;\n        }\n      });\n\n      if (this.xcodebuild.processExited) {\n        // there has been an error elsewhere and we need to short-circuit\n        return currentStatus;\n      }\n\n      this.log.debug(`WebDriverAgent successfully started after ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    } catch (err) {\n      // at this point, if we have not had any errors from xcode itself (reported\n      // elsewhere), we can let this go through and try to create the session\n      this.log.debug(err.message);\n      this.log.warn(`Getting status of WebDriverAgent on device timed out. Continuing`);\n    }\n    return currentStatus;\n  }\n\n  async quit () {\n    await killProcess('xcodebuild', this.xcodebuild);\n  }\n}\n\nexport { XcodeBuild };\nexport default XcodeBuild;\n"],"mappings":"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"}