"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AfcWritableFileStream = exports.AfcReadableFileStream = void 0;

require("source-map-support/register");

var _stream = _interopRequireDefault(require("stream"));

var _lodash = _interopRequireDefault(require("lodash"));

var _logger = _interopRequireDefault(require("../logger"));

class AfcReadableFileStream extends _stream.default.Readable {
  constructor(fileHandle, afcService, options) {
    super(options);
    this._fileHandle = fileHandle;
    this._afcService = afcService;
    this._autoDestroy = !!options.autoDestroy;
    this._destroyed = false;
  }

  _read(size) {
    this._afcService.readFile(this._fileHandle, size).then(data => {
      if (!this._destroyed) {
        this.push(_lodash.default.isEmpty(data) ? null : data);
      }
    }).catch(e => {
      if (this._autoDestroy) {
        this.destroy(e);
      } else {
        this.emit('error', e);
      }
    });
  }

  _destroy(err, done) {
    if (this._destroyed) {
      return;
    }

    this._destroyed = true;
    this.push(null);

    this._afcService.closeFileHandle(this._fileHandle).then(() => done(err)).catch(e => {
      if (err) {
        _logger.default.debug(e);
      } else {
        err = e;
      }

      done(err);
    });
  }

}

exports.AfcReadableFileStream = AfcReadableFileStream;

class AfcWritableFileStream extends _stream.default.Writable {
  constructor(fileHandle, afcService, options) {
    super(options);
    this._fileHandle = fileHandle;
    this._afcService = afcService;
    this._autoDestroy = !!options.autoDestroy;
    this._destroyed = false;
  }

  _write(chunk, encoding, next) {
    this._afcService.writeFile(this._fileHandle, chunk).then(() => next()).catch(e => {
      if (this._autoDestroy) {
        this.destroy(e);
      }

      next(e);
    });
  }

  _destroy(err, done) {
    if (this._destroyed) {
      return;
    }

    this._destroyed = true;

    this._afcService.closeFileHandle(this._fileHandle).then(() => done(err)).catch(e => {
      if (err) {
        _logger.default.debug(e);
      } else {
        err = e;
      }

      done(err);
    });
  }

}

exports.AfcWritableFileStream = AfcWritableFileStream;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBZmNSZWFkYWJsZUZpbGVTdHJlYW0iLCJzdHJlYW0iLCJSZWFkYWJsZSIsImNvbnN0cnVjdG9yIiwiZmlsZUhhbmRsZSIsImFmY1NlcnZpY2UiLCJvcHRpb25zIiwiX2ZpbGVIYW5kbGUiLCJfYWZjU2VydmljZSIsIl9hdXRvRGVzdHJveSIsImF1dG9EZXN0cm95IiwiX2Rlc3Ryb3llZCIsIl9yZWFkIiwic2l6ZSIsInJlYWRGaWxlIiwidGhlbiIsImRhdGEiLCJwdXNoIiwiXyIsImlzRW1wdHkiLCJjYXRjaCIsImUiLCJkZXN0cm95IiwiZW1pdCIsIl9kZXN0cm95IiwiZXJyIiwiZG9uZSIsImNsb3NlRmlsZUhhbmRsZSIsImxvZyIsImRlYnVnIiwiQWZjV3JpdGFibGVGaWxlU3RyZWFtIiwiV3JpdGFibGUiLCJfd3JpdGUiLCJjaHVuayIsImVuY29kaW5nIiwibmV4dCIsIndyaXRlRmlsZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9hZmMvc3RyZWFtcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBwcm9taXNlL3ByZWZlci1hd2FpdC10by10aGVuICovXG5pbXBvcnQgc3RyZWFtIGZyb20gJ3N0cmVhbSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGxvZyBmcm9tICcuLi9sb2dnZXInO1xuXG5jbGFzcyBBZmNSZWFkYWJsZUZpbGVTdHJlYW0gZXh0ZW5kcyBzdHJlYW0uUmVhZGFibGUge1xuXG4gIGNvbnN0cnVjdG9yIChmaWxlSGFuZGxlLCBhZmNTZXJ2aWNlLCBvcHRpb25zKSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5fZmlsZUhhbmRsZSA9IGZpbGVIYW5kbGU7XG4gICAgdGhpcy5fYWZjU2VydmljZSA9IGFmY1NlcnZpY2U7XG4gICAgdGhpcy5fYXV0b0Rlc3Ryb3kgPSAhIW9wdGlvbnMuYXV0b0Rlc3Ryb3k7XG4gICAgdGhpcy5fZGVzdHJveWVkID0gZmFsc2U7XG4gIH1cblxuICBfcmVhZCAoc2l6ZSkge1xuICAgIHRoaXMuX2FmY1NlcnZpY2UucmVhZEZpbGUodGhpcy5fZmlsZUhhbmRsZSwgc2l6ZSlcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5fZGVzdHJveWVkKSB7XG4gICAgICAgICAgdGhpcy5wdXNoKF8uaXNFbXB0eShkYXRhKSA/IG51bGwgOiBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICBpZiAodGhpcy5fYXV0b0Rlc3Ryb3kpIHtcbiAgICAgICAgICB0aGlzLmRlc3Ryb3koZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIF9kZXN0cm95IChlcnIsIGRvbmUpIHtcbiAgICBpZiAodGhpcy5fZGVzdHJveWVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX2Rlc3Ryb3llZCA9IHRydWU7XG4gICAgdGhpcy5wdXNoKG51bGwpO1xuICAgIHRoaXMuX2FmY1NlcnZpY2UuY2xvc2VGaWxlSGFuZGxlKHRoaXMuX2ZpbGVIYW5kbGUpXG4gICAgICAudGhlbigoKSA9PiBkb25lKGVycikpXG4gICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGxvZy5kZWJ1ZyhlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlcnIgPSBlO1xuICAgICAgICB9XG4gICAgICAgIGRvbmUoZXJyKTtcbiAgICAgIH0pO1xuICB9XG59XG5cbmNsYXNzIEFmY1dyaXRhYmxlRmlsZVN0cmVhbSBleHRlbmRzIHN0cmVhbS5Xcml0YWJsZSB7XG5cbiAgY29uc3RydWN0b3IgKGZpbGVIYW5kbGUsIGFmY1NlcnZpY2UsIG9wdGlvbnMpIHtcbiAgICBzdXBlcihvcHRpb25zKTtcbiAgICB0aGlzLl9maWxlSGFuZGxlID0gZmlsZUhhbmRsZTtcbiAgICB0aGlzLl9hZmNTZXJ2aWNlID0gYWZjU2VydmljZTtcbiAgICB0aGlzLl9hdXRvRGVzdHJveSA9ICEhb3B0aW9ucy5hdXRvRGVzdHJveTtcbiAgICB0aGlzLl9kZXN0cm95ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIF93cml0ZSAoY2h1bmssIGVuY29kaW5nLCBuZXh0KSB7XG4gICAgdGhpcy5fYWZjU2VydmljZS53cml0ZUZpbGUodGhpcy5fZmlsZUhhbmRsZSwgY2h1bmspXG4gICAgICAudGhlbigoKSA9PiBuZXh0KCkpXG4gICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX2F1dG9EZXN0cm95KSB7XG4gICAgICAgICAgdGhpcy5kZXN0cm95KGUpO1xuICAgICAgICB9XG4gICAgICAgIG5leHQoZSk7XG4gICAgICB9KTtcbiAgfVxuXG4gIF9kZXN0cm95IChlcnIsIGRvbmUpIHtcbiAgICBpZiAodGhpcy5fZGVzdHJveWVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX2Rlc3Ryb3llZCA9IHRydWU7XG4gICAgdGhpcy5fYWZjU2VydmljZS5jbG9zZUZpbGVIYW5kbGUodGhpcy5fZmlsZUhhbmRsZSlcbiAgICAgIC50aGVuKCgpID0+IGRvbmUoZXJyKSlcbiAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgbG9nLmRlYnVnKGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVyciA9IGU7XG4gICAgICAgIH1cbiAgICAgICAgZG9uZShlcnIpO1xuICAgICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQWZjUmVhZGFibGVGaWxlU3RyZWFtLCBBZmNXcml0YWJsZUZpbGVTdHJlYW0gfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxNQUFNQSxxQkFBTixTQUFvQ0MsZUFBQSxDQUFPQyxRQUEzQyxDQUFvRDtFQUVsREMsV0FBVyxDQUFFQyxVQUFG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