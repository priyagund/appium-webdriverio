"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseServiceSocket = exports.BaseServicePlist = void 0;

require("source-map-support/register");

class BaseServiceSocket {
  constructor(socketClient) {
    this._socketClient = socketClient;
  }

  _assignClientFailureHandlers(...sourceStreams) {
    for (const evt in ['close', 'end']) {
      this._socketClient.once(evt, () => sourceStreams.map(s => s.unpipe(this._socketClient)));
    }
  }

  close() {
    if (!this._socketClient.destroyed) {
      this._socketClient.end();
    }
  }

}

exports.BaseServiceSocket = BaseServiceSocket;

class BaseServicePlist {
  constructor(plistService) {
    this._plistService = plistService;
  }

  close() {
    this._plistService.close();
  }

}

exports.BaseServicePlist = BaseServicePlist;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYXNlU2VydmljZVNvY2tldCIsImNvbnN0cnVjdG9yIiwic29ja2V0Q2xpZW50IiwiX3NvY2tldENsaWVudCIsIl9hc3NpZ25DbGllbnRGYWlsdXJlSGFuZGxlcnMiLCJzb3VyY2VTdHJlYW1zIiwiZXZ0Iiwib25jZSIsIm1hcCIsInMiLCJ1bnBpcGUiLCJjbG9zZSIsImRlc3Ryb3llZCIsImVuZCIsIkJhc2VTZXJ2aWNlUGxpc3QiLCJwbGlzdFNlcnZpY2UiLCJfcGxpc3RTZXJ2aWNlIl0sInNvdXJjZXMiOlsiLi4vLi4vbGliL2Jhc2Utc2VydmljZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCYXNlU2VydmljZVNvY2tldCB7XG4gIGNvbnN0cnVjdG9yIChzb2NrZXRDbGllbnQpIHtcbiAgICB0aGlzLl9zb2NrZXRDbGllbnQgPSBzb2NrZXRDbGllbnQ7XG4gIH1cblxuICBfYXNzaWduQ2xpZW50RmFpbHVyZUhhbmRsZXJzICguLi5zb3VyY2VTdHJlYW1zKSB7XG4gICAgZm9yIChjb25zdCBldnQgaW4gWydjbG9zZScsICdlbmQnXSkge1xuICAgICAgdGhpcy5fc29ja2V0Q2xpZW50Lm9uY2UoZXZ0LFxuICAgICAgICAoKSA9PiBzb3VyY2VTdHJlYW1zLm1hcCgocykgPT4gcy51bnBpcGUodGhpcy5fc29ja2V0Q2xpZW50KSkpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9zZXMgdGhlIHVuZGVybHlpbmcgc29ja2V0IGNvbW11bmljYXRpbmcgd2l0aCB0aGUgcGhvbmVcbiAgICovXG4gIGNsb3NlICgpIHtcbiAgICBpZiAoIXRoaXMuX3NvY2tldENsaWVudC5kZXN0cm95ZWQpIHtcbiAgICAgIHRoaXMuX3NvY2tldENsaWVudC5lbmQoKTtcbiAgICB9XG4gIH1cbn1cblxuY2xhc3MgQmFzZVNlcnZpY2VQbGlzdCB7XG4gIGNvbnN0cnVjdG9yIChwbGlzdFNlcnZpY2UpIHtcbiAgICB0aGlzLl9wbGlzdFNlcnZpY2UgPSBwbGlzdFNlcnZpY2U7XG4gIH1cblxuICAvKipcbiAgICogQ2xvc2VzIHRoZSB1bmRlcmx5aW5nIHNvY2tldCBjb21tdW5pY2F0aW5nIHdpdGggdGhlIHBob25lXG4gICAqL1xuICBjbG9zZSAoKSB7XG4gICAgdGhpcy5fcGxpc3RTZXJ2aWNlLmNsb3NlKCk7XG4gIH1cbn1cblxuXG5leHBvcnQgeyBCYXNlU2VydmljZVNvY2tldCwgQmFzZVNlcnZpY2VQbGlzdCB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxNQUFNQSxpQkFBTixDQUF3QjtFQUN0QkMsV0FBVyxDQUFFQyxZQUFGLEVBQWdCO0lBQ3pCLEtBQUtDLGFBQUwsR0FBcUJELFlBQXJCO0VBQ0Q7O0VBRURFLDRCQUE0QixDQUFFLEdBQUdDLGFBQUwsRUFBb0I7SUFDOUMsS0FBSyxNQUFNQyxHQUFYLElBQWtCLENBQUMsT0FBRCxFQUFVLEtBQVYsQ0FBbEIsRUFBb0M7TUFDbEMsS0FBS0gsYUFBTCxDQUFtQkksSUFBbkIsQ0FBd0JELEdBQXhCLEVBQ0UsTUFBTUQsYUFBYSxDQUFDRyxHQUFkLENBQW1CQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsTUFBRixDQUFTLEtBQUtQLGFBQWQsQ0FBekIsQ0FEUjtJQUVEO0VBQ0Y7O0VBS0RRLEtBQUssR0FBSTtJQUNQLElBQUksQ0FBQyxLQUFLUixhQUFMLENBQW1CUyxTQUF4QixFQUFtQztNQUNqQyxLQUFLVCxhQUFMLENBQW1CVSxHQUFuQjtJQUNEO0VBQ0Y7O0FBbkJxQjs7OztBQXNCeEIsTUFBTUMsZ0JBQU4sQ0FBdUI7RUFDckJiLFdBQVcsQ0FBRWMsWUFBRixFQUFnQjtJQUN6QixLQUFLQyxhQUFMLEdBQXFCRCxZQUFyQjtFQUNEOztFQUtESixLQUFLLEdBQUk7SUFDUCxLQUFLSyxhQUFMLENBQW1CTCxLQUFuQjtFQUNEOztBQVZvQiJ9