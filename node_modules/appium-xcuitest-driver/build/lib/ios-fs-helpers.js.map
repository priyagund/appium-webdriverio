{"version":3,"file":"ios-fs-helpers.js","names":["IO_TIMEOUT_MS","MAX_IO_CHUNK_SIZE","pullFile","afcService","remotePath","stream","createReadStream","autoDestroy","pullPromise","B","resolve","reject","on","timeout","buffers","data","push","Buffer","concat","folderExists","folderPath","fs","stat","isDirectory","e","pullFolder","remoteRootPath","tmpFolder","tempDir","openDir","localTopItem","countFilesSuccess","countFilesFail","countFolders","pullPromises","walkDir","isDir","localPath","path","join","dirname","mkdirp","split","sep","length","readStream","writeStream","createWriteStream","autoClose","onStreamingError","unpipe","log","warn","message","pipe","any","_","remove","p","isFulfilled","isEmpty","all","info","util","pluralize","zip","toInMemoryZip","encodeToBase64","rimraf","remoteMkdirp","remoteRoot","listDirectory","createDirectory","pushFile","base64Data","pushError","pushPromise","write","from","end","pushFolder","srcRootPath","dstRootPath","opts","timeoutMs","enableParallelPush","timer","timing","Timer","start","itemsToPush","glob","cwd","nosort","mark","debug","foldersToPush","filesToPush","reduce","acc","x","endsWith","deleteDirectory","ign","foldersToPushByHierarchy","sort","a","b","relativeFolderPath","absoluteFolderPath","trimEnd","relativePath","absoluteSourcePath","absoluteDestinationPath","destroy","filePushPromise","onStreamError","pushPromises","relativeFilePath","shuffle","getDuration","asMilliSeconds","toFixed"],"sources":["../../lib/ios-fs-helpers.js"],"sourcesContent":["import _ from 'lodash';\nimport B from 'bluebird';\nimport { fs, tempDir, mkdirp, zip, util, timing } from 'appium/support';\nimport path from 'path';\nimport log from './logger';\n\nconst IO_TIMEOUT_MS = 4 * 60 * 1000;\n// Mobile devices use NAND memory modules for the storage,\n// and the parallelism there is not as performant as on regular SSDs\nconst MAX_IO_CHUNK_SIZE = 8;\n\n/**\n * Retrieve a file from a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remotePath Relative path to the file on the device\n * @returns {Buffer} The file content as a buffer\n */\nasync function pullFile (afcService, remotePath) {\n  const stream = await afcService.createReadStream(remotePath, { autoDestroy: true });\n  const pullPromise = new B((resolve, reject) => {\n    stream.on('close', resolve);\n    stream.on('error', reject);\n  }).timeout(IO_TIMEOUT_MS);\n  const buffers = [];\n  stream.on('data', (data) => buffers.push(data));\n  await pullPromise;\n  return Buffer.concat(buffers);\n}\n\n/**\n * Checks a presence of a local folder.\n *\n * @param {string} folderPath Full path to the local folder\n * @returns {boolean} True if the folder exists and is actually a folder\n */\nasync function folderExists (folderPath) {\n  try {\n    return (await fs.stat(folderPath)).isDirectory();\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Retrieve a folder from a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remoteRootPath Relative path to the folder on the device\n * @returns {Buffer} The folder content as a zipped base64-encoded buffer\n */\nasync function pullFolder (afcService, remoteRootPath) {\n  const tmpFolder = await tempDir.openDir();\n  try {\n    let localTopItem = null;\n    let countFilesSuccess = 0;\n    let countFilesFail = 0;\n    let countFolders = 0;\n    const pullPromises = [];\n    await afcService.walkDir(remoteRootPath, true, async (remotePath, isDir) => {\n      const localPath = path.join(tmpFolder, remotePath);\n      const dirname = isDir ? localPath : path.dirname(localPath);\n      if (!await folderExists(dirname)) {\n        await mkdirp(dirname);\n      }\n      if (!localTopItem\n          || localPath.split(path.sep).length < localTopItem.split(path.sep).length) {\n        localTopItem = localPath;\n      }\n      if (isDir) {\n        ++countFolders;\n        return;\n      }\n\n      const readStream = await afcService.createReadStream(remotePath, {autoDestroy: true});\n      const writeStream = fs.createWriteStream(localPath, {autoClose: true});\n      pullPromises.push(\n        new B((resolve) => {\n          writeStream.on('close', () => {\n            ++countFilesSuccess;\n            resolve();\n          });\n          const onStreamingError = (e) => {\n            readStream.unpipe(writeStream);\n            log.warn(`Cannot pull '${remotePath}' to '${localPath}'. ` +\n              `The file will be skipped. Original error: ${e.message}`);\n            ++countFilesFail;\n            resolve();\n          };\n          writeStream.on('error', onStreamingError);\n          readStream.on('error', onStreamingError);\n        }).timeout(IO_TIMEOUT_MS)\n      );\n      readStream.pipe(writeStream);\n      if (pullPromises.length >= MAX_IO_CHUNK_SIZE) {\n        await B.any(pullPromises);\n      }\n      _.remove(pullPromises, (p) => p.isFulfilled());\n    });\n    // Wait for the rest of files to be pulled\n    if (!_.isEmpty(pullPromises)) {\n      await B.all(pullPromises);\n    }\n    log.info(`Pulled ${util.pluralize('file', countFilesSuccess, true)} out of ` +\n      `${countFilesSuccess + countFilesFail} and ${util.pluralize('folder', countFolders, true)} ` +\n      `from '${remoteRootPath}'`);\n    return await zip.toInMemoryZip(localTopItem ? path.dirname(localTopItem) : tmpFolder, {\n      encodeToBase64: true,\n    });\n  } finally {\n    await fs.rimraf(tmpFolder);\n  }\n}\n\n/**\n * Creates remote folder path recursively. Noop if the given path\n * already exists\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remoteRoot The relative path to the remote folder structure\n * to be created\n */\nasync function remoteMkdirp (afcService, remoteRoot) {\n  if (remoteRoot === '.' || remoteRoot === '/') {\n    return;\n  }\n  try {\n    await afcService.listDirectory(remoteRoot);\n    return;\n  } catch (e) {\n    // This means that the directory is missing and we got an object not found error.\n    // Therefore, we are going to the parent\n    await remoteMkdirp(afcService, path.dirname(remoteRoot));\n  }\n  await afcService.createDirectory(remoteRoot);\n}\n\n/**\n * Pushes a file to a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remotePath Relative path to the file on the device. The remote\n * folder structure is created automatically if necessary.\n * @param {string} base64Data Base64-encoded content of the file to be written\n */\nasync function pushFile (afcService, remotePath, base64Data) {\n  await remoteMkdirp(afcService, path.dirname(remotePath));\n  const stream = await afcService.createWriteStream(remotePath, {autoDestroy: true});\n  let pushError = null;\n  const pushPromise = new B((resolve, reject) => {\n    stream.on('error', (e) => {\n      pushError = e;\n    });\n    stream.on('close', () => {\n      if (pushError) {\n        reject(pushError);\n      } else {\n        resolve();\n      }\n    });\n  }).timeout(IO_TIMEOUT_MS);\n  stream.write(Buffer.from(base64Data, 'base64'));\n  stream.end();\n  await pushPromise;\n}\n\n/**\n * @typedef {Object} PushFolderOptions\n *\n * @property {number} timeoutMs [240000] The maximum timeout to wait until a\n * single file is copied\n * @param {boolean} enableParallelPush [false] Whether to push files in parallel.\n * This usually gives better performance, but might sometimes be less stable.\n */\n\n/**\n * Pushes a folder to a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} srcRootPath The full path to the source folder\n * @param {string} dstRootPath The relative path to the destination folder. The folder\n * will be deleted if already exists.\n * @param {PushFolderOptions} opts\n */\nasync function pushFolder (afcService, srcRootPath, dstRootPath, opts = {}) {\n  const {\n    timeoutMs = IO_TIMEOUT_MS,\n    enableParallelPush = false,\n  } = opts;\n\n  const timer = new timing.Timer().start();\n  const itemsToPush = await fs.glob('**', {\n    cwd: srcRootPath,\n    nosort: true,\n    mark: true,\n  });\n  log.debug(`Successfully scanned the tree structure of '${srcRootPath}'`);\n  const [foldersToPush, filesToPush] = itemsToPush.reduce((acc, x) => {\n    acc[_.endsWith(x, path.sep) ? 0 : 1].push(x);\n    return acc;\n  }, [[], []]);\n  log.debug(`Got ${util.pluralize('folder', foldersToPush.length, true)} and ` +\n    `${util.pluralize('file', filesToPush.length, true)} to push`);\n  // create the folder structure first\n  try {\n    await afcService.deleteDirectory(dstRootPath);\n  } catch (ign) {}\n  await afcService.createDirectory(dstRootPath);\n  // top-level folders must go first\n  const foldersToPushByHierarchy = foldersToPush\n    .sort((a, b) => a.split(path.sep).length - b.split(path.sep).length);\n  for (const relativeFolderPath of foldersToPushByHierarchy) {\n    // createDirectory does not accept folder names ending with a path separator\n    const absoluteFolderPath = _.trimEnd(\n      path.join(dstRootPath, relativeFolderPath), path.sep\n    );\n    if (absoluteFolderPath) {\n      await afcService.createDirectory(absoluteFolderPath);\n    }\n  }\n  // do not forget about the root folder\n  log.debug(`Successfully created the remote folder structure ` +\n    `(${util.pluralize('item', foldersToPush.length + 1, true)})`);\n\n  const pushFile = async (relativePath) => {\n    const absoluteSourcePath = path.join(srcRootPath, relativePath);\n    const readStream = fs.createReadStream(absoluteSourcePath, {autoClose: true});\n    const absoluteDestinationPath = path.join(dstRootPath, relativePath);\n    const writeStream = await afcService.createWriteStream(absoluteDestinationPath, {\n      autoDestroy: true\n    });\n    writeStream.on('finish', writeStream.destroy);\n    let pushError = null;\n    const filePushPromise = new B((resolve, reject) => {\n      writeStream.on('close', () => {\n        if (pushError) {\n          reject(pushError);\n        } else {\n          resolve();\n        }\n      });\n      const onStreamError = (e) => {\n        readStream.unpipe(writeStream);\n        log.debug(e);\n        pushError = e;\n      };\n      writeStream.on('error', onStreamError);\n      readStream.on('error', onStreamError);\n    });\n    readStream.pipe(writeStream);\n    await filePushPromise.timeout(timeoutMs);\n  };\n\n  if (enableParallelPush) {\n    log.debug(`Proceeding to parallel files push (max ${MAX_IO_CHUNK_SIZE} writers)`);\n    const pushPromises = [];\n    for (const relativeFilePath of _.shuffle(filesToPush)) {\n      pushPromises.push(B.resolve(pushFile(relativeFilePath)));\n      // keep the push queue filled\n      if (pushPromises.length >= MAX_IO_CHUNK_SIZE) {\n        await B.any(pushPromises);\n      }\n      _.remove(pushPromises, (p) => p.isFulfilled());\n    }\n    if (!_.isEmpty(pushPromises)) {\n      // handle the rest of push promises\n      await B.all(pushPromises);\n    }\n  } else {\n    log.debug(`Proceeding to serial files push`);\n    for (const relativeFilePath of filesToPush) {\n      await pushFile(relativeFilePath);\n    }\n  }\n\n  log.debug(`Successfully pushed ${util.pluralize('folder', foldersToPush.length, true)} ` +\n    `and ${util.pluralize('file', filesToPush.length, true)} ` +\n    `within ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n}\n\n\nexport { pullFile, pullFolder, pushFile, pushFolder };"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,aAAa,GAAG,IAAI,EAAJ,GAAS,IAA/B;AAGA,MAAMC,iBAAiB,GAAG,CAA1B;;AAUA,eAAeC,QAAf,CAAyBC,UAAzB,EAAqCC,UAArC,EAAiD;EAC/C,MAAMC,MAAM,GAAG,MAAMF,UAAU,CAACG,gBAAX,CAA4BF,UAA5B,EAAwC;IAAEG,WAAW,EAAE;EAAf,CAAxC,CAArB;EACA,MAAMC,WAAW,GAAG,IAAIC,iBAAJ,CAAM,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC7CN,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmBF,OAAnB;IACAL,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmBD,MAAnB;EACD,CAHmB,EAGjBE,OAHiB,CAGTb,aAHS,CAApB;EAIA,MAAMc,OAAO,GAAG,EAAhB;EACAT,MAAM,CAACO,EAAP,CAAU,MAAV,EAAmBG,IAAD,IAAUD,OAAO,CAACE,IAAR,CAAaD,IAAb,CAA5B;EACA,MAAMP,WAAN;EACA,OAAOS,MAAM,CAACC,MAAP,CAAcJ,OAAd,CAAP;AACD;;AAQD,eAAeK,YAAf,CAA6BC,UAA7B,EAAyC;EACvC,IAAI;IACF,OAAO,CAAC,MAAMC,WAAA,CAAGC,IAAH,CAAQF,UAAR,CAAP,EAA4BG,WAA5B,EAAP;EACD,CAFD,CAEE,OAAOC,CAAP,EAAU;IACV,OAAO,KAAP;EACD;AACF;;AAUD,eAAeC,UAAf,CAA2BtB,UAA3B,EAAuCuB,cAAvC,EAAuD;EACrD,MAAMC,SAAS,GAAG,MAAMC,gBAAA,CAAQC,OAAR,EAAxB;;EACA,IAAI;IACF,IAAIC,YAAY,GAAG,IAAnB;IACA,IAAIC,iBAAiB,GAAG,CAAxB;IACA,IAAIC,cAAc,GAAG,CAArB;IACA,IAAIC,YAAY,GAAG,CAAnB;IACA,MAAMC,YAAY,GAAG,EAArB;IACA,MAAM/B,UAAU,CAACgC,OAAX,CAAmBT,cAAnB,EAAmC,IAAnC,EAAyC,OAAOtB,UAAP,EAAmBgC,KAAnB,KAA6B;MAC1E,MAAMC,SAAS,GAAGC,aAAA,CAAKC,IAAL,CAAUZ,SAAV,EAAqBvB,UAArB,CAAlB;;MACA,MAAMoC,OAAO,GAAGJ,KAAK,GAAGC,SAAH,GAAeC,aAAA,CAAKE,OAAL,CAAaH,SAAb,CAApC;;MACA,IAAI,EAAC,MAAMlB,YAAY,CAACqB,OAAD,CAAnB,CAAJ,EAAkC;QAChC,MAAM,IAAAC,eAAA,EAAOD,OAAP,CAAN;MACD;;MACD,IAAI,CAACV,YAAD,IACGO,SAAS,CAACK,KAAV,CAAgBJ,aAAA,CAAKK,GAArB,EAA0BC,MAA1B,GAAmCd,YAAY,CAACY,KAAb,CAAmBJ,aAAA,CAAKK,GAAxB,EAA6BC,MADvE,EAC+E;QAC7Ed,YAAY,GAAGO,SAAf;MACD;;MACD,IAAID,KAAJ,EAAW;QACT,EAAEH,YAAF;QACA;MACD;;MAED,MAAMY,UAAU,GAAG,MAAM1C,UAAU,CAACG,gBAAX,CAA4BF,UAA5B,EAAwC;QAACG,WAAW,EAAE;MAAd,CAAxC,CAAzB;;MACA,MAAMuC,WAAW,GAAGzB,WAAA,CAAG0B,iBAAH,CAAqBV,SAArB,EAAgC;QAACW,SAAS,EAAE;MAAZ,CAAhC,CAApB;;MACAd,YAAY,CAAClB,IAAb,CACE,IAAIP,iBAAJ,CAAOC,OAAD,IAAa;QACjBoC,WAAW,CAAClC,EAAZ,CAAe,OAAf,EAAwB,MAAM;UAC5B,EAAEmB,iBAAF;UACArB,OAAO;QACR,CAHD;;QAIA,MAAMuC,gBAAgB,GAAIzB,CAAD,IAAO;UAC9BqB,UAAU,CAACK,MAAX,CAAkBJ,WAAlB;;UACAK,eAAA,CAAIC,IAAJ,CAAU,gBAAehD,UAAW,SAAQiC,SAAU,KAA7C,GACN,6CAA4Cb,CAAC,CAAC6B,OAAQ,EADzD;;UAEA,EAAErB,cAAF;UACAtB,OAAO;QACR,CAND;;QAOAoC,WAAW,CAAClC,EAAZ,CAAe,OAAf,EAAwBqC,gBAAxB;QACAJ,UAAU,CAACjC,EAAX,CAAc,OAAd,EAAuBqC,gBAAvB;MACD,CAdD,EAcGpC,OAdH,CAcWb,aAdX,CADF;MAiBA6C,UAAU,CAACS,IAAX,CAAgBR,WAAhB;;MACA,IAAIZ,YAAY,CAACU,MAAb,IAAuB3C,iBAA3B,EAA8C;QAC5C,MAAMQ,iBAAA,CAAE8C,GAAF,CAAMrB,YAAN,CAAN;MACD;;MACDsB,eAAA,CAAEC,MAAF,CAASvB,YAAT,EAAwBwB,CAAD,IAAOA,CAAC,CAACC,WAAF,EAA9B;IACD,CAvCK,CAAN;;IAyCA,IAAI,CAACH,eAAA,CAAEI,OAAF,CAAU1B,YAAV,CAAL,EAA8B;MAC5B,MAAMzB,iBAAA,CAAEoD,GAAF,CAAM3B,YAAN,CAAN;IACD;;IACDiB,eAAA,CAAIW,IAAJ,CAAU,UAASC,aAAA,CAAKC,SAAL,CAAe,MAAf,EAAuBjC,iBAAvB,EAA0C,IAA1C,CAAgD,UAA1D,GACN,GAAEA,iBAAiB,GAAGC,cAAe,QAAO+B,aAAA,CAAKC,SAAL,CAAe,QAAf,EAAyB/B,YAAzB,EAAuC,IAAvC,CAA6C,GADnF,GAEN,SAAQP,cAAe,GAF1B;;IAGA,OAAO,MAAMuC,YAAA,CAAIC,aAAJ,CAAkBpC,YAAY,GAAGQ,aAAA,CAAKE,OAAL,CAAaV,YAAb,CAAH,GAAgCH,SAA9D,EAAyE;MACpFwC,cAAc,EAAE;IADoE,CAAzE,CAAb;EAGD,CAxDD,SAwDU;IACR,MAAM9C,WAAA,CAAG+C,MAAH,CAAUzC,SAAV,CAAN;EACD;AACF;;AAWD,eAAe0C,YAAf,CAA6BlE,UAA7B,EAAyCmE,UAAzC,EAAqD;EACnD,IAAIA,UAAU,KAAK,GAAf,IAAsBA,UAAU,KAAK,GAAzC,EAA8C;IAC5C;EACD;;EACD,IAAI;IACF,MAAMnE,UAAU,CAACoE,aAAX,CAAyBD,UAAzB,CAAN;IACA;EACD,CAHD,CAGE,OAAO9C,CAAP,EAAU;IAGV,MAAM6C,YAAY,CAAClE,UAAD,EAAamC,aAAA,CAAKE,OAAL,CAAa8B,UAAb,CAAb,CAAlB;EACD;;EACD,MAAMnE,UAAU,CAACqE,eAAX,CAA2BF,UAA3B,CAAN;AACD;;AAWD,eAAeG,QAAf,CAAyBtE,UAAzB,EAAqCC,UAArC,EAAiDsE,UAAjD,EAA6D;EAC3D,MAAML,YAAY,CAAClE,UAAD,EAAamC,aAAA,CAAKE,OAAL,CAAapC,UAAb,CAAb,CAAlB;EACA,MAAMC,MAAM,GAAG,MAAMF,UAAU,CAAC4C,iBAAX,CAA6B3C,UAA7B,EAAyC;IAACG,WAAW,EAAE;EAAd,CAAzC,CAArB;EACA,IAAIoE,SAAS,GAAG,IAAhB;EACA,MAAMC,WAAW,GAAG,IAAInE,iBAAJ,CAAM,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC7CN,MAAM,CAACO,EAAP,CAAU,OAAV,EAAoBY,CAAD,IAAO;MACxBmD,SAAS,GAAGnD,CAAZ;IACD,CAFD;IAGAnB,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmB,MAAM;MACvB,IAAI+D,SAAJ,EAAe;QACbhE,MAAM,CAACgE,SAAD,CAAN;MACD,CAFD,MAEO;QACLjE,OAAO;MACR;IACF,CAND;EAOD,CAXmB,EAWjBG,OAXiB,CAWTb,aAXS,CAApB;EAYAK,MAAM,CAACwE,KAAP,CAAa5D,MAAM,CAAC6D,IAAP,CAAYJ,UAAZ,EAAwB,QAAxB,CAAb;EACArE,MAAM,CAAC0E,GAAP;EACA,MAAMH,WAAN;AACD;;AAqBD,eAAeI,UAAf,CAA2B7E,UAA3B,EAAuC8E,WAAvC,EAAoDC,WAApD,EAAiEC,IAAI,GAAG,EAAxE,EAA4E;EAC1E,MAAM;IACJC,SAAS,GAAGpF,aADR;IAEJqF,kBAAkB,GAAG;EAFjB,IAGFF,IAHJ;EAKA,MAAMG,KAAK,GAAG,IAAIC,eAAA,CAAOC,KAAX,GAAmBC,KAAnB,EAAd;EACA,MAAMC,WAAW,GAAG,MAAMrE,WAAA,CAAGsE,IAAH,CAAQ,IAAR,EAAc;IACtCC,GAAG,EAAEX,WADiC;IAEtCY,MAAM,EAAE,IAF8B;IAGtCC,IAAI,EAAE;EAHgC,CAAd,CAA1B;;EAKA3C,eAAA,CAAI4C,KAAJ,CAAW,+CAA8Cd,WAAY,GAArE;;EACA,MAAM,CAACe,aAAD,EAAgBC,WAAhB,IAA+BP,WAAW,CAACQ,MAAZ,CAAmB,CAACC,GAAD,EAAMC,CAAN,KAAY;IAClED,GAAG,CAAC3C,eAAA,CAAE6C,QAAF,CAAWD,CAAX,EAAc9D,aAAA,CAAKK,GAAnB,IAA0B,CAA1B,GAA8B,CAA/B,CAAH,CAAqC3B,IAArC,CAA0CoF,CAA1C;IACA,OAAOD,GAAP;EACD,CAHoC,EAGlC,CAAC,EAAD,EAAK,EAAL,CAHkC,CAArC;;EAIAhD,eAAA,CAAI4C,KAAJ,CAAW,OAAMhC,aAAA,CAAKC,SAAL,CAAe,QAAf,EAAyBgC,aAAa,CAACpD,MAAvC,EAA+C,IAA/C,CAAqD,OAA5D,GACP,GAAEmB,aAAA,CAAKC,SAAL,CAAe,MAAf,EAAuBiC,WAAW,CAACrD,MAAnC,EAA2C,IAA3C,CAAiD,UADtD;;EAGA,IAAI;IACF,MAAMzC,UAAU,CAACmG,eAAX,CAA2BpB,WAA3B,CAAN;EACD,CAFD,CAEE,OAAOqB,GAAP,EAAY,CAAE;;EAChB,MAAMpG,UAAU,CAACqE,eAAX,CAA2BU,WAA3B,CAAN;EAEA,MAAMsB,wBAAwB,GAAGR,aAAa,CAC3CS,IAD8B,CACzB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAChE,KAAF,CAAQJ,aAAA,CAAKK,GAAb,EAAkBC,MAAlB,GAA2B+D,CAAC,CAACjE,KAAF,CAAQJ,aAAA,CAAKK,GAAb,EAAkBC,MAD9B,CAAjC;;EAEA,KAAK,MAAMgE,kBAAX,IAAiCJ,wBAAjC,EAA2D;IAEzD,MAAMK,kBAAkB,GAAGrD,eAAA,CAAEsD,OAAF,CACzBxE,aAAA,CAAKC,IAAL,CAAU2C,WAAV,EAAuB0B,kBAAvB,CADyB,EACmBtE,aAAA,CAAKK,GADxB,CAA3B;;IAGA,IAAIkE,kBAAJ,EAAwB;MACtB,MAAM1G,UAAU,CAACqE,eAAX,CAA2BqC,kBAA3B,CAAN;IACD;EACF;;EAED1D,eAAA,CAAI4C,KAAJ,CAAW,mDAAD,GACP,IAAGhC,aAAA,CAAKC,SAAL,CAAe,MAAf,EAAuBgC,aAAa,CAACpD,MAAd,GAAuB,CAA9C,EAAiD,IAAjD,CAAuD,GAD7D;;EAGA,MAAM6B,QAAQ,GAAG,MAAOsC,YAAP,IAAwB;IACvC,MAAMC,kBAAkB,GAAG1E,aAAA,CAAKC,IAAL,CAAU0C,WAAV,EAAuB8B,YAAvB,CAA3B;;IACA,MAAMlE,UAAU,GAAGxB,WAAA,CAAGf,gBAAH,CAAoB0G,kBAApB,EAAwC;MAAChE,SAAS,EAAE;IAAZ,CAAxC,CAAnB;;IACA,MAAMiE,uBAAuB,GAAG3E,aAAA,CAAKC,IAAL,CAAU2C,WAAV,EAAuB6B,YAAvB,CAAhC;;IACA,MAAMjE,WAAW,GAAG,MAAM3C,UAAU,CAAC4C,iBAAX,CAA6BkE,uBAA7B,EAAsD;MAC9E1G,WAAW,EAAE;IADiE,CAAtD,CAA1B;IAGAuC,WAAW,CAAClC,EAAZ,CAAe,QAAf,EAAyBkC,WAAW,CAACoE,OAArC;IACA,IAAIvC,SAAS,GAAG,IAAhB;IACA,MAAMwC,eAAe,GAAG,IAAI1G,iBAAJ,CAAM,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACjDmC,WAAW,CAAClC,EAAZ,CAAe,OAAf,EAAwB,MAAM;QAC5B,IAAI+D,SAAJ,EAAe;UACbhE,MAAM,CAACgE,SAAD,CAAN;QACD,CAFD,MAEO;UACLjE,OAAO;QACR;MACF,CAND;;MAOA,MAAM0G,aAAa,GAAI5F,CAAD,IAAO;QAC3BqB,UAAU,CAACK,MAAX,CAAkBJ,WAAlB;;QACAK,eAAA,CAAI4C,KAAJ,CAAUvE,CAAV;;QACAmD,SAAS,GAAGnD,CAAZ;MACD,CAJD;;MAKAsB,WAAW,CAAClC,EAAZ,CAAe,OAAf,EAAwBwG,aAAxB;MACAvE,UAAU,CAACjC,EAAX,CAAc,OAAd,EAAuBwG,aAAvB;IACD,CAfuB,CAAxB;IAgBAvE,UAAU,CAACS,IAAX,CAAgBR,WAAhB;IACA,MAAMqE,eAAe,CAACtG,OAAhB,CAAwBuE,SAAxB,CAAN;EACD,CA3BD;;EA6BA,IAAIC,kBAAJ,EAAwB;IACtBlC,eAAA,CAAI4C,KAAJ,CAAW,0CAAyC9F,iBAAkB,WAAtE;;IACA,MAAMoH,YAAY,GAAG,EAArB;;IACA,KAAK,MAAMC,gBAAX,IAA+B9D,eAAA,CAAE+D,OAAF,CAAUtB,WAAV,CAA/B,EAAuD;MACrDoB,YAAY,CAACrG,IAAb,CAAkBP,iBAAA,CAAEC,OAAF,CAAU+D,QAAQ,CAAC6C,gBAAD,CAAlB,CAAlB;;MAEA,IAAID,YAAY,CAACzE,MAAb,IAAuB3C,iBAA3B,EAA8C;QAC5C,MAAMQ,iBAAA,CAAE8C,GAAF,CAAM8D,YAAN,CAAN;MACD;;MACD7D,eAAA,CAAEC,MAAF,CAAS4D,YAAT,EAAwB3D,CAAD,IAAOA,CAAC,CAACC,WAAF,EAA9B;IACD;;IACD,IAAI,CAACH,eAAA,CAAEI,OAAF,CAAUyD,YAAV,CAAL,EAA8B;MAE5B,MAAM5G,iBAAA,CAAEoD,GAAF,CAAMwD,YAAN,CAAN;IACD;EACF,CAfD,MAeO;IACLlE,eAAA,CAAI4C,KAAJ,CAAW,iCAAX;;IACA,KAAK,MAAMuB,gBAAX,IAA+BrB,WAA/B,EAA4C;MAC1C,MAAMxB,QAAQ,CAAC6C,gBAAD,CAAd;IACD;EACF;;EAEDnE,eAAA,CAAI4C,KAAJ,CAAW,uBAAsBhC,aAAA,CAAKC,SAAL,CAAe,QAAf,EAAyBgC,aAAa,CAACpD,MAAvC,EAA+C,IAA/C,CAAqD,GAA5E,GACP,OAAMmB,aAAA,CAAKC,SAAL,CAAe,MAAf,EAAuBiC,WAAW,CAACrD,MAAnC,EAA2C,IAA3C,CAAiD,GADhD,GAEP,UAAS0C,KAAK,CAACkC,WAAN,GAAoBC,cAApB,CAAmCC,OAAnC,CAA2C,CAA3C,CAA8C,IAF1D;AAGD"}