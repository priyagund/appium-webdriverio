{"version":3,"file":"context.js","names":["NATIVE_WIN","WEBVIEW_WIN","WEBVIEW_BASE","RECENT_WEBVIEW_DETECTION_TIMEOUT_MS","commands","helpers","extensions","getCurrentContext","curContext","getContextsAndViews","useUrl","log","debug","webviews","listWebFrames","ctxs","id","view","contexts","push","toString","useNewSafari","isRealDevice","opts","safari","activateRecentWebview","timer","timing","Timer","start","spinTimeMs","spinHandles","contextId","getRecentWebviewContextId","err","message","includes","error","Error","stack","setContext","remote","cancelPageLoad","getDuration","asMilliSeconds","warn","B","delay","element","findUIElementOrElements","nativeClick","stopRemote","closeWindowBeforeDisconnecting","errorAndThrow","closeWindow","disconnect","curWebFrames","curWebCoords","setCurrentUrl","url","_currentUrl","getCurrentUrl","titleRegExp","urlRegExp","_","isRegExp","errors","InvalidArgumentError","currentUrl","filter","ctx","find","title","test","isWebContext","isWebview","getNewRemoteDebugger","socketPath","device","getWebInspectorSocket","createRemoteDebugger","bundleId","additionalBundleIds","additionalWebviewBundleIds","isSafari","includeSafari","includeSafariInWebviews","pageLoadMs","platformVersion","remoteDebugProxy","garbageCollectOnExecute","util","hasValue","safariGarbageCollect","udid","logAllCommunication","safariLogAllCommunication","logAllCommunicationHexDump","safariLogAllCommunicationHexDump","socketChunkSize","safariSocketChunkSize","webInspectorMaxFrameLength","safariWebInspectorMaxFrameLength","name","callback","skipReadyCheck","alreadyInContext","desired","current","isNativeContext","context","replace","isUndefined","getContexts","NoSuchContextError","oldContext","curWindowHandle","appIdKey","pageIdKey","map","split","parseInt","selectingNewPage","selectPage","enablePerformanceLogging","logs","performance","IOSPerformanceLog","startCapture","safariConsole","startConsole","addLogLine","bind","safariNetwork","startNetwork","connectToRemoteDebugger","on","RemoteDebugger","EVENT_PAGE_CHANGE","onPageChange","EVENT_FRAMES_DETACHED","isEmpty","pluralize","length","join","connect","webviewConnectTimeout","setConnectionKey","getWebviewPages","selectApp","undefined","webviewConnectRetries","ignoreAboutBlankUrl","pageArray","mapFn","fullContextList","mobileGetContexts","waitForWebviewMs","isNumber","isNaN","curOpt","toFixed","setWindow","noop","isErrorType","NoSuchWindowError","getWindowHandle","NotImplementedError","getWindowHandles","pageChangeNotification","JSON","stringify","isConnected","newIds","newPages","keyId","isUrlIgnored","safariIgnoreWebHostnames","ignoredHosts","b","trim","ignoredHost","hostname","URL","ign","page","isKey","info","curAppIdKey","curPageIdKey","newPage","last","needsPageLoad","contextArray","isEqual","pageLoad","currentPageId","p","catch","windowHandleCache","Object","assign"],"sources":["../../../lib/commands/context.js"],"sourcesContent":["import { createRemoteDebugger, RemoteDebugger } from 'appium-remote-debugger';\nimport { errors, isErrorType } from 'appium/driver';\nimport { util, timing } from 'appium/support';\nimport B from 'bluebird';\nimport IOSPerformanceLog from '../device-log/ios-performance-log';\nimport _ from 'lodash';\n\nconst NATIVE_WIN = 'NATIVE_APP';\nconst WEBVIEW_WIN = 'WEBVIEW';\nconst WEBVIEW_BASE = `${WEBVIEW_WIN}_`;\nconst RECENT_WEBVIEW_DETECTION_TIMEOUT_MS = 90000;\n\nconst commands = {}, helpers = {}, extensions = {};\n\n\ncommands.getCurrentContext = async function getCurrentContext () { // eslint-disable-line require-await\n  if (this.curContext && this.curContext !== NATIVE_WIN) {\n    return `${WEBVIEW_BASE}${this.curContext}`;\n  }\n  return NATIVE_WIN;\n};\n\nextensions.getContextsAndViews = async function getContextsAndViews (useUrl = true) {\n  this.log.debug('Retrieving contexts and views');\n  let webviews = await this.listWebFrames(useUrl);\n\n  let ctxs = [{id: NATIVE_WIN, view: {}}];\n  this.contexts = [NATIVE_WIN];\n  for (let view of webviews) {\n    ctxs.push({id: `${WEBVIEW_BASE}${view.id}`, view});\n    this.contexts.push(view.id.toString());\n  }\n  return ctxs;\n};\n\n// Right now we don't necessarily wait for webview\n// and frame to load, which leads to race conditions and flakiness,\n// let's see if we can transition to something better\nextensions.useNewSafari = function useNewSafari () {\n  return !this.isRealDevice() && this.opts.safari;\n};\n\nextensions.activateRecentWebview = async function activateRecentWebview () {\n  this.log.debug('Activating a recent webview');\n  const timer = new timing.Timer().start();\n  const spinTimeMs = 500;\n  const spinHandles = async () => {\n    let contextId;\n    try {\n      contextId = await this.getRecentWebviewContextId(/.*/, /.*/);\n    } catch (err) {\n      if (!err.message.includes('Could not connect to a valid app after')) {\n        const error = new Error(`Could not navigate to webview! Err: ${err.message}`);\n        error.stack += `\\nCaused by: ${err.stack}`;\n        throw error;\n      }\n      this.log.debug('Could not navigate to webview. Retrying if possible.');\n    }\n    if (contextId) {\n      this.log.debug(`Picking webview '${contextId}'`);\n      await this.setContext(contextId);\n      await this.remote.cancelPageLoad();\n      return;\n    }\n\n    // no webview was found\n    if (timer.getDuration().asMilliSeconds >= RECENT_WEBVIEW_DETECTION_TIMEOUT_MS) {\n      // too slow, get out\n      throw new Error('Could not navigate to webview; there are none!');\n    }\n\n    this.log.warn('Could not find any webviews yet, refreshing/retrying');\n    if (this.isRealDevice() || !this.opts.safari) {\n      // on a real device, when not using Safari, we just want to try again\n      await B.delay(spinTimeMs);\n      return await spinHandles();\n    }\n\n    // find the reload button and tap it, if possible\n    let element;\n    try {\n      this.log.debug('Finding and tapping reload button');\n      element = await this.findUIElementOrElements('accessibility id', 'ReloadButton', '', false);\n      await this.nativeClick(element);\n    } catch (err) {\n      this.log.warn(`Error finding and tapping reload button: ${err.message}`);\n      this.log.warn('Retrying.');\n      await B.delay(spinTimeMs);\n    }\n\n    // try it all again\n    return await spinHandles();\n  };\n  await spinHandles();\n};\n\nhelpers.stopRemote = async function stopRemote (closeWindowBeforeDisconnecting = false) {\n  if (!this.remote) {\n    this.log.errorAndThrow('Tried to leave a web frame but were not in one');\n  }\n\n  if (closeWindowBeforeDisconnecting) {\n    await this.closeWindow();\n  }\n  await this.remote.disconnect();\n  this.curContext = null;\n  this.curWebFrames = [];\n  this.curWebCoords = null;\n  this.remote = null;\n};\n\nhelpers.setCurrentUrl = function setCurrentUrl (url) {\n  this._currentUrl = url;\n};\n\nhelpers.getCurrentUrl = function getCurrentUrl () {\n  return this._currentUrl;\n};\n\nextensions.getRecentWebviewContextId = async function getRecentWebviewContextId (titleRegExp, urlRegExp) {\n  if (!_.isRegExp(titleRegExp) && !_.isRegExp(urlRegExp)) {\n    throw new errors.InvalidArgumentError(\n      'A regular expression for either web view title or url must be provided'\n    );\n  }\n\n  const currentUrl = this.getCurrentUrl();\n  const contexts = _.filter(await this.getContextsAndViews(false), 'view');\n  // first try to match by current url\n  if (currentUrl) {\n    const ctx = contexts.find(({view}) => (view.url || '') === currentUrl);\n    if (ctx) {\n      return ctx.id;\n    }\n  }\n  // if not, try to match by regular expression\n  return (contexts.find(({view}) =>\n    view.title && titleRegExp?.test(view.title) || view.url && urlRegExp?.test(view.url)\n  ))?.id;\n};\n\nextensions.isWebContext = function isWebContext () {\n  return !!this.curContext && this.curContext !== NATIVE_WIN;\n};\n\nextensions.isWebview = function isWebview () {\n  return this.isWebContext();\n};\n\nextensions.getNewRemoteDebugger = async function getNewRemoteDebugger () {\n  let socketPath;\n  if (!this.isRealDevice()) {\n    socketPath = await this.opts.device.getWebInspectorSocket();\n  }\n  return createRemoteDebugger({\n    bundleId: this.opts.bundleId,\n    additionalBundleIds: this.opts.additionalWebviewBundleIds,\n    isSafari: this.isSafari(),\n    includeSafari: this.opts.includeSafariInWebviews,\n    useNewSafari: this.useNewSafari(),\n    pageLoadMs: this.pageLoadMs,\n    platformVersion: this.opts.platformVersion,\n    socketPath,\n    remoteDebugProxy: this.opts.remoteDebugProxy,\n    garbageCollectOnExecute: util.hasValue(this.opts.safariGarbageCollect)\n      ? !!this.opts.safariGarbageCollect\n      : false,\n    udid: this.opts.udid,\n    logAllCommunication: this.opts.safariLogAllCommunication,\n    logAllCommunicationHexDump: this.opts.safariLogAllCommunicationHexDump,\n    socketChunkSize: this.opts.safariSocketChunkSize,\n    webInspectorMaxFrameLength: this.opts.safariWebInspectorMaxFrameLength\n  }, this.isRealDevice());\n};\n\n/**\n * Set context\n *\n * @param {?string} name - The name of context to set. It could be 'null' as NATIVE_WIN.\n * @param {callback} callback The callback. (It is not called in this method)\n * @param {boolean} skipReadyCheck - Whether it waits for the new context is ready\n */\ncommands.setContext = async function setContext (name, callback, skipReadyCheck) {\n  function alreadyInContext (desired, current) {\n    return (desired === current ||\n      (desired === null && current === NATIVE_WIN) ||\n      (desired === NATIVE_WIN && current === null));\n  }\n  function isNativeContext (context) {\n    return context === NATIVE_WIN || context === null;\n  }\n\n  // allow the full context list to be passed in\n  if (name && name.id) {\n    name = name.id;\n  }\n\n  this.log.debug(`Attempting to set context to '${name || NATIVE_WIN}' from '${this.curContext ? this.curContext : NATIVE_WIN}'`);\n\n  if (alreadyInContext(name, this.curContext) || alreadyInContext(_.replace(name, WEBVIEW_BASE, ''), this.curContext)) {\n    // already in the named context, no need to do anything\n    this.log.debug(`Already in '${name || NATIVE_WIN}' context. Doing nothing.`);\n    return;\n  }\n  if (isNativeContext(name)) {\n    // switching into the native context\n    this.curContext = null;\n    return;\n  }\n\n  // switching into a webview context\n\n  // if contexts have not already been retrieved, get them\n  if (_.isUndefined(this.contexts)) {\n    await this.getContexts();\n  }\n\n  let contextId = _.replace(name, WEBVIEW_BASE, '');\n  if (contextId === '') {\n    // allow user to pass in \"WEBVIEW\" without an index\n    // the second context will be the first webview as\n    // the first is always NATIVE_APP\n    contextId = this.contexts[1];\n  }\n  if (!_.includes(this.contexts, contextId)) {\n    throw new errors.NoSuchContextError();\n  }\n\n  const oldContext = this.curContext;\n  this.curContext = this.curWindowHandle = contextId;\n\n  // `contextId` will be in the form of `appId.pageId` in this case\n  const [appIdKey, pageIdKey] = _.map(contextId.split('.'), (id) => parseInt(id, 10));\n  try {\n    this.selectingNewPage = true;\n    await this.remote.selectPage(appIdKey, pageIdKey, skipReadyCheck);\n  } catch (err) {\n    this.curContext = this.curWindowHandle = oldContext;\n    throw err;\n  } finally {\n    this.selectingNewPage = false;\n  }\n\n  // attempt to start performance logging, if requested\n  if (this.opts.enablePerformanceLogging && this.remote) {\n    this.log.debug(`Starting performance log on '${this.curContext}'`);\n    this.logs.performance = new IOSPerformanceLog(this.remote);\n    await this.logs.performance.startCapture();\n  }\n\n  // start safari logging if the logs handlers are active\n  if (name && name !== NATIVE_WIN && this.logs) {\n    if (this.logs.safariConsole) {\n      await this.remote.startConsole(this.logs.safariConsole.addLogLine.bind(this.logs.safariConsole));\n    }\n    if (this.logs.safariNetwork) {\n      await this.remote.startNetwork(this.logs.safariNetwork.addLogLine.bind(this.logs.safariNetwork));\n    }\n  }\n};\n\nextensions.connectToRemoteDebugger = async function connectToRemoteDebugger () {\n  this.remote = await this.getNewRemoteDebugger();\n\n  this.remote.on(RemoteDebugger.EVENT_PAGE_CHANGE, this.onPageChange.bind(this));\n  this.remote.on(RemoteDebugger.EVENT_FRAMES_DETACHED, () => {\n    if (!_.isEmpty(this.curWebFrames)) {\n      this.log.debug(`Clearing ${util.pluralize('frame', this.curWebFrames.length, true)}: ${this.curWebFrames.join(', ')}`);\n    }\n    this.curWebFrames = [];\n  });\n\n  await this.remote.connect(this.opts.webviewConnectTimeout);\n};\n\nextensions.listWebFrames = async function listWebFrames (useUrl = true) {\n  useUrl = useUrl && !this.isRealDevice() && !!this.getCurrentUrl();\n  this.log.debug(`Selecting by url: ${useUrl}${useUrl ? ` (expected url: '${this.getCurrentUrl()}')` : ''}`);\n\n  if (!this.remote) {\n    await this.connectToRemoteDebugger();\n    if (!this.remote.appIdKey) {\n      await this.remote.setConnectionKey();\n    }\n  }\n  const getWebviewPages = async () => {\n    try {\n      return await this.remote.selectApp(\n        useUrl ? this.getCurrentUrl() : undefined,\n        this.opts.webviewConnectRetries,\n        this.opts.ignoreAboutBlankUrl\n      );\n    } catch (err) {\n      this.log.debug(`No available web pages: ${err.message}`);\n      return [];\n    }\n  };\n  const pageArray = await getWebviewPages();\n  if (_.isEmpty(pageArray)) {\n    // we have no web frames, but continue anyway\n    this.log.debug('No web frames found.');\n  }\n  return pageArray;\n};\n\ncommands.getContexts = async function getContexts () {\n  this.log.debug('Getting list of available contexts');\n  const contexts = await this.getContextsAndViews(false);\n\n  const mapFn = this.opts.fullContextList\n    ? function (context) {\n      return {\n        id: context.id.toString(),\n        title: context.view.title,\n        url: context.view.url,\n        bundleId: context.view.bundleId,\n      };\n    }\n    : (context) => context.id.toString();\n  return contexts.map(mapFn);\n};\n\n/**\n * @typedef {Object} Context\n *\n * @property {string} id - The identifier of the context. The native context\n *                          will be 'NATIVE_APP' and the webviews will be\n *                          'WEBVIEW_xxx'\n * @property {?string} title - The title associated with the webview content\n * @property {?string} url - The url associated with the webview content\n */\n\n/**\n * Get the contexts available, with information about the url and title of each\n * webview\n *\n * @param {Object} opts - Options set, which can include `waitForWebviewMs` to\n *                        specify the period to poll for available webviews\n * @returns {Array} List of Context objects\n */\nextensions.mobileGetContexts = async function mobileGetContexts (opts = {}) {\n  let {\n    waitForWebviewMs = 0,\n  } = opts;\n\n  // make sure it is a number, so the duration check works properly\n  if (!_.isNumber(waitForWebviewMs)) {\n    waitForWebviewMs = parseInt(waitForWebviewMs, 10);\n    if (isNaN(waitForWebviewMs)) {\n      waitForWebviewMs = 0;\n    }\n  }\n\n  const curOpt = this.opts.fullContextList;\n  this.opts.fullContextList = true;\n\n  const timer = new timing.Timer().start();\n  try {\n    let contexts;\n    do {\n      contexts = await this.getContexts();\n\n      if (contexts.length >= 2) {\n        this.log.debug(`Found webview context after ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n        return contexts;\n      }\n      this.log.debug(`No webviews found in ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    } while (timer.getDuration().asMilliSeconds < waitForWebviewMs);\n    return contexts;\n  } finally {\n    // reset the option so there are no side effects\n    this.opts.fullContextList = curOpt;\n  }\n};\n\ncommands.setWindow = async function setWindow (name, skipReadyCheck) {\n  try {\n    await this.setContext(name, _.noop, skipReadyCheck);\n  } catch (err) {\n    // translate the error in terms of windows\n    throw isErrorType(err, errors.NoSuchContextError)\n      ? new errors.NoSuchWindowError()\n      : err;\n  }\n};\n\ncommands.getWindowHandle = async function getWindowHandle () { // eslint-disable-line require-await\n  if (!this.isWebContext()) {\n    throw new errors.NotImplementedError();\n  }\n  this.log.debug(`Getting current window handle`);\n  return this.curContext;\n};\n\ncommands.getWindowHandles = async function getWindowHandles () {\n  if (!this.isWebContext()) {\n    throw new errors.NotImplementedError();\n  }\n  this.log.debug('Getting list of available window handles');\n  const contexts = await this.getContextsAndViews(false);\n  return contexts\n    // get rid of the native app context\n    .filter((context) => context.id !== NATIVE_WIN)\n    // get the `app.id` format expected\n    .map((context) => context.view.id.toString());\n};\n\nextensions.onPageChange = async function onPageChange (pageChangeNotification) {\n  this.log.debug(`Remote debugger notified us of a new page listing: ${JSON.stringify(pageChangeNotification)}`);\n  if (this.selectingNewPage) {\n    this.log.debug('We are in the middle of selecting a page, ignoring');\n    return;\n  }\n  if (!this.remote || !this.remote.isConnected) {\n    this.log.debug('We have not yet connected, ignoring');\n    return;\n  }\n\n  const {appIdKey, pageArray} = pageChangeNotification;\n\n  let newIds = [];\n  let newPages = [];\n  let keyId = null;\n\n  // Checks if a URL is blacklisted in the 'safariIgnoreWebHostnames' capability\n  function isUrlIgnored (url, safariIgnoreWebHostnames) {\n    const ignoredHosts = (safariIgnoreWebHostnames || '')\n      .split(',')\n      .map((b) => b.trim())\n      .filter((b) => !_.isEmpty(b));\n    for (const ignoredHost of ignoredHosts) {\n      if (ignoredHost === 'about:blank' && url === 'about:blank') {\n        return true;\n      } else {\n        try {\n          const hostname = new URL(url).hostname;\n          if (hostname === ignoredHost) {\n            return true;\n          }\n        } catch (ign) {\n          // do nothing if invalid URL\n        }\n      }\n    }\n    return false;\n  }\n\n  for (const page of pageArray) {\n    const id = page.id.toString();\n    newIds.push(id);\n    if (page.isKey) {\n      keyId = id;\n    }\n    const contextId = `${appIdKey}.${id}`;\n\n    // add if this is a new page\n    if (!_.includes(this.contexts, contextId)) {\n      if (isUrlIgnored(page.url, this.opts.safariIgnoreWebHostnames)) {\n        this.log.info(`Not tracking '${page.url}' page because it is blacklisted. ` +\n          `'safariIgnoreWebHostnames'=${this.opts.safariIgnoreWebHostnames}`);\n      } else {\n        newPages.push(id);\n        this.contexts.push(contextId);\n      }\n    }\n  }\n\n  if (!keyId) {\n    // if there is no key id, pull the first id from the page array and use that\n    // as a stand in\n    this.log.debug('No key id found. Choosing first id from page array');\n    keyId = newIds[0] || null;\n  }\n\n  if (!util.hasValue(this.curContext)) {\n    this.log.debug('We do not appear to have window set yet, ignoring');\n    return;\n  }\n\n  const [curAppIdKey, curPageIdKey] = this.curContext.split('.');\n\n  if (curAppIdKey !== appIdKey) {\n    this.log.debug('Page change not referring to currently selected app, ignoring.');\n    return;\n  }\n\n  let newPage = null;\n  if (newPages.length) {\n    newPage = _.last(newPages);\n    this.log.debug(`We have new pages, selecting page '${newPage}'`);\n  } else if (!_.includes(newIds, curPageIdKey)) {\n    this.log.debug('New page listing from remote debugger does not contain ' +\n                 'current window; assuming it is closed');\n    if (!util.hasValue(keyId)) {\n      this.log.error('Do not have our current window anymore, and there ' +\n                   'are not any more to load! Doing nothing...');\n      this.setCurrentUrl(undefined);\n      return;\n    }\n\n    this.log.debug(`Debugger already selected page '${keyId}', ` +\n                 `confirming that choice.`);\n    this.curContext = `${appIdKey}.${keyId}`;\n    newPage = keyId;\n  } else {\n    // at this point, there are no new pages, and the current page still exists\n    this.log.debug('Checking if page needs to load');\n    // If a window navigates to an anchor it doesn't always fire a page\n    // callback event. Let's check if we wound up in such a situation.\n    const needsPageLoad = (() => {\n      // need to map the page ids to context ids\n      const contextArray = _.map(pageArray, (page) => `${appIdKey}.${page.id}`);\n      // check if the current context exists in both our recorded contexts,\n      // and the page array\n      return !_.isEqual(_.find(this.contexts, this.curContext), _.find(contextArray, this.curContext));\n    })();\n\n    if (needsPageLoad) {\n      this.log.debug('Page load needed. Loading...');\n      await this.remote.pageLoad();\n    }\n\n    this.log.debug('New page listing is same as old, doing nothing');\n  }\n\n  // make sure that the page listing isn't indicating a redirect\n  if (util.hasValue(this.curContext)) {\n    let currentPageId = parseInt(_.last(this.curContext.split('.')), 10);\n    let page = _.find(pageArray, (p) => parseInt(p.id, 10) === currentPageId);\n    if (page && page.url !== this.getCurrentUrl()) {\n      this.log.debug(`Redirected from '${this.getCurrentUrl()}' to '${page.url}'`);\n      this.setCurrentUrl(page.url);\n    }\n  }\n\n  if (util.hasValue(newPage)) {\n    this.selectingNewPage = true;\n    const oldContext = this.curContext;\n    this.curContext = `${appIdKey}.${newPage}`;\n    // do not wait, as this can take a long time, and the response is not necessary\n    // eslint-disable-next-line promise/prefer-await-to-callbacks, promise/prefer-await-to-then\n    this.remote.selectPage(appIdKey, parseInt(newPage, 10)).catch((err) => {\n      this.log.warn(`Failed to select page: ${err.message}`);\n      this.curContext = oldContext;\n    });\n    this.selectingNewPage = false;\n  }\n  this.windowHandleCache = pageArray;\n};\n\n\nObject.assign(commands, extensions, helpers);\nexport default commands;\n"],"mappings":"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"}