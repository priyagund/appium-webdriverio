{"version":3,"file":"lock.js","names":["commands","lock","seconds","proxyCommand","isNaN","floatSeconds","parseFloat","B","delay","unlock","isLocked"],"sources":["../../../lib/commands/lock.js"],"sourcesContent":["import B from 'bluebird';\n\nlet commands = {};\n\ncommands.lock = async function lock (seconds) {\n  await this.proxyCommand('/wda/lock', 'POST');\n  if (isNaN(seconds)) {\n    return;\n  }\n\n  const floatSeconds = parseFloat(seconds);\n  if (floatSeconds <= 0) {\n    return;\n  }\n\n  await B.delay(floatSeconds * 1000);\n  await this.proxyCommand('/wda/unlock', 'POST');\n};\n\ncommands.unlock = async function unlock () {\n  await this.proxyCommand('/wda/unlock', 'POST');\n};\n\ncommands.isLocked = async function isLocked () {\n  return await this.proxyCommand('/wda/locked', 'GET');\n};\n\nexport { commands };\nexport default commands;\n"],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAIA,QAAQ,GAAG,EAAf;;;AAEAA,QAAQ,CAACC,IAAT,GAAgB,eAAeA,IAAf,CAAqBC,OAArB,EAA8B;EAC5C,MAAM,KAAKC,YAAL,CAAkB,WAAlB,EAA+B,MAA/B,CAAN;;EACA,IAAIC,KAAK,CAACF,OAAD,CAAT,EAAoB;IAClB;EACD;;EAED,MAAMG,YAAY,GAAGC,UAAU,CAACJ,OAAD,CAA/B;;EACA,IAAIG,YAAY,IAAI,CAApB,EAAuB;IACrB;EACD;;EAED,MAAME,iBAAA,CAAEC,KAAF,CAAQH,YAAY,GAAG,IAAvB,CAAN;EACA,MAAM,KAAKF,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,CAAN;AACD,CAbD;;AAeAH,QAAQ,CAACS,MAAT,GAAkB,eAAeA,MAAf,GAAyB;EACzC,MAAM,KAAKN,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,CAAN;AACD,CAFD;;AAIAH,QAAQ,CAACU,QAAT,GAAoB,eAAeA,QAAf,GAA2B;EAC7C,OAAO,MAAM,KAAKP,YAAL,CAAkB,aAAlB,EAAiC,KAAjC,CAAb;AACD,CAFD;;eAKeH,Q"}