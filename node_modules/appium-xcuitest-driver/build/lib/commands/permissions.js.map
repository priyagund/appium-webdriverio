{"version":3,"file":"permissions.js","names":["commands","helpers","extensions","RESOURCE_NAME_TO_ID_MAP","calendar","camera","contacts","health","homekit","keyboardnet","location","medialibrary","microphone","photos","reminders","systemroot","userdesktop","userdocuments","userdownloads","bluetooth","requireSimulator","driver","isSimulator","Error","requireOptions","opts","bundleId","mobileResetPermission","service","resource","_","isString","toLower","JSON","stringify","keys","isInteger","proxyCommand","mobileGetPermission","device","getPermission","mobileSetPermissions","access","isPlainObject","setPermissions","Object","assign"],"sources":["../../../lib/commands/permissions.js"],"sourcesContent":["import _ from 'lodash';\n\n\nconst commands = {}, helpers = {}, extensions = {};\n\n// https://developer.apple.com/documentation/xctest/xcuiprotectedresource?language=objc\nconst RESOURCE_NAME_TO_ID_MAP = {\n  calendar: 2,\n  camera: 6,\n  contacts: 1,\n  health: -0x40000003,\n  homekit: 8,\n  keyboardnet: -0x40000001,\n  location: -0x40000002,\n  medialibrary: 7,\n  microphone: 5,\n  photos: 4,\n  reminders: 3,\n  systemroot: 0x40000000,\n  userdesktop: 0x40000001,\n  userdocuments: 0x40000003,\n  userdownloads: 0x40000002,\n  bluetooth: -0x40000000,\n};\n\nfunction requireSimulator (driver) {\n  if (!driver.isSimulator()) {\n    throw new Error('Permissions-related operations can only be performed on Simulator');\n  }\n}\n\nfunction requireOptions (opts = {}) {\n  if (!opts.bundleId) {\n    throw new Error(`The 'bundleId' options must be a valid application bundle identifier`);\n  }\n  return opts;\n}\n\n\n/**\n * @typedef {Object} ResetPermissionOptions\n *\n * @property {!string|number} service - One of available service names. See the keys of\n * `RESOURCE_NAME_TO_ID_MAP` to get the list of supported service names.\n * This could also be an integer protected resource identifier taken from\n * https://developer.apple.com/documentation/xctest/xcuiprotectedresource?language=objc\n */\n\n/**\n * Resets the given permission for the active application under test.\n * Works for both Simulator and real devices using Xcode SDK 11.4+\n *\n * @param {ResetPermissionOptions} opts - Permission options.\n * @throws {Error} If permission reset fails on the device.\n */\ncommands.mobileResetPermission = async function mobileResetPermission (opts = {}) {\n  const {\n    service,\n  } = opts;\n  if (!service) {\n    throw new Error(`The 'service' option is expected to be present`);\n  }\n  let resource;\n  if (_.isString(service)) {\n    resource = RESOURCE_NAME_TO_ID_MAP[_.toLower(service)];\n    if (!resource) {\n      throw new Error(`The 'service' value must be one of ` +\n        `${JSON.stringify(_.keys(RESOURCE_NAME_TO_ID_MAP))}`);\n    }\n  } else if (_.isInteger(service)) {\n    resource = service;\n  } else {\n    throw new Error(`The 'service' value must be either a string or an integer. ` +\n      `'${service}' is passed instead`);\n  }\n\n  await this.proxyCommand('/wda/resetAppAuth', 'POST', {resource});\n};\n\n/**\n * @typedef {Object} GetPermissionOptions\n *\n * @property {string} service - One of available service names. The following services are supported:\n * calendar,\n * camera,\n * contacts,\n * homekit,\n * microphone,\n * photos,\n * reminders,\n * medialibrary,\n * motion,\n * health,\n * siri,\n * speech.\n * @property {string} bundleId - The bundle identifier of the destination app.\n */\n\n/**\n * Gets application permission state on Simulator.\n * This method requires WIX applesimutils to be installed on the server host.\n *\n * @param {GetPermissionOptions} opts - Permission options.\n * @returns {string} Either 'yes', 'no' or 'unset'\n * @throws {Error} If permission getting fails or the device is not a Simulator.\n */\ncommands.mobileGetPermission = async function mobileGetPermission (opts = {}) {\n  const {\n    service,\n    bundleId,\n  } = requireOptions(opts);\n  if (!service) {\n    throw new Error(`The 'service' option is expected to be present`);\n  }\n  requireSimulator(this);\n\n  return await this.opts.device.getPermission(bundleId, service);\n};\n\n/**\n * @typedef {Object} SetPermissionsOptions\n *\n * @property {Object} access - One or more access rules to set.\n * The following keys are supported:\n * - all: Apply the action to all services.\n * - calendar: Allow access to calendar.\n * - contacts-limited: Allow access to basic contact info.\n * - contacts: Allow access to full contact details.\n * - location: Allow access to location services when app is in use.\n * - location-always: Allow access to location services at all times.\n * - photos-add: Allow adding photos to the photo library.\n * - photos: Allow full access to the photo library.\n * - media-library: Allow access to the media library.\n * - microphone: Allow access to audio input.\n * - motion: Allow access to motion and fitness data.\n * - reminders: Allow access to reminders.\n * - siri: Allow use of the app with Siri.\n * The following values are supported:\n * - yes: To grant the permission\n * - no: To revoke the permission\n * - unset: To reset the permission\n * @property {string} bundleId - The bundle identifier of the destination app.\n */\n\n/**\n * Set application permission state on Simulator.\n *\n * @since Xcode SDK 11.4\n * @param {SetPermissionsOptions} opts - Permissions options.\n * @throws {Error} If permission setting fails or the device is not a Simulator.\n */\ncommands.mobileSetPermissions = async function mobileSetPermissions (opts = {}) {\n  const {\n    access,\n    bundleId,\n  } = requireOptions(opts);\n  if (!_.isPlainObject(access)) {\n    throw new Error(`The 'access' option is expected to be a map`);\n  }\n  requireSimulator(this);\n\n  await this.opts.device.setPermissions(bundleId, access);\n};\n\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":"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"}