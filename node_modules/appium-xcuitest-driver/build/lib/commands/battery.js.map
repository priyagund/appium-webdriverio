{"version":3,"file":"battery.js","names":["extensions","commands","mobileGetBatteryInfo","proxyCommand","Object","assign"],"sources":["../../../lib/commands/battery.js"],"sourcesContent":["let extensions = {}, commands = {};\n\n/**\n * @typedef {Object} BatteryInfo\n *\n * @property {number} level - Battery level in range [0.0, 1.0], where\n *                            1.0 means 100% charge.\n * @property {number} state - Battery state. The following values are possible:\n *   UIDeviceBatteryStateUnknown = 0\n *   UIDeviceBatteryStateUnplugged = 1  // on battery, discharging\n *   UIDeviceBatteryStateCharging = 2   // plugged in, less than 100%\n *   UIDeviceBatteryStateFull = 3       // plugged in, at 100%\n */\n\n/**\n * Reads the battery information from the device under test.\n * This endpoint only returns reliable result on real devices.\n *\n * @returns {BatteryInfo} The actual battery info\n */\ncommands.mobileGetBatteryInfo = async function mobileGetBatteryInfo () {\n  return await this.proxyCommand('/wda/batteryInfo', 'GET');\n};\n\nObject.assign(extensions, commands);\nexport { commands };\nexport default extensions;\n"],"mappings":";;;;;;;;;AAAA,IAAIA,UAAU,GAAG,EAAjB;AAAA,IAAqBC,QAAQ,GAAG,EAAhC;;;AAoBAA,QAAQ,CAACC,oBAAT,GAAgC,eAAeA,oBAAf,GAAuC;EACrE,OAAO,MAAM,KAAKC,YAAL,CAAkB,kBAAlB,EAAsC,KAAtC,CAAb;AACD,CAFD;;AAIAC,MAAM,CAACC,MAAP,CAAcL,UAAd,EAA0BC,QAA1B;eAEeD,U"}