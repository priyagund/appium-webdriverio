{"version":3,"file":"log.js","names":["extensions","WEBSOCKET_ENDPOINT","sessionId","DEFAULT_WS_PATHNAME_PREFIX","GET_SERVER_LOGS_FEATURE","extractLogs","logType","logsContainer","_","isEmpty","Error","logObject","logs","getLogs","supportedLogTypes","syslog","description","getter","self","crashlog","performance","safariConsole","safariNetwork","server","ensureFeatureEnabled","log","unwrap","record","map","x","timestamp","Date","now","level","message","prefix","startLogCapture","isUndefined","isCapturing","warn","IOSCrashLog","sim","opts","device","udid","isRealDevice","undefined","IOSDeviceLog","showLogs","showIOSLog","IOSSimulatorLog","xcodeVersion","iosSimulatorLogsPredicate","SafariConsoleLog","showSafariConsoleLog","SafariNetworkLog","showSafariNetworkLog","startCapture","err","mobileStartLogsBroadcast","pathname","getWebSocketHandlers","debug","info","wss","WebSocket","Server","noServer","on","ws","req","remoteIp","headers","connection","remoteAddress","_syslogWebsocketListener","logRecord","readyState","OPEN","send","code","reason","removeListener","closeMsg","toString","addWebSocketHandler","mobileStopLogsBroadcast","removeWebSocketHandler"],"sources":["../../../lib/commands/log.js"],"sourcesContent":["import _ from 'lodash';\nimport { DEFAULT_WS_PATHNAME_PREFIX } from 'appium/driver';\nimport { IOSCrashLog } from '../device-log/ios-crash-log';\nimport { IOSSimulatorLog } from '../device-log/ios-simulator-log';\nimport { IOSDeviceLog } from '../device-log/ios-device-log';\nimport log from '../logger';\nimport WebSocket from 'ws';\nimport SafariConsoleLog from '../device-log/safari-console-log';\nimport SafariNetworkLog from '../device-log/safari-network-log';\n\n\nconst extensions = {};\n\nconst WEBSOCKET_ENDPOINT = (sessionId) => `${DEFAULT_WS_PATHNAME_PREFIX}/session/${sessionId}/appium/device/syslog`;\nconst GET_SERVER_LOGS_FEATURE = 'get_server_logs';\n\nextensions.extractLogs = async function extractLogs (logType, logsContainer = {}) {\n  // make sure that we have logs at all\n  // otherwise it's not been initialized\n  if (_.isEmpty(logsContainer)) {\n    throw new Error('No logs currently available. Is the device/simulator started?');\n  }\n\n  // If logs captured successfully send response with data, else send error\n  const logObject = logsContainer[logType];\n  const logs = logObject ? await logObject.getLogs() : null;\n  if (logs) {\n    return logs;\n  }\n  throw new Error(`No logs of type '${logType}' found.`);\n};\n\nextensions.supportedLogTypes = {\n  syslog: {\n    description: 'System Logs - Device logs for iOS applications on real devices and simulators',\n    getter: async (self) => await self.extractLogs('syslog', self.logs),\n  },\n  crashlog: {\n    description: 'Crash Logs - Crash reports for iOS applications on real devices and simulators',\n    getter: async (self) => await self.extractLogs('crashlog', self.logs),\n  },\n  performance: {\n    description: 'Performance Logs - Debug Timelines on real devices and simulators',\n    getter: async (self) => await self.extractLogs('performance', self.logs),\n  },\n  safariConsole: {\n    description: 'Safari Console Logs - data written to the JS console in Safari',\n    getter: async (self) => await self.extractLogs('safariConsole', self.logs),\n  },\n  safariNetwork: {\n    description: 'Safari Network Logs - information about network operations undertaken by Safari',\n    getter: async (self) => await self.extractLogs('safariNetwork', self.logs),\n  },\n  server: {\n    description: 'Appium server logs',\n    getter: (self) => {\n      self.ensureFeatureEnabled(GET_SERVER_LOGS_FEATURE);\n      return log.unwrap().record\n        .map(function (x) {\n          return {\n            // npmlog does not keep timestamps in the history\n            timestamp: Date.now(),\n            level: 'ALL',\n            message: _.isEmpty(x.prefix) ? x.message : `[${x.prefix}] ${x.message}`,\n          };\n        });\n    },\n  },\n};\n\nextensions.startLogCapture = async function startLogCapture () {\n  this.logs = this.logs || {};\n  if (!_.isUndefined(this.logs.syslog) && this.logs.syslog.isCapturing) {\n    log.warn('Trying to start iOS log capture but it has already started!');\n    return true;\n  }\n  if (_.isUndefined(this.logs.syslog)) {\n    this.logs.crashlog = new IOSCrashLog({\n      sim: this.opts.device,\n      udid: this.isRealDevice() ? this.opts.udid : undefined,\n    });\n\n    if (this.isRealDevice()) {\n      this.logs.syslog = new IOSDeviceLog({\n        udid: this.opts.udid,\n        showLogs: this.opts.showIOSLog,\n      });\n    } else {\n      this.logs.syslog = new IOSSimulatorLog({\n        sim: this.opts.device,\n        showLogs: this.opts.showIOSLog,\n        xcodeVersion: this.xcodeVersion,\n        iosSimulatorLogsPredicate: this.opts.iosSimulatorLogsPredicate,\n      });\n    }\n    this.logs.safariConsole = new SafariConsoleLog(!!this.opts.showSafariConsoleLog);\n    this.logs.safariNetwork = new SafariNetworkLog(!!this.opts.showSafariNetworkLog);\n  }\n  try {\n    await this.logs.syslog.startCapture();\n  } catch (err) {\n    log.warn(`Continuing without capturing device logs: ${err.message}`);\n    return false;\n  }\n  await this.logs.crashlog.startCapture();\n  await this.logs.safariConsole.startCapture();\n  await this.logs.safariNetwork.startCapture();\n\n  return true;\n};\n\n/**\n * Starts iOS system logs broadcast websocket on the same host and port\n * where Appium server is running at `/ws/session/:sessionId:/appium/syslog` endpoint. The method\n * will return immediately if the web socket is already listening.\n *\n * Each connected webcoket listener will receive syslog lines\n * as soon as they are visible to Appium.\n */\nextensions.mobileStartLogsBroadcast = async function mobileStartLogsBroadcast () {\n  const pathname = WEBSOCKET_ENDPOINT(this.sessionId);\n  if (!_.isEmpty(await this.server.getWebSocketHandlers(pathname))) {\n    log.debug(`The system logs broadcasting web socket server is already listening at ${pathname}`);\n    return;\n  }\n\n  log.info(`Assigning system logs broadcasting web socket server to ${pathname}`);\n  // https://github.com/websockets/ws/blob/master/doc/ws.md\n  const wss = new WebSocket.Server({\n    noServer: true,\n  });\n  wss.on('connection', (ws, req) => {\n    if (req) {\n      const remoteIp = _.isEmpty(req.headers['x-forwarded-for'])\n        ? req.connection?.remoteAddress\n        : req.headers['x-forwarded-for'];\n      log.debug(`Established a new system logs listener web socket connection from ${remoteIp}`);\n    } else {\n      log.debug('Established a new system logs listener web socket connection');\n    }\n\n    if (_.isEmpty(this._syslogWebsocketListener)) {\n      this._syslogWebsocketListener = (logRecord) => {\n        if (ws?.readyState === WebSocket.OPEN) {\n          ws.send(logRecord.message);\n        }\n      };\n    }\n    this.logs.syslog.on('output', this._syslogWebsocketListener);\n\n    ws.on('close', (code, reason) => {\n      if (!_.isEmpty(this._syslogWebsocketListener)) {\n        this.logs.syslog.removeListener('output', this._syslogWebsocketListener);\n        this._syslogWebsocketListener = null;\n      }\n\n      let closeMsg = 'System logs listener web socket is closed.';\n      if (!_.isEmpty(code)) {\n        closeMsg += ` Code: ${code}.`;\n      }\n      if (!_.isEmpty(reason)) {\n        closeMsg += ` Reason: ${reason.toString()}.`;\n      }\n      log.debug(closeMsg);\n    });\n  });\n  await this.server.addWebSocketHandler(pathname, wss);\n};\n\n/**\n * Stops the previously started syslog broadcasting wesocket server.\n * This method will return immediately if no server is running.\n */\nextensions.mobileStopLogsBroadcast = async function mobileStopLogsBroadcast () {\n  const pathname = WEBSOCKET_ENDPOINT(this.sessionId);\n  if (_.isEmpty(await this.server.getWebSocketHandlers(pathname))) {\n    return;\n  }\n\n  log.debug('Stopping the system logs broadcasting web socket server');\n  await this.server.removeWebSocketHandler(pathname);\n};\n\n\nexport default extensions;\n"],"mappings":"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"}