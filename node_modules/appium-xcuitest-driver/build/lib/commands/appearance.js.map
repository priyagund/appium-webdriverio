{"version":3,"file":"appearance.js","names":["commands","mobileSetAppearance","opts","style","includes","_","toLower","Error","util","compareVersions","platformVersion","isSimulator","device","setAppearance","e","log","debug","stack","proxyCommand","name","mobileSiriCommand","text","mobileGetAppearance","getAppearance","ign","userInterfaceStyle"],"sources":["../../../lib/commands/appearance.js"],"sourcesContent":["import _ from 'lodash';\nimport { util } from 'appium/support';\n\n\nconst commands = {};\n\n/**\n * @typedef {Object} SetAppearanceOptions\n *\n * @property {string} style - Currently two styles are supported:\n * - dark\n * - light\n */\n\n/**\n * Set the device's UI appearance style\n *\n * @since iOS 12.0\n * @param {SetAppearanceOptions} opts\n * @throws {Error} if the current platform does not support UI\n * appearance changes\n */\ncommands.mobileSetAppearance = async function mobileSetAppearance (opts = {}) {\n  const {\n    style,\n  } = opts;\n  if (!['light', 'dark'].includes(_.toLower(style))) {\n    throw new Error(`The 'style' value is expected to equal either 'light' or 'dark'`);\n  }\n  if (util.compareVersions(this.opts.platformVersion, '<', '12.0')) {\n    throw new Error('Changing appearance is only supported since iOS 12');\n  }\n\n  if (this.isSimulator()) {\n    try {\n      return void (await this.opts.device.setAppearance(style));\n    } catch (e) {\n      this.log.debug(e.stack);\n    }\n  }\n  try {\n    return void (await this.proxyCommand('/wda/device/appearance', 'POST', {name: style}));\n  } catch (e) {\n    this.log.debug(e.stack);\n  }\n  // Fall back to the ugly Siri workaround if the current SDK is too old\n  await this.mobileSiriCommand({\n    text: `Turn ${_.toLower(style) === 'dark' ? 'on' : 'off'} dark mode`,\n  });\n};\n\n/**\n * @typedef {Object} Appearance\n * @property {string} style - The device's UI appearance value.\n * This could be one of:\n * - `light`\n * - `dark`\n * - `unknown`\n * - `unsupported`\n */\n\n/**\n * Get the device's UI appearance style.\n *\n * @since Xcode SDK 11\n * @returns {Appearance}\n */\ncommands.mobileGetAppearance = async function mobileGetAppearance () {\n  if (util.compareVersions(this.opts.platformVersion, '<', '12.0')) {\n    return 'unsupported';\n  }\n\n  let style;\n  if (this.isSimulator()) {\n    try {\n      style = await this.opts.device.getAppearance();\n    } catch (ign) {}\n  }\n  if (!style) {\n    style = (await this.proxyCommand('/wda/device/info', 'GET')).userInterfaceStyle || 'unknown';\n  }\n  return {\n    style,\n  };\n};\n\n\nexport { commands };\nexport default commands;\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA,MAAMA,QAAQ,GAAG,EAAjB;;;AAkBAA,QAAQ,CAACC,mBAAT,GAA+B,eAAeA,mBAAf,CAAoCC,IAAI,GAAG,EAA3C,EAA+C;EAC5E,MAAM;IACJC;EADI,IAEFD,IAFJ;;EAGA,IAAI,CAAC,CAAC,OAAD,EAAU,MAAV,EAAkBE,QAAlB,CAA2BC,eAAA,CAAEC,OAAF,CAAUH,KAAV,CAA3B,CAAL,EAAmD;IACjD,MAAM,IAAII,KAAJ,CAAW,iEAAX,CAAN;EACD;;EACD,IAAIC,aAAA,CAAKC,eAAL,CAAqB,KAAKP,IAAL,CAAUQ,eAA/B,EAAgD,GAAhD,EAAqD,MAArD,CAAJ,EAAkE;IAChE,MAAM,IAAIH,KAAJ,CAAU,oDAAV,CAAN;EACD;;EAED,IAAI,KAAKI,WAAL,EAAJ,EAAwB;IACtB,IAAI;MACF,OAAO,MAAM,MAAM,KAAKT,IAAL,CAAUU,MAAV,CAAiBC,aAAjB,CAA+BV,KAA/B,CAAZ,CAAP;IACD,CAFD,CAEE,OAAOW,CAAP,EAAU;MACV,KAAKC,GAAL,CAASC,KAAT,CAAeF,CAAC,CAACG,KAAjB;IACD;EACF;;EACD,IAAI;IACF,OAAO,MAAM,MAAM,KAAKC,YAAL,CAAkB,wBAAlB,EAA4C,MAA5C,EAAoD;MAACC,IAAI,EAAEhB;IAAP,CAApD,CAAZ,CAAP;EACD,CAFD,CAEE,OAAOW,CAAP,EAAU;IACV,KAAKC,GAAL,CAASC,KAAT,CAAeF,CAAC,CAACG,KAAjB;EACD;;EAED,MAAM,KAAKG,iBAAL,CAAuB;IAC3BC,IAAI,EAAG,QAAOhB,eAAA,CAAEC,OAAF,CAAUH,KAAV,MAAqB,MAArB,GAA8B,IAA9B,GAAqC,KAAM;EAD9B,CAAvB,CAAN;AAGD,CA3BD;;AA6CAH,QAAQ,CAACsB,mBAAT,GAA+B,eAAeA,mBAAf,GAAsC;EACnE,IAAId,aAAA,CAAKC,eAAL,CAAqB,KAAKP,IAAL,CAAUQ,eAA/B,EAAgD,GAAhD,EAAqD,MAArD,CAAJ,EAAkE;IAChE,OAAO,aAAP;EACD;;EAED,IAAIP,KAAJ;;EACA,IAAI,KAAKQ,WAAL,EAAJ,EAAwB;IACtB,IAAI;MACFR,KAAK,GAAG,MAAM,KAAKD,IAAL,CAAUU,MAAV,CAAiBW,aAAjB,EAAd;IACD,CAFD,CAEE,OAAOC,GAAP,EAAY,CAAE;EACjB;;EACD,IAAI,CAACrB,KAAL,EAAY;IACVA,KAAK,GAAG,CAAC,MAAM,KAAKe,YAAL,CAAkB,kBAAlB,EAAsC,KAAtC,CAAP,EAAqDO,kBAArD,IAA2E,SAAnF;EACD;;EACD,OAAO;IACLtB;EADK,CAAP;AAGD,CAjBD;;eAqBeH,Q"}