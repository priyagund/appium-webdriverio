{"version":3,"file":"simulator-management.js","names":["APPIUM_SIM_PREFIX","SETTINGS_CAPS","SAFARI_SETTINGS_CAPS","createSim","caps","platform","PLATFORM_NAME_IOS","devicesSetPath","simulatorDevicesSetPath","udid","Simctl","createDevice","util","uuidV4","toUpperCase","deviceName","platformVersion","getSimulator","checkExistence","getExistingSim","opts","appiumTestDevice","simctl","device","_","values","getDevices","name","startsWith","endsWith","state","log","warn","shutdownSimulator","resetTestProcesses","shutdown","runSimulatorReset","noReset","fullReset","debug","isKeychainsBackupSuccessful","keychainsExcludePatterns","keepKeyChains","backupKeychains","clean","restoreKeychains","info","bundleId","isRunning","enforceSimulatorShutdown","terminateApp","err","app","isSafari","browserName","toLowerCase","cleanSafari","scrubCustomApp","message","installToSimulator","newSimulator","isAppInstalled","removeApp","installApp","e","shutdownOtherSimulators","currentDevice","allDevices","flatMap","otherBootedDevices","filter","isEmpty","length","pluralize","shutdownDevice","launchAndQuitSimulator","sim","safari","timeout","launchAndQuit","checkPreferences","settings","setting","has","setLocaleAndPreferences","shutdownFn","noop","localConfig","setLocale","prefsUpdated","setPreferences","_updated","localeConfig","language","locale","calendarFormat","isFresh","simulatorStartupTimeout","updated","updateLocale","errorAndThrow","needToSetPrefs","needToSetSafariPrefs","setLocServicesPrefs","error","setSafariPrefs","locServ","find","locationServicesEnabled","locationServicesAuthorized","c","isUndefined","updateSettings","LocationServicesEnabled","msg","locAuth","updateLocationSettings","safariSettings","val","safariAllowPopups","WebKitJavaScriptCanOpenWindowsAutomatically","JavaScriptCanOpenWindowsAutomatically","safariIgnoreFraudWarning","WarnAboutFraudulentWebsites","safariOpenLinksInBackground","OpenLinksInBackground","size","updateSafariSettings"],"sources":["../../lib/simulator-management.js"],"sourcesContent":["import { getSimulator } from 'appium-ios-simulator';\nimport Simctl from 'node-simctl';\nimport { resetTestProcesses } from 'appium-webdriveragent';\nimport _ from 'lodash';\nimport log from './logger';\nimport { util } from 'appium/support';\nimport { PLATFORM_NAME_IOS } from './desired-caps';\n\n\nconst APPIUM_SIM_PREFIX = 'appiumTest';\nconst SETTINGS_CAPS = [\n  'locationServicesEnabled',\n  'locationServicesAuthorized',\n];\nconst SAFARI_SETTINGS_CAPS = [\n  'safariAllowPopups',\n  'safariIgnoreFraudWarning',\n  'safariOpenLinksInBackground',\n];\n\n/**\n * Capability set by a user\n *\n * @property {string} deviceName - A name for the device\n * @property {string} platformVersion - The version of iOS to use\n */\n/**\n * Create a new simulator with `appiumTest-` prefix and return the object.\n *\n * @param {object} SimCreationCaps - Capability set by a user. The options available are:\n * @property {string} platform [iOS] - Platform name in order to specify runtime such as 'iOS', 'tvOS', 'watchOS'\n * @returns {object} Simulator object associated with the udid passed in.\n */\nasync function createSim (caps, platform = PLATFORM_NAME_IOS) {\n  const devicesSetPath = caps.simulatorDevicesSetPath;\n  const udid = await new Simctl({devicesSetPath}).createDevice(\n    `${APPIUM_SIM_PREFIX}-${util.uuidV4().toUpperCase()}-${caps.deviceName}`,\n    caps.deviceName,\n    caps.platformVersion,\n    {platform},\n  );\n  return await getSimulator(udid, {\n    platform,\n    checkExistence: false,\n    devicesSetPath,\n  });\n}\n\n/**\n * @typedef {Object} SimulatorLookupOptions\n * @property {string?} deviceName - The name of the device to lookup\n * @property {string!} platformVersion - The platform version string\n * @property {string?} simulatorDevicesSetPath - The full path to the simulator devices set\n */\n\n/**\n * Get a simulator which is already running.\n *\n * @param {SimulatorLookupOptions?} opts\n * @returns {Simulator?} The matched Simulator instance or `null` if no matching  device is found.\n */\nasync function getExistingSim (opts = {}) {\n  const {\n    platformVersion,\n    deviceName,\n    simulatorDevicesSetPath: devicesSetPath,\n  } = opts;\n\n  let appiumTestDevice;\n  const simctl = new Simctl({devicesSetPath});\n  for (const device of _.values(await simctl.getDevices(platformVersion))) {\n    if ((deviceName && device.name === deviceName) || !deviceName) {\n      return await getSimulator(device.udid, {\n        platform: device.platform,\n        checkExistence: false,\n        devicesSetPath,\n      });\n    }\n\n    if (device.name.startsWith(APPIUM_SIM_PREFIX)\n      && ((deviceName && device.name.endsWith(deviceName)) || !deviceName)) {\n      appiumTestDevice = device;\n      // choose the first booted simulator\n      if (device.state === 'Booted') {\n        break;\n      }\n    }\n  }\n\n  if (appiumTestDevice) {\n    log.warn(`Unable to find device '${deviceName}'. ` +\n      `Found '${appiumTestDevice.name}' (udid: '${appiumTestDevice.udid}') instead`);\n    return await getSimulator(appiumTestDevice.udid, {\n      platform: appiumTestDevice.platform,\n      checkExistence: false,\n      devicesSetPath,\n    });\n  }\n  return null;\n}\n\nasync function shutdownSimulator (device) {\n  // stop XCTest processes if running to avoid unexpected side effects\n  await resetTestProcesses(device.udid, true);\n  await device.shutdown();\n}\n\nasync function runSimulatorReset (device, opts) {\n  if (opts.noReset && !opts.fullReset) {\n    // noReset === true && fullReset === false\n    log.debug('Reset: noReset is on. Leaving simulator as is');\n    return;\n  }\n\n  if (!device) {\n    log.debug('Reset: no device available. Skipping');\n    return;\n  }\n\n  if (opts.fullReset) {\n    log.debug('Reset: fullReset is on. Cleaning simulator');\n    await shutdownSimulator(device);\n    let isKeychainsBackupSuccessful = false;\n    if (opts.keychainsExcludePatterns || opts.keepKeyChains) {\n      isKeychainsBackupSuccessful = await device.backupKeychains();\n    }\n    await device.clean();\n    if (isKeychainsBackupSuccessful) {\n      await device.restoreKeychains(opts.keychainsExcludePatterns || []);\n      log.info(`Successfully restored keychains after full reset`);\n    } else if (opts.keychainsExcludePatterns || opts.keepKeyChains) {\n      log.warn('Cannot restore keychains after full reset, because ' +\n               'the backup operation did not succeed');\n    }\n  } else if (opts.bundleId) {\n    // fastReset or noReset\n\n    // Terminate the app under test if it is still running on Simulator\n    // Termination is not needed if Simulator is not running\n    if (await device.isRunning()) {\n      if (opts.enforceSimulatorShutdown) {\n        await shutdownSimulator(device);\n      } else {\n        try {\n          await device.simctl.terminateApp(opts.bundleId);\n        } catch (err) {\n          log.warn(`Reset: failed to terminate Simulator application with id \"${opts.bundleId}\"`);\n        }\n      }\n    }\n    if (opts.app) {\n      log.info('Not scrubbing third party app in anticipation of uninstall');\n      return;\n    }\n    const isSafari = (opts.browserName || '').toLowerCase() === 'safari';\n    try {\n      if (isSafari) {\n        await device.cleanSafari();\n      } else {\n        // iOS 8+ does not need basename\n        await device.scrubCustomApp('', opts.bundleId);\n      }\n    } catch (err) {\n      log.warn(err.message);\n      log.warn(`Reset: could not scrub ${isSafari ? 'Safari browser' : 'application with id \"' + opts.bundleId + '\"'}. Leaving as is.`);\n    }\n  }\n}\n\n/**\n * @typedef {Object} InstallOptions\n *\n * @property {?boolean} noReset [false] Whether to disable reset\n * @property {?boolean} newSimulator [false] Whether the simulator is brand new\n */\n\n/**\n * @param {object} device The simulator device object\n * @param {?string} app The app to the path\n * @param {string} bundleId The bundle id to ensure it is already installed and uninstall it\n * @param {?InstallOptions} opts\n */\nasync function installToSimulator (device, app, bundleId, opts = {}) {\n  if (!app) {\n    log.debug('No app path is given. Nothing to install.');\n    return;\n  }\n\n  const {\n    noReset = true,\n    newSimulator = false,\n  } = opts;\n\n  if (!newSimulator && bundleId && await device.isAppInstalled(bundleId)) {\n    if (noReset) {\n      log.debug(`App '${bundleId}' is already installed. No need to reinstall.`);\n      return;\n    }\n    log.debug(`Reset requested. Removing app with id '${bundleId}' from the device`);\n    await device.removeApp(bundleId);\n  }\n\n  log.debug(`Installing '${app}' on Simulator with UUID '${device.udid}'...`);\n  try {\n    await device.installApp(app);\n  } catch (e) {\n    // it sometimes fails on Xcode 10 because of a race condition\n    log.info(`Got an error on '${app}' install: ${e.message}`);\n    log.info('Retrying application install');\n    await device.installApp(app);\n  }\n  log.debug('The app has been installed successfully.');\n}\n\nasync function shutdownOtherSimulators (currentDevice) {\n  const simctl = new Simctl({\n    devicesSetPath: currentDevice.devicesSetPath\n  });\n  const allDevices = _.flatMap(_.values(await simctl.getDevices()));\n  const otherBootedDevices = allDevices.filter((device) => device.udid !== currentDevice.udid && device.state === 'Booted');\n  if (_.isEmpty(otherBootedDevices)) {\n    log.info('No other running simulators have been detected');\n    return;\n  }\n  log.info(`Detected ${otherBootedDevices.length} other running ${util.pluralize('Simulator', otherBootedDevices.length)}.` +\n    `Shutting them down...`);\n  for (const {udid} of otherBootedDevices) {\n    // It is necessary to stop the corresponding xcodebuild process before killing\n    // the simulator, otherwise it will be automatically restarted\n    await resetTestProcesses(udid, true);\n    simctl.udid = udid;\n    await simctl.shutdownDevice();\n  }\n}\n\nasync function launchAndQuitSimulator (sim, opts = {}) {\n  log.debug('No simulator directories found.');\n  const { safari, timeout } = opts;\n  return timeout\n    ? await sim.launchAndQuit(safari, timeout)\n    : await sim.launchAndQuit(safari);\n}\n\nfunction checkPreferences (settings, opts = {}) {\n  for (let setting of settings) {\n    if (_.has(opts, setting)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nasync function setLocaleAndPreferences (sim, opts, safari = false, shutdownFn = _.noop) {\n  const localConfig = await setLocale(sim, opts, {}, safari);\n  const prefsUpdated = await setPreferences(sim, opts, safari);\n  if (localConfig._updated || prefsUpdated) {\n    log.debug('Updated settings. Rebooting the simulator if it is already open');\n    await shutdownFn(sim);\n  } else {\n    log.debug('Setting did not need to be updated');\n  }\n  delete localConfig._updated;\n  return localConfig;\n}\n\n// pass in the simulator so that other systems that use the function can supply\n// whatever they have\nasync function setLocale (sim, opts, localeConfig = {}, safari = false) {\n  if (!opts.language && !opts.locale && !opts.calendarFormat) {\n    log.debug('No reason to set locale');\n    return {\n      _updated: false,\n    };\n  }\n\n  // we need the simulator to have its directories in place\n  if (await sim.isFresh()) {\n    await launchAndQuitSimulator(sim, {\n      safari,\n      timeout: opts.simulatorStartupTimeout,\n    });\n  }\n\n  log.debug('Setting locale information');\n  localeConfig = {\n    language: opts.language || localeConfig.language,\n    locale: opts.locale || localeConfig.locale,\n    calendarFormat: opts.calendarFormat || localeConfig.calendarFormat,\n    _updated: false,\n  };\n\n  try {\n    let updated = await sim.updateLocale(opts.language, opts.locale, opts.calendarFormat);\n    if (updated) {\n      localeConfig._updated = true;\n    }\n  } catch (e) {\n    log.errorAndThrow(`Appium was unable to set locale info: ${e}`);\n  }\n\n  return localeConfig;\n}\n\nasync function setPreferences (sim, opts, safari = false) {\n  let needToSetPrefs = checkPreferences(SETTINGS_CAPS, opts);\n  let needToSetSafariPrefs = checkPreferences(SAFARI_SETTINGS_CAPS, opts);\n  if (!needToSetPrefs && !needToSetSafariPrefs) {\n    log.debug('No iOS / app preferences to set');\n    return false;\n  }\n\n  log.debug('Setting iOS and app preferences');\n\n  if (await sim.isFresh()) {\n    await launchAndQuitSimulator(sim, {\n      safari,\n      timeout: opts.simulatorStartupTimeout,\n    });\n  }\n\n  let updated = false;\n  try {\n    if (needToSetPrefs) {\n      updated = await setLocServicesPrefs(sim, opts);\n    }\n  } catch (e) {\n    log.error('Error setting location services preferences, prefs will not work');\n    log.error(e);\n  }\n\n  try {\n    if (needToSetSafariPrefs) {\n      updated = await setSafariPrefs(sim, opts) || updated;\n    }\n  } catch (e) {\n    log.error('Error setting safari preferences, prefs will not work');\n    log.error(e);\n  }\n\n  return updated;\n}\n\nasync function setLocServicesPrefs (sim, opts = {}) {\n  let locServ = _.find([opts.locationServicesEnabled, opts.locationServicesAuthorized], (c) => !_.isUndefined(c));\n  if (!_.isUndefined(locServ)) {\n    locServ = locServ ? 1 : 0;\n    log.debug(`Setting location services to ${locServ}`);\n    await sim.updateSettings('locationServices', {\n      LocationServicesEnabled: locServ,\n      'LocationServicesEnabledIn7.0': locServ,\n      'LocationServicesEnabledIn8.0': locServ\n    });\n  }\n  if (!_.isUndefined(opts.locationServicesAuthorized)) {\n    if (!opts.bundleId) {\n      let msg = \"Can't set location services for app without bundle ID\";\n      log.errorAndThrow(msg);\n    }\n    let locAuth = !!opts.locationServicesAuthorized;\n    if (locAuth) {\n      log.debug('Authorizing location services for app');\n    } else {\n      log.debug('De-authorizing location services for app');\n    }\n    await sim.updateLocationSettings(opts.bundleId, locAuth);\n  }\n}\n\nasync function setSafariPrefs (sim, opts = {}) {\n  let safariSettings = {};\n\n  if (_.has(opts, 'safariAllowPopups')) {\n    const val = !!opts.safariAllowPopups;\n    log.debug(`Setting javascript window opening to '${val}'`);\n    safariSettings.WebKitJavaScriptCanOpenWindowsAutomatically = val;\n    safariSettings.JavaScriptCanOpenWindowsAutomatically = val;\n  }\n  if (_.has(opts, 'safariIgnoreFraudWarning')) {\n    const val = !opts.safariIgnoreFraudWarning;\n    log.debug(`Setting fraudulent website warning to '${val}'`);\n    safariSettings.WarnAboutFraudulentWebsites = val;\n  }\n  if (_.has(opts, 'safariOpenLinksInBackground')) {\n    const val = opts.safariOpenLinksInBackground ? 1 : 0;\n    log.debug(`Setting opening links in background to '${!!val}'`);\n    safariSettings.OpenLinksInBackground = val;\n  }\n  return (_.size(safariSettings) > 0)\n    ? await sim.updateSafariSettings(safariSettings)\n    : false;\n}\n\nexport {\n  createSim, getExistingSim, runSimulatorReset, installToSimulator,\n  shutdownSimulator, shutdownOtherSimulators,\n  setLocale, setPreferences, setLocaleAndPreferences,\n};\n"],"mappings":"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"}