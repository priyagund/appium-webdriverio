{"version":3,"file":"device-connections-factory.js","names":["LOCALHOST","iProxy","constructor","udid","localport","deviceport","parseInt","localServer","log","logger","getLogger","substring","start","net","createServer","localSocket","remoteSocket","utilities","connectPort","e","debug","message","destroy","destroyCommChannel","unpipe","once","on","warn","pipe","listeningPromise","B","resolve","reject","listen","info","onBeforeProcessExit","_closeLocalServer","bind","process","close","stop","off","PORT_CLOSE_TIMEOUT","SPLITTER","DeviceConnectionsFactory","_connectionsMapping","_udidAsToken","util","hasValue","_portAsToken","port","_toKey","_releaseProxiedConnections","connectionKeys","keys","filter","k","_","has","key","iproxy","listConnections","strict","startsWith","endsWith","requestConnection","options","usePortForwarding","devicePort","size","connectionsOnPort","isEmpty","JSON","stringify","isPortBusy","checkPortStatus","timer","timing","Timer","waitForCondition","getDuration","asMilliSeconds","toFixed","ign","waitMs","intervalMs","Error","currentKey","e1","releaseConnection","DEVICE_CONNECTIONS_FACTORY"],"sources":["../../lib/device-connections-factory.js"],"sourcesContent":["import _ from 'lodash';\nimport net from 'net';\nimport B from 'bluebird';\nimport { logger, util, timing } from 'appium/support';\nimport { utilities } from 'appium-ios-device';\nimport { checkPortStatus } from 'portscanner';\nimport { waitForCondition } from 'asyncbox';\n\n\nconst LOCALHOST = '127.0.0.1';\n\nclass iProxy {\n  constructor (udid, localport, deviceport) {\n    this.localport = parseInt(localport, 10);\n    this.deviceport = parseInt(deviceport, 10);\n    this.udid = udid;\n    this.localServer = null;\n    this.log = logger.getLogger(`iProxy@${udid.substring(0, 8)}:${this.localport}`);\n  }\n\n  async start () {\n    if (this.localServer) {\n      return;\n    }\n\n    this.localServer = net.createServer(async (localSocket) => {\n      let remoteSocket;\n      try {\n        // We can only connect to the remote socket after the local socket connection succeeds\n        remoteSocket = await utilities.connectPort(this.udid, this.deviceport);\n      } catch (e) {\n        this.log.debug(e.message);\n        localSocket.destroy();\n        return;\n      }\n\n      const destroyCommChannel = () => {\n        remoteSocket.unpipe(localSocket);\n        localSocket.unpipe(remoteSocket);\n      };\n      remoteSocket.once('close', () => {\n        destroyCommChannel();\n        localSocket.destroy();\n      });\n      // not all remote socket errors are critical for the user\n      remoteSocket.on('error', (e) => this.log.debug(e));\n      localSocket.once('end', destroyCommChannel);\n      localSocket.once('close', () => {\n        destroyCommChannel();\n        remoteSocket.destroy();\n      });\n      localSocket.on('error', (e) => this.log.warn(e.message));\n      localSocket.pipe(remoteSocket);\n      remoteSocket.pipe(localSocket);\n    });\n    const listeningPromise = new B((resolve, reject) => {\n      this.localServer.once('listening', resolve);\n      this.localServer.once('error', reject);\n    });\n    this.localServer.listen(this.localport);\n    try {\n      await listeningPromise;\n    } catch (e) {\n      this.localServer = null;\n      throw e;\n    }\n    this.localServer.on('error', (e) => this.log.warn(e.message));\n    this.localServer.once('close', (e) => {\n      if (e) {\n        this.log.info(`The connection has been closed with error ${e.message}`);\n      } else {\n        this.log.info(`The connection has been closed`);\n      }\n      this.localServer = null;\n    });\n\n    this.onBeforeProcessExit = this._closeLocalServer.bind(this);\n    // Make sure we free up the socket on process exit\n    process.on('beforeExit', this.onBeforeProcessExit);\n  }\n\n  _closeLocalServer () {\n    if (!this.localServer) {\n      return;\n    }\n\n    this.log.debug(`Closing the connection`);\n    this.localServer.close();\n    this.localServer = null;\n  }\n\n  stop () {\n    if (this.onBeforeProcessExit) {\n      process.off('beforeExit', this.onBeforeProcessExit);\n      this.onBeforeProcessExit = null;\n    }\n\n    this._closeLocalServer();\n  }\n}\n\n\nconst log = logger.getLogger('DevCon Factory');\nconst PORT_CLOSE_TIMEOUT = 15 * 1000; // 15 seconds\nconst SPLITTER = ':';\n\nclass DeviceConnectionsFactory {\n  constructor () {\n    this._connectionsMapping = {};\n  }\n\n  _udidAsToken (udid) {\n    return `${util.hasValue(udid) ? udid : ''}${SPLITTER}`;\n  }\n\n  _portAsToken (port) {\n    return `${SPLITTER}${util.hasValue(port) ? port : ''}`;\n  }\n\n  _toKey (udid = null, port = null) {\n    return `${util.hasValue(udid) ? udid : ''}${SPLITTER}${util.hasValue(port) ? port : ''}`;\n  }\n\n  _releaseProxiedConnections (connectionKeys) {\n    const keys = connectionKeys\n      .filter((k) => _.has(this._connectionsMapping[k], 'iproxy'));\n    for (const key of keys) {\n      log.info(`Releasing the listener for '${key}'`);\n      try {\n        this._connectionsMapping[key].iproxy.stop();\n      } catch (e) {\n        log.debug(e);\n      }\n    }\n    return keys;\n  }\n\n  listConnections (udid = null, port = null, strict = false) {\n    if (!udid && !port) {\n      return [];\n    }\n\n    // `this._connectionMapping` keys have format `udid:port`\n    // the `strict` argument enforces to match keys having both `udid` and `port`\n    // if they are defined\n    // while in non-strict mode keys having any of these are going to be matched\n    return _.keys(this._connectionsMapping)\n      .filter((key) => (strict && udid && port)\n        ? (key === this._toKey(udid, port))\n        : (udid && key.startsWith(this._udidAsToken(udid)) || port && key.endsWith(this._portAsToken(port)))\n      );\n  }\n\n  async requestConnection (udid, port, options = {}) {\n    if (!udid || !port) {\n      log.warn('Did not know how to request the connection:');\n      if (!udid) {\n        log.warn('- Device UDID is unset');\n      }\n      if (!port) {\n        log.warn('- The local port number is unset');\n      }\n      return;\n    }\n\n    const {\n      usePortForwarding,\n      devicePort,\n    } = options;\n\n    log.info(`Requesting connection for device ${udid} on local port ${port}` +\n      (devicePort ? `, device port ${devicePort}` : ''));\n    log.debug(`Cached connections count: ${_.size(this._connectionsMapping)}`);\n    const connectionsOnPort = this.listConnections(null, port);\n    if (!_.isEmpty(connectionsOnPort)) {\n      log.info(`Found cached connections on port #${port}: ${JSON.stringify(connectionsOnPort)}`);\n    }\n\n    if (usePortForwarding) {\n      let isPortBusy = (await checkPortStatus(port, LOCALHOST)) === 'open';\n      if (isPortBusy) {\n        log.warn(`Port #${port} is busy. Did you quit the previous driver session(s) properly?`);\n        if (!_.isEmpty(connectionsOnPort)) {\n          log.info('Trying to release the port');\n          for (const key of this._releaseProxiedConnections(connectionsOnPort)) {\n            delete this._connectionsMapping[key];\n          }\n          const timer = new timing.Timer().start();\n          try {\n            await waitForCondition(async () => {\n              try {\n                if ((await checkPortStatus(port, LOCALHOST)) !== 'open') {\n                  log.info(`Port #${port} has been successfully released after ` +\n                    `${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n                  isPortBusy = false;\n                  return true;\n                }\n              } catch (ign) {}\n              return false;\n            }, {\n              waitMs: PORT_CLOSE_TIMEOUT,\n              intervalMs: 300,\n            });\n          } catch (ign) {\n            log.warn(`Did not know how to release port #${port} in ` +\n              `${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n          }\n        }\n      }\n\n      if (isPortBusy) {\n        throw new Error(`The port #${port} is occupied by an other process. ` +\n          `You can either quit that process or select another free port.`);\n      }\n    }\n    const currentKey = this._toKey(udid, port);\n    if (usePortForwarding) {\n      const iproxy = new iProxy(udid, port, devicePort);\n      try {\n        await iproxy.start();\n        this._connectionsMapping[currentKey] = {iproxy};\n      } catch (e) {\n        try {\n          iproxy.stop();\n        } catch (e1) {\n          log.debug(e1);\n        }\n        throw e;\n      }\n    } else {\n      this._connectionsMapping[currentKey] = {};\n    }\n    log.info(`Successfully requested the connection for ${currentKey}`);\n  }\n\n  releaseConnection (udid = null, port = null) {\n    if (!udid && !port) {\n      log.warn('Neither device UDID nor local port is set. ' +\n        'Did not know how to release the connection');\n      return;\n    }\n    log.info(`Releasing connections for ${udid || 'any'} device on ${port || 'any'} port number`);\n\n    const keys = this.listConnections(udid, port, true);\n    if (_.isEmpty(keys)) {\n      log.info('No cached connections have been found');\n      return;\n    }\n    log.info(`Found cached connections to release: ${JSON.stringify(keys)}`);\n    this._releaseProxiedConnections(keys);\n    for (const key of keys) {\n      delete this._connectionsMapping[key];\n    }\n    log.debug(`Cached connections count: ${_.size(this._connectionsMapping)}`);\n  }\n}\n\nconst DEVICE_CONNECTIONS_FACTORY = new DeviceConnectionsFactory();\n\nexport { DEVICE_CONNECTIONS_FACTORY, DeviceConnectionsFactory };\nexport default DEVICE_CONNECTIONS_FACTORY;\n"],"mappings":"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"}