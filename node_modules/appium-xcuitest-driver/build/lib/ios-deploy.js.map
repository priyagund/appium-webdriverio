{"version":3,"file":"ios-deploy.js","names":["APPLICATION_INSTALLED_NOTIFICATION","INSTALLATION_STAGING_DIR","APPLICATION_NOTIFICATION_TIMEOUT_MS","IOS_DEPLOY_TIMEOUT_MS","IOS_DEPLOY","APP_INSTALL_STRATEGY","Object","freeze","SERIAL","PARALLEL","IOSDeploy","constructor","udid","remove","bundleId","service","services","startInstallationProxyService","uninstallApplication","close","removeApp","install","app","timeout","strategy","_","values","includes","toLower","Error","log","debug","installWithIosDeploy","fs","which","err","exec","stderr","stdout","message","timer","timing","Timer","start","afcService","startAfcService","extractBundleId","bundlePathOnPhone","path","join","pushFolder","timeoutMs","enableParallelPush","installOrUpgradeApplication","isAppInstalled","warn","B","TimeoutError","err1","info","getDuration","asMilliSeconds","toFixed","isUpgrade","notificationService","startNotificationProxyService","installationService","appInstalledNotification","resolve","observeNotification","notification","clientOptions","PackageType","upgradeApplication","installApplication","e","installApp","args","applications","lookupApplications","bundleIds","terminateApp","instrumentService","installProxyService","apps","listApplications","executableName","CFBundleExecutable","startInstrumentService","processes","callChannel","INSTRUMENT_CHANNEL","DEVICE_INFO","process","selector","find","name","PROCESS_CONTROL","pid","getUserInstalledBundleIdsByBundleName","bundleName","applicationType","reduce","acc","CFBundleName","key","push","getPlatformVersion","utilities","getOSVersion"],"sources":["../../lib/ios-deploy.js"],"sourcesContent":["import { fs, timing } from 'appium/support';\nimport path from 'path';\nimport { services, utilities, INSTRUMENT_CHANNEL } from 'appium-ios-device';\nimport B from 'bluebird';\nimport log from './logger';\nimport _ from 'lodash';\nimport { exec } from 'teen_process';\nimport { extractBundleId } from './app-utils';\nimport { pushFolder } from './ios-fs-helpers';\n\nconst APPLICATION_INSTALLED_NOTIFICATION = 'com.apple.mobile.application_installed';\nconst INSTALLATION_STAGING_DIR = 'PublicStaging';\nconst APPLICATION_NOTIFICATION_TIMEOUT_MS = 30 * 1000;\nconst IOS_DEPLOY_TIMEOUT_MS = 4 * 60 * 1000;\nconst IOS_DEPLOY = 'ios-deploy';\nconst APP_INSTALL_STRATEGY = Object.freeze({\n  SERIAL: 'serial',\n  PARALLEL: 'parallel',\n  IOS_DEPLOY,\n});\n\n\nclass IOSDeploy {\n\n  constructor (udid) {\n    this.udid = udid;\n  }\n\n  async remove (bundleId) {\n    const service = await services.startInstallationProxyService(this.udid);\n    try {\n      await service.uninstallApplication(bundleId);\n    } finally {\n      service.close();\n    }\n  }\n\n  async removeApp (bundleId) {\n    await this.remove(bundleId);\n  }\n\n  async install (app, timeout, strategy = null) {\n    if (strategy && !_.values(APP_INSTALL_STRATEGY).includes(_.toLower(strategy))) {\n      throw new Error(`App installation strategy '${strategy}' is unknown. ` +\n        `Only the following strategies are supported: ${_.values(APP_INSTALL_STRATEGY)}`);\n    }\n    log.debug(`Using '${strategy ?? APP_INSTALL_STRATEGY.SERIAL}' app deployment strategy. ` +\n      `You could change it by providing another value to the 'appInstallStrategy' capability`);\n\n    const installWithIosDeploy = async () => {\n      try {\n        await fs.which(IOS_DEPLOY);\n      } catch (err) {\n        throw new Error(`'${IOS_DEPLOY}' utility has not been found in PATH. Is it installed?`);\n      }\n      try {\n        await exec(IOS_DEPLOY, [\n          '--id', this.udid,\n          '--bundle', app,\n        ], {timeout: timeout ?? IOS_DEPLOY_TIMEOUT_MS});\n      } catch (err) {\n        throw new Error(err.stderr || err.stdout || err.message);\n      }\n    };\n\n    const timer = new timing.Timer().start();\n    if (_.toLower(strategy) === APP_INSTALL_STRATEGY.IOS_DEPLOY) {\n      await installWithIosDeploy();\n    } else {\n      const afcService = await services.startAfcService(this.udid);\n      try {\n        const bundleId = await extractBundleId(app);\n        const bundlePathOnPhone = path.join(INSTALLATION_STAGING_DIR, bundleId);\n        await pushFolder(afcService, app, bundlePathOnPhone, {\n          timeoutMs: timeout,\n          enableParallelPush: _.toLower(strategy) === APP_INSTALL_STRATEGY.PARALLEL,\n        });\n        await this.installOrUpgradeApplication(bundlePathOnPhone, await this.isAppInstalled(bundleId));\n      } catch (err) {\n        log.warn(`Error installing app '${app}': ${err.message}`);\n        if (err instanceof B.TimeoutError) {\n          log.warn(`Consider increasing the value of 'appPushTimeout' capability`);\n        }\n        log.warn(`Falling back to '${IOS_DEPLOY}' usage`);\n        try {\n          await installWithIosDeploy();\n        } catch (err1) {\n          throw new Error(`Could not install '${app}':\\n` +\n            `  - ${err.message}\\n` +\n            `  - ${err1.message}`);\n        }\n      } finally {\n        afcService.close();\n      }\n    }\n    log.info(`App installation succeeded after ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n  }\n\n  async installOrUpgradeApplication (bundlePathOnPhone, isUpgrade = false) {\n    const notificationService = await services.startNotificationProxyService(this.udid);\n    const installationService = await services.startInstallationProxyService(this.udid);\n    const appInstalledNotification = new B((resolve) => {\n      notificationService.observeNotification(APPLICATION_INSTALLED_NOTIFICATION, {\n        notification: resolve\n      });\n    });\n    const clientOptions = {PackageType: 'Developer'};\n    try {\n      if (isUpgrade) {\n        log.debug(`An upgrade of the existing application is going to be performed`);\n        await installationService.upgradeApplication(bundlePathOnPhone, clientOptions);\n      } else {\n        log.debug(`A new application installation is going to be performed`);\n        await installationService.installApplication(bundlePathOnPhone, clientOptions);\n      }\n      try {\n        await appInstalledNotification.timeout(APPLICATION_NOTIFICATION_TIMEOUT_MS,\n          `Could not get the application installed notification within ` +\n          `${APPLICATION_NOTIFICATION_TIMEOUT_MS}ms but we will continue`);\n      } catch (e) {\n        log.warn(`Failed to receive the notification. Error: ${e.message}`);\n      }\n    } finally {\n      installationService.close();\n      notificationService.close();\n    }\n  }\n\n  async installApp (...args) {\n    return await this.install(...args);\n  }\n\n  /**\n   * Return an application object if test app has 'bundleid'.\n   * The target bundleid can be User and System apps.\n   * @param {string} bundleId The bundleId to ensure it is installed\n   * @return {boolean} Returns True if the bundleid exists in the result of 'listApplications' like:\n   * { \"com.apple.Preferences\":{\n   *   \"UIRequiredDeviceCapabilities\":[\"arm64\"],\n   *   \"UIRequiresFullScreen\":true,\n   *   \"CFBundleInfoDictionaryVersion\":\"6.0\",\n   *   \"Entitlements\":\n   *     {\"com.apple.frontboard.delete-application-snapshots\":true,..\n   */\n  async isAppInstalled (bundleId) {\n    const service = await services.startInstallationProxyService(this.udid);\n    try {\n      const applications = await service.lookupApplications({ bundleIds: bundleId });\n      return !!applications[bundleId];\n    } finally {\n      service.close();\n    }\n  }\n\n  async terminateApp (bundleId) {\n    let instrumentService;\n    let installProxyService;\n    try {\n      installProxyService = await services.startInstallationProxyService(this.udid);\n      const apps = await installProxyService.listApplications();\n      if (!apps[bundleId]) {\n        log.info(`The bundle id '${bundleId}' did not exist`);\n        return false;\n      }\n      const executableName = apps[bundleId].CFBundleExecutable;\n      log.debug(`The executable name for the bundle id '${bundleId}' was '${executableName}'`);\n      instrumentService = await services.startInstrumentService(this.udid);\n      const processes = await instrumentService.callChannel(INSTRUMENT_CHANNEL.DEVICE_INFO, 'runningProcesses');\n      const process = processes.selector.find((process) => process.name === executableName);\n      if (!process) {\n        log.info(`The process of the bundle id '${bundleId}' was not running`);\n        return false;\n      }\n      await instrumentService.callChannel(INSTRUMENT_CHANNEL.PROCESS_CONTROL, 'killPid:', `${process.pid}`);\n      return true;\n    } catch (err) {\n      log.warn(`Failed to kill '${bundleId}'. Original error: ${err.stderr || err.message}`);\n      return false;\n    } finally {\n      if (installProxyService) {\n        installProxyService.close();\n      }\n      if (instrumentService) {\n        instrumentService.close();\n      }\n    }\n  }\n\n  /**\n   * @param {string} bundleName The name of CFBundleName in Info.plist\n   *\n   * @returns {Array<string>} A list of User level apps' bundle ids which has\n   *                          'CFBundleName' attribute as 'bundleName'.\n   */\n  async getUserInstalledBundleIdsByBundleName (bundleName) {\n    const service = await services.startInstallationProxyService(this.udid);\n    try {\n      const applications = await service.listApplications({applicationType: 'User'});\n      return _.reduce(applications, (acc, {CFBundleName}, key) => {\n        if (CFBundleName === bundleName) {\n          acc.push(key);\n        }\n        return acc;\n      }, []);\n    } finally {\n      service.close();\n    }\n  }\n\n  async getPlatformVersion () {\n    return await utilities.getOSVersion(this.udid);\n  }\n}\n\nexport default IOSDeploy;\n"],"mappings":"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"}