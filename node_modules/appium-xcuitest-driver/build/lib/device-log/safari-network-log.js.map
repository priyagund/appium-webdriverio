{"version":3,"file":"safari-network-log.js","names":["SafariNetworkLog","RotatingLog","constructor","showLogs","getEntry","requestId","outputEntry","logs","length","MAX_LOG_ENTRIES_COUNT","entry","shift","push","logIdxSinceLastRequest","i","splice","addLogLine","method","out","isCapturing","includes","printLogLine","getLogDetails","record","reduce","getRecord","response","url","URL","parse","name","_","last","pathname","split","search","host","status","timing","time","receiveHeadersEnd","responseStart","source","type","initiator","metrics","size","responseBodyBytesReceived","errorText","cancelled","canceled","log","debug","line","stackTrace","functionName","lineNumber","padEnd","truncate","sizeStr","replace","Math","round","util","hasValue","getLogs","map","adjustEntry","Object","assign","level","timestamp","Date","now","message","JSON","stringify"],"sources":["../../../lib/device-log/safari-network-log.js"],"sourcesContent":["import _ from 'lodash';\nimport URL from 'url';\nimport { util } from 'appium/support';\nimport { RotatingLog, MAX_LOG_ENTRIES_COUNT } from './rotating-log';\n\n\nclass SafariNetworkLog extends RotatingLog {\n  constructor (showLogs) {\n    super(showLogs, 'SafariNetwork');\n  }\n\n  getEntry (requestId) {\n    let outputEntry;\n    while (this.logs.length >= MAX_LOG_ENTRIES_COUNT) {\n      // pull the first entry, which is the oldest\n      const entry = this.logs.shift();\n      if (entry && entry.requestId === requestId) {\n        // we are adding to an existing entry, and it was almost removed\n        // add to the end of the list and try again\n        outputEntry = entry;\n        this.logs.push(outputEntry);\n        continue;\n      }\n      // we've removed an element, so the count is down one\n      if (this.logIdxSinceLastRequest > 0) {\n        this.logIdxSinceLastRequest--;\n      }\n    }\n\n\n    if (!outputEntry) {\n      // we do not yes have an entry to associate this bit of output with\n      // most likely the entry will be at the end of the list, so start there\n      for (let i = this.logs.length - 1; i >= 0; i--) {\n        if (this.logs[i].requestId === requestId) {\n          // found it!\n          outputEntry = this.logs[i];\n          // this is now the most current entry, so remove it from the list\n          // to be added to the end below\n          this.logs.splice(i, 1);\n          break;\n        }\n      }\n\n      // nothing has been found, so create a new entry\n      if (!outputEntry) {\n        outputEntry = {\n          requestId,\n          logs: [],\n        };\n      }\n\n      // finally, add the entry to the end of the list\n      this.logs.push(outputEntry);\n    }\n\n    return outputEntry;\n  }\n\n  addLogLine (method, out) {\n    if (!this.isCapturing && !this.showLogs) {\n      // neither capturing nor displaying, so do nothing\n      return;\n    }\n\n    if (['Network.dataReceived'].includes(method)) {\n      // status update, no need to handle\n      return;\n    }\n\n    // events we care about:\n    //   Network.requestWillBeSent\n    //   Network.responseReceived\n    //   Network.loadingFinished\n    //   Network.loadingFailed\n\n    const outputEntry = this.getEntry(out.requestId);\n    if (this.isCapturing) {\n      // now add the output we just received to the logs for this particular entry\n      outputEntry.logs = outputEntry.logs || [];\n\n      outputEntry.logs.push(out);\n    }\n\n    // if we are not displaying the logs,\n    // or we are not finished getting events for this network call,\n    // we are done\n    if (!this.showLogs) {\n      return;\n    }\n\n    if (method === 'Network.loadingFinished' || method === 'Network.loadingFailed') {\n      this.printLogLine(outputEntry);\n    }\n  }\n\n  getLogDetails (outputEntry) {\n    // extract the data\n    const record = outputEntry.logs.reduce(function getRecord (record, entry) {\n      record.requestId = entry.requestId;\n      if (entry.response) {\n        const url = URL.parse(entry.response.url);\n        // get the last part of the url, along with the query string, if possible\n        record.name = `${_.last(url.pathname.split('/'))}${url.search ? `?${url.search}` : ''}` || url.host;\n        record.status = entry.response.status;\n        if (entry.response.timing) {\n          record.time = entry.response.timing.receiveHeadersEnd\n            || entry.response.timing.responseStart\n            || 0;\n        }\n        record.source = entry.response.source;\n      }\n      if (entry.type) {\n        record.type = entry.type;\n      }\n      if (entry.initiator) {\n        record.initiator = entry.initiator;\n      }\n      if (entry.metrics) {\n        // Safari has a `metrics` object on it's `Network.loadingFinished` event\n        record.size = entry.metrics.responseBodyBytesReceived || 0;\n      }\n      if (entry.errorText) {\n        record.errorText = entry.errorText;\n        // When a network call is cancelled, Safari returns `cancelled` as error text\n        // but has a boolean `canceled`. Normalize the two spellings in favor of\n        // the text, which will also be displayed\n        record.cancelled = entry.canceled;\n      }\n      return record;\n    }, {});\n\n    return record;\n  }\n\n  printLogLine (outputEntry) {\n    const {\n      requestId,\n      name,\n      status,\n      type,\n      initiator = {},\n      size = 0,\n      time = 0,\n      source,\n      errorText,\n      cancelled = false,\n    } = this.getLogDetails(outputEntry);\n\n    // print out the record, formatted appropriately\n    this.log.debug(`Network event:`);\n    this.log.debug(`  Id: ${requestId}`);\n    this.log.debug(`  Name: ${name}`);\n    this.log.debug(`  Status: ${status}`);\n    this.log.debug(`  Type: ${type}`);\n    this.log.debug(`  Initiator: ${initiator.type}`);\n    for (const line of (initiator.stackTrace || [])) {\n      const functionName = line.functionName || '(anonymous)';\n\n      const url = (!line.url || line.url === '[native code]')\n        ? ''\n        : `@${_.last((URL.parse(line.url).pathname || '').split('/'))}:${line.lineNumber}`;\n      this.log.debug(`    ${_.padEnd(_.truncate(functionName, {length: 20}), 21)} ${url}`);\n    }\n    // get `memory-cache` or `disk-cache`, etc., right\n    const sizeStr = source.includes('cache') ? ` (from ${source.replace('-', ' ')})` : `${size}B`;\n    this.log.debug(`  Size: ${sizeStr}`);\n    this.log.debug(`  Time: ${Math.round(time)}ms`);\n    if (errorText) {\n      this.log.debug(`  Error: ${errorText}`);\n    }\n    if (util.hasValue(cancelled)) {\n      this.log.debug(`  Cancelled: ${cancelled}`);\n    }\n  }\n\n  async getLogs () {\n    const logs = await super.getLogs();\n    // in order to satisfy certain clients, we need to have a basic structure\n    // to the results, with `level`, `timestamp`, and `message`, which is\n    // all the information stringified\n    return logs.map(function adjustEntry (entry) {\n      return Object.assign({}, entry, {\n        level: 'INFO',\n        timestamp: Date.now(),\n        message: JSON.stringify(entry),\n      });\n    });\n  }\n}\n\nexport { SafariNetworkLog };\nexport default SafariNetworkLog;\n"],"mappings":"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"}