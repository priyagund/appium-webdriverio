{"version":3,"file":"ios-crash-log.js","names":["REAL_DEVICE_MAGIC","MAGIC_SEP","IOSCrashLog","constructor","opts","udid","pyideviceClient","Pyidevice","logDir","path","resolve","process","env","HOME","prevLogs","logsSinceLastRequest","phoneName","sim","_gatherFromRealDevice","assertExists","listCrashes","map","x","crashLogsRoot","utilities","getDeviceName","fs","exists","log","debug","foundFiles","glob","strict","_gatherFromSimulator","B","filter","content","readFile","toUpperCase","includes","err","getCrashes","startCapture","stopCapture","getLogs","crashFiles","diff","_","difference","union","filesToJSON","getAllLogs","logFiles","paths","tmpRoot","tempDir","openDir","fullPath","fileName","last","split","exportCrash","e","warn","message","join","stat","timestamp","ctime","getTime","level","Boolean","rimraf"],"sources":["../../../lib/device-log/ios-crash-log.js"],"sourcesContent":["import { fs, tempDir } from 'appium/support';\nimport B from 'bluebird';\nimport log from '../logger';\nimport { utilities } from 'appium-ios-device';\nimport path from 'path';\nimport _ from 'lodash';\nimport Pyidevice from '../py-ios-device-client';\n\nconst REAL_DEVICE_MAGIC = '3620bbb0-fb9f-4b62-a668-896f2edc4d88';\nconst MAGIC_SEP = '/';\n\n\nclass IOSCrashLog {\n  constructor (opts = {}) {\n    this.udid = opts.udid;\n    this.pyideviceClient = this.udid ? new Pyidevice(this.udid) : null;\n    const logDir = opts.udid\n      ? path.resolve(process.env.HOME, 'Library', 'Logs', 'CrashReporter', 'MobileDevice')\n      : path.resolve(process.env.HOME, 'Library', 'Logs', 'DiagnosticReports');\n    this.logDir = logDir\n      || path.resolve(process.env.HOME || '/', 'Library', 'Logs', 'DiagnosticReports');\n    this.prevLogs = [];\n    this.logsSinceLastRequest = [];\n    this.phoneName = null;\n    this.sim = opts.sim;\n  }\n\n  async _gatherFromRealDevice () {\n    if (await this.pyideviceClient.assertExists(false)) {\n      return (await this.pyideviceClient.listCrashes())\n        .map((x) => `${REAL_DEVICE_MAGIC}${MAGIC_SEP}${x}`);\n    }\n\n    let crashLogsRoot = this.logDir;\n    if (this.udid) {\n      this.phoneName = this.phoneName || await utilities.getDeviceName(this.udid);\n      crashLogsRoot = path.resolve(crashLogsRoot, this.phoneName);\n    }\n    if (!await fs.exists(crashLogsRoot)) {\n      log.debug(`Crash reports root '${crashLogsRoot}' does not exist. Got nothing to gather.`);\n      return [];\n    }\n    const foundFiles = await fs.glob(`${crashLogsRoot}/**/*.crash`, {\n      strict: false\n    });\n    return foundFiles;\n  }\n\n  async _gatherFromSimulator () {\n    if (!await fs.exists(this.logDir)) {\n      log.debug(`Crash reports root '${this.logDir}' does not exist. Got nothing to gather.`);\n      return [];\n    }\n    // The file format has been changed from '.crash' to '.ips' since Monterey.\n    const foundFiles = await fs.glob(`${this.logDir}/**/*.+(crash|ips)`, {\n      strict: false\n    });\n    // For Simulator only include files, that contain current UDID\n    return await B.filter(foundFiles, async (x) => {\n      try {\n        const content = await fs.readFile(x, 'utf8');\n        return content.toUpperCase().includes(this.sim.udid.toUpperCase());\n      } catch (err) {\n        return false;\n      }\n    });\n  }\n\n  async getCrashes () {\n    return this.udid\n      ? await this._gatherFromRealDevice()\n      : await this._gatherFromSimulator();\n  }\n\n  async startCapture () {\n    this.prevLogs = await this.getCrashes();\n  }\n\n  async stopCapture () {\n    // needed for consistent API with other logs\n  }\n\n  async getLogs () {\n    let crashFiles = await this.getCrashes();\n    let diff = _.difference(crashFiles, this.prevLogs, this.logsSinceLastRequest);\n    this.logsSinceLastRequest = _.union(this.logsSinceLastRequest, diff);\n    return await this.filesToJSON(diff);\n  }\n\n  async getAllLogs () {\n    let crashFiles = await this.getCrashes();\n    let logFiles = _.difference(crashFiles, this.prevLogs);\n    return await this.filesToJSON(logFiles);\n  }\n\n  async filesToJSON (paths) {\n    const tmpRoot = await tempDir.openDir();\n    try {\n      return (await B.map(paths, async (fullPath) => {\n        if (_.includes(fullPath, REAL_DEVICE_MAGIC)) {\n          const fileName = _.last(fullPath.split(MAGIC_SEP));\n          try {\n            await this.pyideviceClient.exportCrash(fileName, tmpRoot);\n          } catch (e) {\n            log.warn(`Cannot export the crash report '${fileName}'. Skipping it. ` +\n              `Original error: ${e.message}`);\n            return;\n          }\n          fullPath = path.join(tmpRoot, fileName);\n        }\n        const stat = await fs.stat(fullPath);\n        return {\n          timestamp: stat.ctime.getTime(),\n          level: 'ALL',\n          message: await fs.readFile(fullPath, 'utf8')\n        };\n      })).filter(Boolean);\n    } finally {\n      await fs.rimraf(tmpRoot);\n    }\n  }\n}\n\nexport { IOSCrashLog };\nexport default IOSCrashLog;\n"],"mappings":"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"}