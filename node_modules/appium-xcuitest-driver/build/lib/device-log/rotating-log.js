"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.RotatingLog = exports.MAX_LOG_ENTRIES_COUNT = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _support = require("appium/support");

const MAX_LOG_ENTRIES_COUNT = 10000;
exports.MAX_LOG_ENTRIES_COUNT = MAX_LOG_ENTRIES_COUNT;

class RotatingLog {
  constructor(showLogs = false, label = 'Log Label') {
    this.log = _support.logger.getLogger(label);
    this.showLogs = showLogs;
    this.logs = [];
    this.logIdxSinceLastRequest = 0;
    this.isCapturing = false;
  }

  async startCapture() {
    this.isCapturing = true;
  }

  async stopCapture() {
    this.isCapturing = false;
  }

  addLogLine() {}

  async getLogs() {
    if (this.logs.length && this.logIdxSinceLastRequest < this.logs.length) {
      let result = this.logs;

      if (this.logIdxSinceLastRequest > 0) {
        result = result.slice(this.logIdxSinceLastRequest);
      }

      this.logIdxSinceLastRequest = this.logs.length;
      return result;
    }

    return [];
  }

  async getAllLogs() {
    return _lodash.default.clone(this.logs);
  }

  get logs() {
    if (!this._logs) {
      this.logs = [];
    }

    return this._logs;
  }

  set logs(logs) {
    this._logs = logs;
  }

}

exports.RotatingLog = RotatingLog;
var _default = RotatingLog;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNQVhfTE9HX0VOVFJJRVNfQ09VTlQiLCJSb3RhdGluZ0xvZyIsImNvbnN0cnVjdG9yIiwic2hvd0xvZ3MiLCJsYWJlbCIsImxvZyIsImxvZ2dlciIsImdldExvZ2dlciIsImxvZ3MiLCJsb2dJZHhTaW5jZUxhc3RSZXF1ZXN0IiwiaXNDYXB0dXJpbmciLCJzdGFydENhcHR1cmUiLCJzdG9wQ2FwdHVyZSIsImFkZExvZ0xpbmUiLCJnZXRMb2dzIiwibGVuZ3RoIiwicmVzdWx0Iiwic2xpY2UiLCJnZXRBbGxMb2dzIiwiXyIsImNsb25lIiwiX2xvZ3MiXSwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvZGV2aWNlLWxvZy9yb3RhdGluZy1sb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ2FwcGl1bS9zdXBwb3J0JztcblxuXG5jb25zdCBNQVhfTE9HX0VOVFJJRVNfQ09VTlQgPSAxMDAwMDtcblxuY2xhc3MgUm90YXRpbmdMb2cge1xuICBjb25zdHJ1Y3RvciAoc2hvd0xvZ3MgPSBmYWxzZSwgbGFiZWwgPSAnTG9nIExhYmVsJykge1xuICAgIHRoaXMubG9nID0gbG9nZ2VyLmdldExvZ2dlcihsYWJlbCk7XG5cbiAgICB0aGlzLnNob3dMb2dzID0gc2hvd0xvZ3M7XG4gICAgdGhpcy5sb2dzID0gW107XG4gICAgdGhpcy5sb2dJZHhTaW5jZUxhc3RSZXF1ZXN0ID0gMDtcblxuICAgIHRoaXMuaXNDYXB0dXJpbmcgPSBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIHN0YXJ0Q2FwdHVyZSAoKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVxdWlyZS1hd2FpdFxuICAgIHRoaXMuaXNDYXB0dXJpbmcgPSB0cnVlO1xuICB9XG5cbiAgYXN5bmMgc3RvcENhcHR1cmUgKCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHJlcXVpcmUtYXdhaXRcbiAgICB0aGlzLmlzQ2FwdHVyaW5nID0gZmFsc2U7XG4gIH1cblxuICAvKlxuICAgKiBAb3ZlcnJpZGVcbiAgICovXG4gIGFkZExvZ0xpbmUgKCkge1xuICB9XG5cbiAgYXN5bmMgZ2V0TG9ncyAoKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVxdWlyZS1hd2FpdFxuICAgIGlmICh0aGlzLmxvZ3MubGVuZ3RoICYmIHRoaXMubG9nSWR4U2luY2VMYXN0UmVxdWVzdCA8IHRoaXMubG9ncy5sZW5ndGgpIHtcbiAgICAgIGxldCByZXN1bHQgPSB0aGlzLmxvZ3M7XG4gICAgICBpZiAodGhpcy5sb2dJZHhTaW5jZUxhc3RSZXF1ZXN0ID4gMCkge1xuICAgICAgICByZXN1bHQgPSByZXN1bHQuc2xpY2UodGhpcy5sb2dJZHhTaW5jZUxhc3RSZXF1ZXN0KTtcbiAgICAgIH1cbiAgICAgIHRoaXMubG9nSWR4U2luY2VMYXN0UmVxdWVzdCA9IHRoaXMubG9ncy5sZW5ndGg7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICByZXR1cm4gW107XG4gIH1cblxuICBhc3luYyBnZXRBbGxMb2dzICgpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZXF1aXJlLWF3YWl0XG4gICAgcmV0dXJuIF8uY2xvbmUodGhpcy5sb2dzKTtcbiAgfVxuXG4gIGdldCBsb2dzICgpIHtcbiAgICBpZiAoIXRoaXMuX2xvZ3MpIHtcbiAgICAgIHRoaXMubG9ncyA9IFtdO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fbG9ncztcbiAgfVxuXG4gIHNldCBsb2dzIChsb2dzKSB7XG4gICAgdGhpcy5fbG9ncyA9IGxvZ3M7XG4gIH1cbn1cblxuZXhwb3J0IHsgUm90YXRpbmdMb2csIE1BWF9MT0dfRU5UUklFU19DT1VOVCB9O1xuZXhwb3J0IGRlZmF1bHQgUm90YXRpbmdMb2c7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBR0EsTUFBTUEscUJBQXFCLEdBQUcsS0FBOUI7OztBQUVBLE1BQU1DLFdBQU4sQ0FBa0I7RUFDaEJDLFdBQVcsQ0FBRUMsUUFBUSxHQUFHLEtBQWIsRUFBb0JDLEtBQUssR0FBRyxXQUE1QixFQUF5QztJQUNsRCxLQUFLQyxHQUFMLEdBQVdDLGVBQUEsQ0FBT0MsU0FBUCxDQUFpQkgsS0FBakIsQ0FBWDtJQUVBLEtBQUtELFFBQUwsR0FBZ0JBLFFBQWhCO0lBQ0EsS0FBS0ssSUFBTCxHQUFZLEVBQVo7SUFDQSxLQUFLQyxzQkFBTCxHQUE4QixDQUE5QjtJQUVBLEtBQUtDLFdBQUwsR0FBbUIsS0FBbkI7RUFDRDs7RUFFaUIsTUFBWkMsWUFBWSxHQUFJO0lBQ3BCLEtBQUtELFdBQUwsR0FBbUIsSUFBbkI7RUFDRDs7RUFFZ0IsTUFBWEUsV0FBVyxHQUFJO0lBQ25CLEtBQUtGLFdBQUwsR0FBbUIsS0FBbkI7RUFDRDs7RUFLREcsVUFBVSxHQUFJLENBQ2I7O0VBRVksTUFBUEMsT0FBTyxHQUFJO0lBQ2YsSUFBSSxLQUFLTixJQUFMLENBQVVPLE1BQVYsSUFBb0IsS0FBS04sc0JBQUwsR0FBOEIsS0FBS0QsSUFBTCxDQUFVTyxNQUFoRSxFQUF3RTtNQUN0RSxJQUFJQyxNQUFNLEdBQUcsS0FBS1IsSUFBbEI7O01BQ0EsSUFBSSxLQUFLQyxzQkFBTCxHQUE4QixDQUFsQyxFQUFxQztRQUNuQ08sTUFBTSxHQUFHQSxNQUFNLENBQUNDLEtBQVAsQ0FBYSxLQUFLUixzQkFBbEIsQ0FBVDtNQUNEOztNQUNELEtBQUtBLHNCQUFMLEdBQThCLEtBQUtELElBQUwsQ0FBVU8sTUFBeEM7TUFDQSxPQUFPQyxNQUFQO0lBQ0Q7O0lBQ0QsT0FBTyxFQUFQO0VBQ0Q7O0VBRWUsTUFBVkUsVUFBVSxHQUFJO0lBQ2xCLE9BQU9DLGVBQUEsQ0FBRUMsS0FBRixDQUFRLEtBQUtaLElBQWIsQ0FBUDtFQUNEOztFQUVPLElBQUpBLElBQUksR0FBSTtJQUNWLElBQUksQ0FBQyxLQUFLYSxLQUFWLEVBQWlCO01BQ2YsS0FBS2IsSUFBTCxHQUFZLEVBQVo7SUFDRDs7SUFDRCxPQUFPLEtBQUthLEtBQVo7RUFDRDs7RUFFTyxJQUFKYixJQUFJLENBQUVBLElBQUYsRUFBUTtJQUNkLEtBQUthLEtBQUwsR0FBYWIsSUFBYjtFQUNEOztBQWxEZTs7O2VBc0RIUCxXIn0=