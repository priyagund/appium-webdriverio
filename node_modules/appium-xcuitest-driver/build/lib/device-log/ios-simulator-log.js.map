{"version":3,"file":"ios-simulator-log.js","names":["log","logger","getLogger","START_TIMEOUT","IOSSimulatorLog","IOSLog","constructor","sim","showLogs","xcodeVersion","iosSimulatorLogsPredicate","predicate","proc","startCapture","_","isUndefined","udid","Error","isRunning","spawnArgs","push","debug","exec","join","ign","simctl","spawnSubProcess","finishStartingLogCapture","e","message","errorAndThrow","firstLine","logRow","on","stdout","stderr","endsWith","onOutput","sd","test","start","stopCapture","killLogSubProcess","stop","warn","isCapturing","prefix","logs","cloneDeep","split","logLine","broadcast","space","length","info"],"sources":["../../../lib/device-log/ios-simulator-log.js"],"sourcesContent":["import _ from 'lodash';\nimport { IOSLog } from './ios-log';\nimport { logger } from 'appium/support';\nimport { exec } from 'teen_process';\n\nconst log = logger.getLogger('IOSSimulatorLog');\n\nconst START_TIMEOUT = 10000;\n\nclass IOSSimulatorLog extends IOSLog {\n  constructor ({sim, showLogs, xcodeVersion, iosSimulatorLogsPredicate}) {\n    super();\n    this.sim = sim;\n    this.showLogs = !!showLogs;\n    this.xcodeVersion = xcodeVersion;\n    this.predicate = iosSimulatorLogsPredicate;\n    this.proc = null;\n  }\n\n  async startCapture () {\n    if (_.isUndefined(this.sim.udid)) {\n      throw new Error(`Log capture requires a sim udid`);\n    }\n\n    if (!await this.sim.isRunning()) {\n      throw new Error(`iOS Simulator with udid '${this.sim.udid}' is not running`);\n    }\n    const spawnArgs = [\n      'log',\n      'stream',\n      '--style', 'compact',\n    ];\n    if (this.predicate) {\n      spawnArgs.push('--predicate', this.predicate);\n    }\n    log.debug(`Starting log capture for iOS Simulator with udid '${this.sim.udid}' ` +\n      `using simctl`);\n    try {\n      // cleanup existing listeners if the previous session has not been terminated properly\n      await exec('pkill', ['-f', [this.sim.udid, ...spawnArgs].join(' ')]);\n    } catch (ign) {}\n    try {\n      this.proc = await this.sim.simctl.spawnSubProcess(spawnArgs);\n      await this.finishStartingLogCapture();\n    } catch (e) {\n      throw new Error(`Simulator log capture failed. Original error: ${e.message}`);\n    }\n  }\n\n  async finishStartingLogCapture () {\n    if (!this.proc) {\n      log.errorAndThrow('Could not capture simulator log');\n    }\n    let firstLine = true;\n    let logRow = '';\n    this.proc.on('output', (stdout, stderr) => {\n      if (stdout) {\n        if (firstLine) {\n          if (stdout.endsWith('\\n')) {\n            // don't store the first line of the log because it came before the sim was launched\n            firstLine = false;\n          }\n        } else {\n          logRow += stdout;\n          if (stdout.endsWith('\\n')) {\n            this.onOutput(logRow);\n            logRow = '';\n          }\n        }\n      }\n      if (stderr) {\n        this.onOutput(logRow, 'STDERR');\n      }\n    });\n\n    let sd = (stdout, stderr) => {\n      if (/execvp\\(\\)/.test(stderr)) {\n        throw new Error('iOS log capture process failed to start');\n      }\n      return stdout || stderr;\n    };\n    await this.proc.start(sd, START_TIMEOUT);\n  }\n\n  async stopCapture () {\n    if (!this.proc) {\n      return;\n    }\n    await this.killLogSubProcess();\n    this.proc = null;\n  }\n\n  async killLogSubProcess () {\n    if (!this.proc.isRunning) {\n      return;\n    }\n    log.debug('Stopping iOS log capture');\n    try {\n      await this.proc.stop('SIGTERM', 1000);\n    } catch (e) {\n      if (!this.proc.isRunning) {\n        return;\n      }\n      log.warn('Cannot stop log capture process. Sending SIGKILL');\n      await this.proc.stop('SIGKILL');\n    }\n  }\n\n  get isCapturing () {\n    return this.proc && this.proc.isRunning;\n  }\n\n  onOutput (logRow, prefix = '') {\n    const logs = _.cloneDeep(logRow.split('\\n'));\n    for (const logLine of logs) {\n      if (!logLine) continue; // eslint-disable-line curly\n      this.broadcast(logLine);\n      if (this.showLogs) {\n        const space = prefix.length > 0 ? ' ' : '';\n        log.info(`[IOS_SYSLOG_ROW${space}${prefix}] ${logLine}`);\n      }\n    }\n  }\n}\n\nexport { IOSSimulatorLog };\nexport default IOSSimulatorLog;\n"],"mappings":"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"}