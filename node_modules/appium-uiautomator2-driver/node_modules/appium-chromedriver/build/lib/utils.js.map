{"version":3,"file":"utils.js","names":["CD_CDN","process","env","npm_config_chromedriver_cdnurl","CHROMEDRIVER_CDNURL","OS","linux","windows","mac","X64","X86","M1_ARCH_SUFFIX","CD_EXECUTABLE_PREFIX","MODULE_NAME","getModuleRoot","_","memoize","isFunction","node","getModuleRootSync","existsSync","readFileSync","require","currentDir","path","dirname","resolve","__filename","isAtFsRoot","manifestPath","join","JSON","parse","name","ign","length","Error","root","CHROMEDRIVER_CHROME_MAPPING","CD_BASE_DIR","getMostRecentChromedriver","mapping","isEmpty","last","keys","sort","compareVersions","CD_VER","npm_config_chromedriver_version","CHROMEDRIVER_VERSION","getChromeVersion","adb","bundleId","versionName","getPackageInfo","getChromedriverDir","osName","getOsName","getChromedriverBinaryPath","rootDir","pathSuffix","paths","fs","glob","cwd","absolute","nocase","nodir","strict","first","retrieveData","url","headers","opts","timeout","responseType","axios","data","system","isWindows","isMac","getOsInfo","arch","hardwareName","trim","exec","getBaseDriverInstance","BaseDriver","generateLogPrefix","obj","sessionId","helpers","generateDriverLogPrefix"],"sources":["../../lib/utils.js"],"sourcesContent":["import _ from 'lodash';\nimport { system, fs, node } from 'appium/support';\nimport { BaseDriver } from 'appium/driver';\nimport path from 'path';\nimport { compareVersions } from 'compare-versions';\nimport axios from 'axios';\nimport { exec } from 'teen_process';\n\nconst CD_CDN = process.env.npm_config_chromedriver_cdnurl\n  || process.env.CHROMEDRIVER_CDNURL\n  || 'https://chromedriver.storage.googleapis.com';\nconst OS = {\n  linux: 'linux',\n  windows: 'win',\n  mac: 'mac'\n};\nconst X64 = '64';\nconst X86 = '32';\nconst M1_ARCH_SUFFIX = '_m1';\nconst CD_EXECUTABLE_PREFIX = 'chromedriver';\nconst MODULE_NAME = 'appium-chromedriver';\n\n/**\n * Calculates the path to the current module's root folder\n *\n * @returns {string} The full path to module root\n * @throws {Error} If the current module root folder cannot be determined\n */\nconst getModuleRoot = _.memoize(function getModuleRoot () {\n  // TODO: Get rid of the condition after a while, so clients have enough time to bump their server to v44\n  // TODO: Commit date: 09.09.2022\n  if (!_.isFunction(node.getModuleRootSync)) {\n    const { existsSync, readFileSync } = require('fs');\n    let currentDir = path.dirname(path.resolve(__filename));\n    let isAtFsRoot = false;\n    while (!isAtFsRoot) {\n      const manifestPath = path.join(currentDir, 'package.json');\n      try {\n        if (existsSync(manifestPath) &&\n            JSON.parse(readFileSync(manifestPath, 'utf8')).name === MODULE_NAME) {\n          return currentDir;\n        }\n      } catch (ign) {}\n      currentDir = path.dirname(currentDir);\n      isAtFsRoot = currentDir.length <= path.dirname(currentDir).length;\n    }\n    throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n  }\n\n  const root = node.getModuleRootSync(MODULE_NAME, __filename);\n  if (!root) {\n    throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n  }\n  return root;\n});\n\n// Chromedriver version: minimum Chrome version\nconst CHROMEDRIVER_CHROME_MAPPING = require(path.join(getModuleRoot(), 'config', 'mapping.json'));\nconst CD_BASE_DIR = path.join(getModuleRoot(), 'chromedriver');\n\nfunction getMostRecentChromedriver (mapping = CHROMEDRIVER_CHROME_MAPPING) {\n  if (_.isEmpty(mapping)) {\n    throw new Error('Unable to get most recent Chromedriver version from empty mapping');\n  }\n  return _.last(_.keys(mapping).sort(compareVersions));\n}\n\nconst CD_VER = process.env.npm_config_chromedriver_version\n  || process.env.CHROMEDRIVER_VERSION\n  || getMostRecentChromedriver();\n\nasync function getChromeVersion (adb, bundleId) {\n  const {versionName} = await adb.getPackageInfo(bundleId);\n  return versionName;\n}\n\nfunction getChromedriverDir (osName = getOsName()) {\n  return path.resolve(CD_BASE_DIR, osName);\n}\n\nasync function getChromedriverBinaryPath (osName = getOsName()) {\n  const rootDir = getChromedriverDir(osName);\n  const pathSuffix = osName === OS.windows ? '.exe' : '';\n  const paths = await fs.glob(`${CD_EXECUTABLE_PREFIX}*${pathSuffix}`, {\n    cwd: rootDir,\n    absolute: true,\n    nocase: true,\n    nodir: true,\n    strict: false,\n  });\n  return _.isEmpty(paths)\n    ? path.resolve(rootDir, `${CD_EXECUTABLE_PREFIX}${pathSuffix}`)\n    : _.first(paths);\n}\n\nasync function retrieveData (url, headers, opts = {}) {\n  const {\n    timeout = 5000,\n    responseType = 'text',\n  } = opts;\n  return (await axios({\n    url,\n    headers,\n    timeout,\n    responseType,\n  })).data;\n}\n\nconst getOsName = _.memoize(function getOsName () {\n  if (system.isWindows()) {\n    return OS.windows;\n  }\n  if (system.isMac()) {\n    return OS.mac;\n  }\n  return OS.linux;\n});\n\nconst getOsInfo = _.memoize(async function getOsInfo () {\n  return {\n    name: getOsName(),\n    arch: await system.arch(),\n    hardwareName: system.isWindows() ? null : _.trim(await exec('uname', ['-m'])),\n  };\n});\n\nconst getBaseDriverInstance = _.memoize(() => new BaseDriver({}, false));\n\n/**\n * Generates log prefix string\n *\n * @param {object} obj log owner instance\n * @param {string?} sessionId Optional session identifier\n * @returns {string}\n */\nfunction generateLogPrefix (obj, sessionId = null) {\n  return getBaseDriverInstance().helpers.generateDriverLogPrefix(obj, sessionId);\n}\n\n\nexport {\n  getChromeVersion, getChromedriverDir, getChromedriverBinaryPath, getOsName,\n  CD_BASE_DIR, CD_CDN, CD_VER, CHROMEDRIVER_CHROME_MAPPING, getMostRecentChromedriver,\n  retrieveData, getOsInfo, OS, X64, X86, M1_ARCH_SUFFIX, generateLogPrefix,\n};\n"],"mappings":"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"}