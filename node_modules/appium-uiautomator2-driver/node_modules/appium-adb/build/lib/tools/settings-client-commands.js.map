{"version":3,"file":"settings-client-commands.js","names":["SETTINGS_HELPER_ID","SETTINGS_HELPER_MAIN_ACTIVITY","WIFI_CONNECTION_SETTING_RECEIVER","WIFI_CONNECTION_SETTING_ACTION","DATA_CONNECTION_SETTING_RECEIVER","DATA_CONNECTION_SETTING_ACTION","ANIMATION_SETTING_RECEIVER","ANIMATION_SETTING_ACTION","LOCALE_SETTING_RECEIVER","LOCALE_SETTING_ACTION","LOCATION_SERVICE","LOCATION_RECEIVER","LOCATION_RETRIEVAL_ACTION","CLIPBOARD_RECEIVER","CLIPBOARD_RETRIEVAL_ACTION","NOTIFICATIONS_RETRIEVAL_ACTION","SMS_LIST_RECEIVER","SMS_LIST_RETRIEVAL_ACTION","MEDIA_SCAN_RECEIVER","MEDIA_SCAN_ACTION","APPIUM_IME","UNICODE_IME","DEFAULT_SATELLITES_COUNT","DEFAULT_ALTITUDE","LOCATION_TRACKER_TAG","GPS_CACHE_REFRESHED_LOGS","GPS_COORDINATES_PATTERN","commands","requireRunningSettingsApp","opts","processExists","log","debug","timeout","startApp","pkg","activity","action","category","stopApp","waitForLaunch","waitForCondition","waitMs","intervalMs","err","Error","setWifiState","on","isEmulator","shell","privileged","getApiLevel","setDataState","setAnimationState","setDeviceSysLocaleViaSettingApp","language","country","script","params","toLowerCase","toUpperCase","push","setGeoLocation","location","formatLocationValue","valueName","isRequired","util","hasValue","floatValue","parseFloat","isNaN","_","ceil","longitude","latitude","altitude","speed","args","isNil","satellites","parseInt","Number","length","resetTelnetAuthToken","adbExec","map","arg","replace","getGeoLocation","output","stderr","stdout","message","match","exec","JSON","stringify","refreshGeoLocationCache","timeoutMs","logcatMonitor","monitoringPromise","cmd","adb","defaultArgs","SubProcess","path","timeoutErrorMsg","B","resolve","reject","setTimeout","evt","lines","some","line","x","includes","start","timer","timing","Timer","info","getDuration","asMilliSeconds","toFixed","isRunning","stop","performEditorAction","runInImeContext","getClipboard","retrieveClipboard","trim","getNotifications","parseJsonData","getSmsList","max","typeUnicode","text","pluralize","inputText","imap","encode","scanMedia","destination"],"sources":["../../../lib/tools/settings-client-commands.js"],"sourcesContent":["import log from '../logger.js';\nimport { parseJsonData } from '../helpers.js';\nimport _ from 'lodash';\nimport { util, timing } from '@appium/support';\nimport { waitForCondition } from 'asyncbox';\nimport { imap } from 'utf7';\nimport { SubProcess } from 'teen_process';\nimport B from 'bluebird';\n\nconst SETTINGS_HELPER_ID = 'io.appium.settings';\nconst SETTINGS_HELPER_MAIN_ACTIVITY = '.Settings';\nconst WIFI_CONNECTION_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.WiFiConnectionSettingReceiver`;\nconst WIFI_CONNECTION_SETTING_ACTION = `${SETTINGS_HELPER_ID}.wifi`;\nconst DATA_CONNECTION_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.DataConnectionSettingReceiver`;\nconst DATA_CONNECTION_SETTING_ACTION = `${SETTINGS_HELPER_ID}.data_connection`;\nconst ANIMATION_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.AnimationSettingReceiver`;\nconst ANIMATION_SETTING_ACTION = `${SETTINGS_HELPER_ID}.animation`;\nconst LOCALE_SETTING_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.LocaleSettingReceiver`;\nconst LOCALE_SETTING_ACTION = `${SETTINGS_HELPER_ID}.locale`;\nconst LOCATION_SERVICE = `${SETTINGS_HELPER_ID}/.LocationService`;\nconst LOCATION_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.LocationInfoReceiver`;\nconst LOCATION_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.location`;\nconst CLIPBOARD_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.ClipboardReceiver`;\nconst CLIPBOARD_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.clipboard.get`;\nconst NOTIFICATIONS_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.notifications`;\nconst SMS_LIST_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.SmsReader`;\nconst SMS_LIST_RETRIEVAL_ACTION = `${SETTINGS_HELPER_ID}.sms.read`;\nconst MEDIA_SCAN_RECEIVER = `${SETTINGS_HELPER_ID}/.receivers.MediaScannerReceiver`;\nconst MEDIA_SCAN_ACTION = `${SETTINGS_HELPER_ID}.scan_media`;\nconst APPIUM_IME = `${SETTINGS_HELPER_ID}/.AppiumIME`;\nconst UNICODE_IME = `${SETTINGS_HELPER_ID}/.UnicodeIME`;\nconst DEFAULT_SATELLITES_COUNT = 12;\nconst DEFAULT_ALTITUDE = 0.0;\nconst LOCATION_TRACKER_TAG = 'LocationTracker';\nconst GPS_CACHE_REFRESHED_LOGS = [\n  'The current location has been successfully retrieved from Play Services',\n  'The current location has been successfully retrieved from Location Manager'\n];\n\nconst GPS_COORDINATES_PATTERN = /data=\"(-?[\\d.]+)\\s+(-?[\\d.]+)\\s+(-?[\\d.]+)\"/;\n\nconst commands = {};\n\n/**\n * @typedef {Object} SettingsAppStartupOptions\n * @property {number} timeout [5000] The maximum number of milliseconds\n * to wait until the app has started\n */\n\n/**\n * Ensures that Appium Settings helper application is running\n * and starts it if necessary\n *\n * @param {SettingsAppStartupOptions} opts\n * @throws {Error} If Appium Settings has failed to start\n * @returns {ADB} self instance for chaining\n */\ncommands.requireRunningSettingsApp = async function requireRunningSettingsApp (opts = {}) {\n  if (await this.processExists(SETTINGS_HELPER_ID)) {\n    return this;\n  }\n\n  log.debug('Starting Appium Settings app');\n  const {\n    timeout = 5000,\n  } = opts;\n  await this.startApp({\n    pkg: SETTINGS_HELPER_ID,\n    activity: SETTINGS_HELPER_MAIN_ACTIVITY,\n    action: 'android.intent.action.MAIN',\n    category: 'android.intent.category.LAUNCHER',\n    stopApp: false,\n    waitForLaunch: false,\n  });\n  try {\n    await waitForCondition(async () => await this.processExists(SETTINGS_HELPER_ID), {\n      waitMs: timeout,\n      intervalMs: 300,\n    });\n    return this;\n  } catch (err) {\n    throw new Error(`Appium Settings app is not running after ${timeout}ms`);\n  }\n};\n\n/**\n * Change the state of WiFi on the device under test.\n *\n * @param {boolean} on - True to enable and false to disable it.\n * @param {boolean} isEmulator [false] - Set it to true if the device under test\n *                                       is an emulator rather than a real device.\n */\ncommands.setWifiState = async function setWifiState (on, isEmulator = false) {\n  if (isEmulator) {\n    // The svc command does not require to be root since API 26\n    await this.shell(['svc', 'wifi', on ? 'enable' : 'disable'], {\n      privileged: await this.getApiLevel() < 26,\n    });\n  } else {\n    await this.shell([\n      'am', 'broadcast',\n      '-a', WIFI_CONNECTION_SETTING_ACTION,\n      '-n', WIFI_CONNECTION_SETTING_RECEIVER,\n      '--es', 'setstatus', on ? 'enable' : 'disable'\n    ]);\n  }\n};\n\n/**\n * Change the state of Data transfer on the device under test.\n *\n * @param {boolean} on - True to enable and false to disable it.\n * @param {boolean} isEmulator [false] - Set it to true if the device under test\n *                                       is an emulator rather than a real device.\n */\ncommands.setDataState = async function setDataState (on, isEmulator = false) {\n  if (isEmulator) {\n    // The svc command does not require to be root since API 26\n    await this.shell(['svc', 'data', on ? 'enable' : 'disable'], {\n      privileged: await this.getApiLevel() < 26,\n    });\n  } else {\n    await this.shell([\n      'am', 'broadcast',\n      '-a', DATA_CONNECTION_SETTING_ACTION,\n      '-n', DATA_CONNECTION_SETTING_RECEIVER,\n      '--es', 'setstatus', on ? 'enable' : 'disable'\n    ]);\n  }\n};\n\n/**\n * Change the state of animation on the device under test.\n * Animation on the device is controlled by the following global properties:\n * [ANIMATOR_DURATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#ANIMATOR_DURATION_SCALE},\n * [TRANSITION_ANIMATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#TRANSITION_ANIMATION_SCALE},\n * [WINDOW_ANIMATION_SCALE]{@link https://developer.android.com/reference/android/provider/Settings.Global.html#WINDOW_ANIMATION_SCALE}.\n * This method sets all this properties to 0.0 to disable (1.0 to enable) animation.\n *\n * Turning off animation might be useful to improve stability\n * and reduce tests execution time.\n *\n * @param {boolean} on - True to enable and false to disable it.\n */\ncommands.setAnimationState = async function setAnimationState (on) {\n  await this.shell([\n    'am', 'broadcast',\n    '-a', ANIMATION_SETTING_ACTION,\n    '-n', ANIMATION_SETTING_RECEIVER,\n    '--es', 'setstatus', on ? 'enable' : 'disable'\n  ]);\n};\n\n/**\n * Change the locale on the device under test. Don't need to reboot the device after changing the locale.\n * This method sets an arbitrary locale following:\n *   https://developer.android.com/reference/java/util/Locale.html\n *   https://developer.android.com/reference/java/util/Locale.html#Locale(java.lang.String,%20java.lang.String)\n *\n * @param {string} language - Language. e.g. en, ja\n * @param {string} country - Country. e.g. US, JP\n * @param {?string} script - Script. e.g. Hans in `zh-Hans-CN`\n */\ncommands.setDeviceSysLocaleViaSettingApp = async function setDeviceSysLocaleViaSettingApp (language, country, script = null) {\n  const params = [\n    'am', 'broadcast',\n    '-a', LOCALE_SETTING_ACTION,\n    '-n', LOCALE_SETTING_RECEIVER,\n    '--es', 'lang', language.toLowerCase(),\n    '--es', 'country', country.toUpperCase()\n  ];\n\n  if (script) {\n    params.push('--es', 'script', script);\n  }\n\n  await this.shell(params);\n};\n\n\n/**\n * @typedef {Object} Location\n * @property {number|string} longitude - Valid longitude value.\n * @property {number|string} latitude - Valid latitude value.\n * @property {?number|string} altitude - Valid altitude value.\n * @property {?number|string} satellites [12] - Number of satellites being tracked (1-12).\n * This value is ignored on real devices.\n * @property {?number|string} speed - Valid speed value.\n * Should be greater than 0.0 meters/second for real devices or 0.0 knots\n * for emulators.\n */\n\n/**\n * Emulate geolocation coordinates on the device under test.\n *\n * @param {Location} location - Location object. The `altitude` value is ignored\n * while mocking the position.\n * @param {boolean} isEmulator [false] - Set it to true if the device under test\n *                                       is an emulator rather than a real device.\n */\ncommands.setGeoLocation = async function setGeoLocation (location, isEmulator = false) {\n  const formatLocationValue = (valueName, isRequired = true) => {\n    if (!util.hasValue(location[valueName])) {\n      if (isRequired) {\n        throw new Error(`${valueName} must be provided`);\n      }\n      return null;\n    }\n    const floatValue = parseFloat(location[valueName]);\n    if (!isNaN(floatValue)) {\n      return `${_.ceil(floatValue, 5)}`;\n    }\n    if (isRequired) {\n      throw new Error(`${valueName} is expected to be a valid float number. ` +\n        `'${location[valueName]}' is given instead`);\n    }\n    return null;\n  };\n  const longitude = formatLocationValue('longitude');\n  const latitude = formatLocationValue('latitude');\n  const altitude = formatLocationValue('altitude', false);\n  const speed = formatLocationValue('speed', false);\n  if (isEmulator) {\n    const args = [longitude, latitude];\n    if (!_.isNil(altitude)) {\n      args.push(altitude);\n    }\n    const satellites = parseInt(location.satellites, 10);\n    if (!Number.isNaN(satellites) && satellites > 0 && satellites <= 12) {\n      if (args.length < 3) {\n        args.push(`${DEFAULT_ALTITUDE}`);\n      }\n      args.push(`${satellites}`);\n    }\n    if (!_.isNil(speed)) {\n      if (args.length < 3) {\n        args.push(`${DEFAULT_ALTITUDE}`);\n      }\n      if (args.length < 4) {\n        args.push(`${DEFAULT_SATELLITES_COUNT}`);\n      }\n      args.push(speed);\n    }\n    await this.resetTelnetAuthToken();\n    await this.adbExec(['emu', 'geo', 'fix', ...args]);\n    // A workaround for https://code.google.com/p/android/issues/detail?id=206180\n    await this.adbExec(['emu', 'geo', 'fix', ...(args.map((arg) => arg.replace('.', ',')))]);\n  } else {\n    const args = [\n      'am', (await this.getApiLevel() >= 26) ? 'start-foreground-service' : 'startservice',\n      '-e', 'longitude', longitude,\n      '-e', 'latitude', latitude,\n    ];\n    if (util.hasValue(altitude)) {\n      args.push('-e', 'altitude', altitude);\n    }\n    if (util.hasValue(speed)) {\n      args.push('-e', 'speed', speed);\n    }\n    args.push(LOCATION_SERVICE);\n    await this.shell(args);\n  }\n};\n\n/**\n * Get the current cached GPS location from the device under test.\n *\n * @returns {Location} The current location\n * @throws {Error} If the current location cannot be retrieved\n */\ncommands.getGeoLocation = async function getGeoLocation () {\n  let output;\n  try {\n    output = await this.shell([\n      'am', 'broadcast',\n      '-n', LOCATION_RECEIVER,\n      '-a', LOCATION_RETRIEVAL_ACTION,\n    ]);\n  } catch (err) {\n    throw new Error(`Cannot retrieve the current geo coordinates from the device. ` +\n      `Make sure the Appium Settings application is up to date and has location permissions. Also the location ` +\n      `services must be enabled on the device. Original error: ${err.stderr || err.stdout || err.message}`);\n  }\n\n  const match = GPS_COORDINATES_PATTERN.exec(output);\n  if (!match) {\n    throw new Error(`Cannot parse the actual location values from the command output: ${output}`);\n  }\n  const location = {\n    latitude: match[1],\n    longitude: match[2],\n    altitude: match[3],\n  };\n  log.debug(`Got geo coordinates: ${JSON.stringify(location)}`);\n  return location;\n};\n\n/**\n * Sends an async request to refresh the GPS cache.\n * This feature only works if the device under test has\n * Google Play Services installed. In case the vanilla\n * LocationManager is used the device API level must be at\n * version 30 (Android R) or higher.\n *\n * @param timeoutMs [20000] The maximum number of milliseconds\n * to block until GPS cache is refreshed. Providing zero or a negative\n * value to it skips waiting completely.\n *\n * @throws {Error} If the GPS cache cannot be refreshed.\n */\ncommands.refreshGeoLocationCache = async function refreshGeoLocationCache (timeoutMs = 20000) {\n  let logcatMonitor;\n  let monitoringPromise;\n\n  if (timeoutMs > 0) {\n    const cmd = [\n      ...this.adb.defaultArgs,\n      'logcat', '-s', LOCATION_TRACKER_TAG,\n    ];\n    logcatMonitor = new SubProcess(this.adb.path, cmd);\n    const timeoutErrorMsg = `The GPS cache has not been refreshed within ${timeoutMs}ms timeout. ` +\n      `Please make sure the device under test has Appium Settings app installed and running. ` +\n      `Also, it is required that the device has Google Play Services installed or is running ` +\n      `Android 10+ otherwise.`;\n    monitoringPromise = new B((resolve, reject) => {\n      setTimeout(() => reject(new Error(timeoutErrorMsg)), timeoutMs);\n\n      logcatMonitor.on('exit', () => reject(new Error(timeoutErrorMsg)));\n      ['lines-stderr', 'lines-stdout'].map((evt) => logcatMonitor.on(evt, (lines) => {\n        if (lines.some((line) => GPS_CACHE_REFRESHED_LOGS.some((x) => line.includes(x)))) {\n          resolve();\n        }\n      }));\n    });\n    await logcatMonitor.start(0);\n  }\n\n  try {\n    await this.shell([\n      'am', 'broadcast',\n      '-n', LOCATION_RECEIVER,\n      '-a', LOCATION_RETRIEVAL_ACTION,\n      '--ez', 'forceUpdate', 'true',\n    ]);\n  } catch (err) {\n    throw new Error(`Cannot refresh the GPS cache on the device. ` +\n      `Make sure the Appium Settings application is up to date and has location permissions. Also the location ` +\n      `services must be enabled on the device. Original error: ${err.stderr || err.stdout || err.message}`);\n  }\n\n  if (logcatMonitor && monitoringPromise) {\n    const timer = new timing.Timer().start();\n    log.debug(`Waiting up to ${timeoutMs}ms for the GPS cache to be refreshed`);\n    try {\n      await monitoringPromise;\n      log.info(`The GPS cache has been successfully refreshed after ` +\n        `${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    } finally {\n      if (logcatMonitor.isRunning) {\n        await logcatMonitor.stop();\n      }\n    }\n  } else {\n    log.info('The request to refresh the GPS cache has been sent. Skipping waiting for its result.');\n  }\n};\n\n/**\n * Performs the given editor action on the focused input field.\n * This method requires Appium Settings helper to be installed on the device.\n * No exception is thrown if there was a failure while performing the action.\n * You must investigate the logcat output if something did not work as expected.\n *\n * @param {string|number} action - Either action code or name. The following action\n *                                 names are supported: `normal, unspecified, none,\n *                                 go, search, send, next, done, previous`\n */\ncommands.performEditorAction = async function performEditorAction (action) {\n  log.debug(`Performing editor action: ${action}`);\n  await this.runInImeContext(APPIUM_IME,\n    async () => await this.shell(['input', 'text', `/${action}/`]));\n};\n\n/**\n * Retrieves the text content of the device's clipboard.\n * The method works for Android below and above 29.\n * It temorarily enforces the IME setting in order to workaround\n * security limitations if needed.\n * This method only works if Appium Settings v. 2.15+ is installed\n * on the device under test\n *\n * @returns {string} The actual content of the main clipboard as\n * base64-encoded string or an empty string if the clipboard is empty\n * @throws {Error} If there was a problem while getting the\n * clipboard contant\n */\ncommands.getClipboard = async function getClipboard () {\n  log.debug('Getting the clipboard content');\n  const retrieveClipboard = async () => await this.shell([\n    'am', 'broadcast',\n    '-n', CLIPBOARD_RECEIVER,\n    '-a', CLIPBOARD_RETRIEVAL_ACTION,\n  ]);\n  let output;\n  try {\n    output = (await this.getApiLevel() >= 29)\n      ? (await this.runInImeContext(APPIUM_IME, retrieveClipboard))\n      : (await retrieveClipboard());\n  } catch (err) {\n    throw new Error(`Cannot retrieve the current clipboard content from the device. ` +\n      `Make sure the Appium Settings application is up to date. ` +\n      `Original error: ${err.message}`);\n  }\n\n  const match = /data=\"([^\"]*)\"/.exec(output);\n  if (!match) {\n    throw new Error(`Cannot parse the actual cliboard content from the command output: ${output}`);\n  }\n  return _.trim(match[1]);\n};\n\n/**\n * Retrieves Android notifications via Appium Settings helper.\n * Appium Settings app itself must be *manually* granted to access notifications\n * under device Settings in order to make this feature working.\n * Appium Settings helper keeps all the active notifications plus\n * notifications that appeared while it was running in the internal buffer,\n * but no more than 100 items altogether. Newly appeared notifications\n * are always added to the head of the notifications array.\n * The `isRemoved` flag is set to `true` for notifications that have been removed.\n *\n * See https://developer.android.com/reference/android/service/notification/StatusBarNotification\n * and https://developer.android.com/reference/android/app/Notification.html\n * for more information on available notification properties and their values.\n *\n * @returns {Object} The example output is:\n * ```json\n * {\n *   \"statusBarNotifications\":[\n *     {\n *       \"isGroup\":false,\n *       \"packageName\":\"io.appium.settings\",\n *       \"isClearable\":false,\n *       \"isOngoing\":true,\n *       \"id\":1,\n *       \"tag\":null,\n *       \"notification\":{\n *         \"title\":null,\n *         \"bigTitle\":\"Appium Settings\",\n *         \"text\":null,\n *         \"bigText\":\"Keep this service running, so Appium for Android can properly interact with several system APIs\",\n *         \"tickerText\":null,\n *         \"subText\":null,\n *         \"infoText\":null,\n *         \"template\":\"android.app.Notification$BigTextStyle\"\n *       },\n *       \"userHandle\":0,\n *       \"groupKey\":\"0|io.appium.settings|1|null|10133\",\n *       \"overrideGroupKey\":null,\n *       \"postTime\":1576853518850,\n *       \"key\":\"0|io.appium.settings|1|null|10133\",\n *       \"isRemoved\":false\n *     }\n *   ]\n * }\n * ```\n * @throws {Error} If there was an error while getting the notifications list\n */\ncommands.getNotifications = async function getNotifications () {\n  log.debug('Retrieving notifications');\n  // Somehow providing the `-n` arg to the `am` underneath\n  // renders the broadcast to fail instead of starting the\n  // Appium Settings app. This only happens to the notifications\n  // receiver\n  await this.requireRunningSettingsApp();\n  let output;\n  try {\n    output = await this.shell([\n      'am', 'broadcast',\n      '-a', NOTIFICATIONS_RETRIEVAL_ACTION,\n    ]);\n  } catch (err) {\n    throw new Error(`Cannot retrieve notifications from the device. ` +\n      `Make sure the Appium Settings application is installed and is up to date. ` +\n      `Original error: ${err.message}`);\n  }\n  return parseJsonData(output, 'notifications');\n};\n\n/**\n * @typedef {Object} SmsListOptions\n * @property {number} max [100] - The maximum count of recent messages\n * to retrieve\n */\n\n/**\n * Retrieves the list of the most recent SMS\n * properties list via Appium Settings helper.\n * Messages are sorted by date in descending order.\n *\n * @param {SmsListOptions} opts\n * @returns {Object} The example output is:\n * ```json\n * {\n *   \"items\":[\n *     {\n *       \"id\":\"2\",\n *       \"address\":\"+123456789\",\n *       \"person\":null,\n *       \"date\":\"1581936422203\",\n *       \"read\":\"0\",\n *       \"status\":\"-1\",\n *       \"type\":\"1\",\n *       \"subject\":null,\n *       \"body\":\"\\\"text message2\\\"\",\n *       \"serviceCenter\":null\n *     },\n *     {\n *       \"id\":\"1\",\n *       \"address\":\"+123456789\",\n *       \"person\":null,\n *       \"date\":\"1581936382740\",\n *       \"read\":\"0\",\n *       \"status\":\"-1\",\n *       \"type\":\"1\",\n *       \"subject\":null,\n *       \"body\":\"\\\"text message\\\"\",\n *       \"serviceCenter\":null\n *     }\n *   ],\n *   \"total\":2\n * }\n * ```\n * @throws {Error} If there was an error while getting the SMS list\n */\ncommands.getSmsList = async function getSmsList (opts = {}) {\n  log.debug('Retrieving the recent SMS messages');\n  const args = [\n    'am', 'broadcast',\n    '-n', SMS_LIST_RECEIVER,\n    '-a', SMS_LIST_RETRIEVAL_ACTION,\n  ];\n  if (opts.max) {\n    args.push('--es', 'max', opts.max);\n  }\n  let output;\n  try {\n    output = await this.shell(args);\n  } catch (err) {\n    throw new Error(`Cannot retrieve SMS list from the device. ` +\n      `Make sure the Appium Settings application is installed and is up to date. ` +\n      `Original error: ${err.message}`);\n  }\n  return parseJsonData(output, 'SMS list');\n};\n\n/**\n * Types the given Unicode string.\n * It is expected that the focus is already put\n * to the destination input field before this method is called.\n *\n * @param {string} text The string to type\n * @returns {boolean} `true` if the input text has been successfully sent to adb\n */\ncommands.typeUnicode = async function typeUnicode (text) {\n  if (_.isNil(text)) {\n    return false;\n  }\n\n  text = `${text}`;\n  log.debug(`Typing ${util.pluralize('character', text.length, true)}`);\n  if (!text) {\n    return false;\n  }\n  await this.runInImeContext(\n    UNICODE_IME, async () => await this.inputText(imap.encode(text))\n  );\n  return true;\n};\n\n/**\n * Performs recursive media scan at the given destination.\n * All successfully scanned items are being added to the device's\n * media library.\n *\n * @param {string} destination File/folder path on the remote device.\n * @throws {Error} If there was an unexpected error by scanning.\n */\ncommands.scanMedia = async function scanMedia (destination) {\n  log.debug(`Scanning '${destination}' for media files`);\n  const output = await this.shell([\n    'am', 'broadcast',\n    '-n', MEDIA_SCAN_RECEIVER,\n    '-a', MEDIA_SCAN_ACTION,\n    '--es', 'path', destination\n  ]);\n  if (!_.includes(output, 'result=-1')) {\n    throw new Error(`No media could be scanned at '${destination}'. ` +\n      `Check the device logcat output for more details.`);\n  }\n};\n\nexport default commands;\n"],"mappings":"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"}